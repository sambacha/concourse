(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}




var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log = F2(function(tag, value)
{
	return value;
});

var _Debug_log_UNUSED = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString(value)
{
	return '<internals>';
}

function _Debug_toString_UNUSED(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[94m' + string + '\x1b[0m' : string;
}



// CRASH


function _Debug_crash(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.hD.ed === region.dL.ed)
	{
		return 'on line ' + region.hD.ed;
	}
	return 'on lines ' + region.hD.ed + ' through ' + region.dL.ed;
}



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	/**_UNUSED/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**_UNUSED/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**/
	if (!x.$)
	//*/
	/**_UNUSED/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0 = 0;
var _Utils_Tuple0_UNUSED = { $: '#0' };

function _Utils_Tuple2(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr(c) { return c; }
function _Utils_chr_UNUSED(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil = { $: 0 };
var _List_Nil_UNUSED = { $: '[]' };

function _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return word
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800)
			+
			String.fromCharCode(code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**_UNUSED/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }
function _Json_unwrap_UNUSED(value) { return value.a; }

function _Json_wrap(value) { return value; }
function _Json_unwrap(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.gk,
		impl.h3,
		impl.hL,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);
	var managers = {};
	result = init(result.a);
	var model = result.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		result = A2(update, msg, model);
		stepper(model = result.a, viewMetadata);
		_Platform_dispatchEffects(managers, result.b, subscriptions(model));
	}

	_Platform_dispatchEffects(managers, result.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				p: bag.n,
				q: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.q)
		{
			x = temp.p(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		r: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].r;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		r: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].r;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**/
	var node = args['node'];
	//*/
	/**_UNUSED/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS


function _VirtualDom_noScript(tag)
{
	return tag == 'script' ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return /^(on|formAction$)/i.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,'')) ? '' : value;
}

function _VirtualDom_noJavaScriptUri_UNUSED(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,''))
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value) ? '' : value;
}

function _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value)
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		bW: func(record.bW),
		ch: record.ch,
		b4: record.b4
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		typeof value !== 'undefined'
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		typeof value !== 'undefined'
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.bW;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.ch;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.b4) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		var newMatch = undefined;
		var oldMatch = undefined;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}




// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.gk,
		impl.h3,
		impl.hL,
		function(sendToApp, initialModel) {
			var view = impl.h9;
			/**/
			var domNode = args['node'];
			//*/
			/**_UNUSED/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.gk,
		impl.h3,
		impl.hL,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.c6 && impl.c6(sendToApp)
			var view = impl.h9;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.N);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.hW) && (_VirtualDom_doc.title = title = doc.hW);
			});
		}
	);
});



// ANIMATION


var _Browser_cancelAnimationFrame =
	typeof cancelAnimationFrame !== 'undefined'
		? cancelAnimationFrame
		: function(id) { clearTimeout(id); };

var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { return setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.g0;
	var onUrlRequest = impl.g1;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		c6: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.hh === next.hh
							&& curr.gc === next.gc
							&& curr.hf.a === next.hf.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		gk: function(flags)
		{
			return A3(impl.gk, flags, _Browser_getUrl(), key);
		},
		h9: impl.h9,
		h3: impl.h3,
		hL: impl.hL
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { f8: 'hidden', fk: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { f8: 'mozHidden', fk: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { f8: 'msHidden', fk: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { f8: 'webkitHidden', fk: 'webkitvisibilitychange' }
		: { f8: 'hidden', fk: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = _Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			_Browser_cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		ho: _Browser_getScene(),
		ia: {
			$7: _Browser_window.pageXOffset,
			$8: _Browser_window.pageYOffset,
			e$: _Browser_doc.documentElement.clientWidth,
			be: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		e$: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		be: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			ho: {
				e$: node.scrollWidth,
				be: node.scrollHeight
			},
			ia: {
				$7: node.scrollLeft,
				$8: node.scrollTop,
				e$: node.clientWidth,
				be: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			ho: _Browser_getScene(),
			ia: {
				$7: x,
				$8: y,
				e$: _Browser_doc.documentElement.clientWidth,
				be: _Browser_doc.documentElement.clientHeight
			},
			fH: {
				$7: x + rect.left,
				$8: y + rect.top,
				e$: rect.width,
				be: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}



// SEND REQUEST

var _Http_toTask = F2(function(request, maybeProgress)
{
	return _Scheduler_binding(function(callback)
	{
		var xhr = new XMLHttpRequest();

		_Http_configureProgress(xhr, maybeProgress);

		xhr.addEventListener('error', function() {
			callback(_Scheduler_fail($elm$http$Http$NetworkError));
		});
		xhr.addEventListener('timeout', function() {
			callback(_Scheduler_fail($elm$http$Http$Timeout));
		});
		xhr.addEventListener('load', function() {
			callback(_Http_handleResponse(xhr, request.ad.a));
		});

		try
		{
			xhr.open(request.Z, request.h4, true);
		}
		catch (e)
		{
			return callback(_Scheduler_fail($elm$http$Http$BadUrl(request.h4)));
		}

		_Http_configureRequest(xhr, request);

		var body = request.N;
		xhr.send($elm$http$Http$Internal$isStringBody(body)
			? (xhr.setRequestHeader('Content-Type', body.a), body.b)
			: body.a
		);

		return function() { xhr.abort(); };
	});
});

function _Http_configureProgress(xhr, maybeProgress)
{
	if (!$elm$core$Maybe$isJust(maybeProgress))
	{
		return;
	}

	xhr.addEventListener('progress', function(event) {
		if (!event.lengthComputable)
		{
			return;
		}
		_Scheduler_rawSpawn(maybeProgress.a({
			fg: event.loaded,
			fh: event.total
		}));
	});
}

function _Http_configureRequest(xhr, request)
{
	for (var headers = request.U; headers.b; headers = headers.b) // WHILE_CONS
	{
		xhr.setRequestHeader(headers.a.a, headers.a.b);
	}

	xhr.responseType = request.ad.b;
	xhr.withCredentials = request.id;

	$elm$core$Maybe$isJust(request.hV) && (xhr.timeout = request.hV.a);
}


// RESPONSES

function _Http_handleResponse(xhr, responseToResult)
{
	var response = _Http_toResponse(xhr);

	if (xhr.status < 200 || 300 <= xhr.status)
	{
		response.body = xhr.responseText;
		return _Scheduler_fail($elm$http$Http$BadStatus(response));
	}

	var result = responseToResult(response);

	if ($elm$core$Result$isOk(result))
	{
		return _Scheduler_succeed(result.a);
	}
	else
	{
		response.body = xhr.responseText;
		return _Scheduler_fail(A2($elm$http$Http$BadPayload, result.a, response));
	}
}

function _Http_toResponse(xhr)
{
	return {
		h4: xhr.responseURL,
		hH: { fq: xhr.status, bW: xhr.statusText },
		U: _Http_parseHeaders(xhr.getAllResponseHeaders()),
		N: xhr.response
	};
}

function _Http_parseHeaders(rawHeaders)
{
	var headers = $elm$core$Dict$empty;

	if (!rawHeaders)
	{
		return headers;
	}

	var headerPairs = rawHeaders.split('\u000d\u000a');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf('\u003a\u0020');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3($elm$core$Dict$update, key, function(oldValue) {
				return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)
					? value + ', ' + oldValue.a
					: value
				);
			}, headers);
		}
	}

	return headers;
}


// EXPECTORS

function _Http_expectStringResponse(responseToResult)
{
	return {
		$: 0,
		b: 'text',
		a: responseToResult
	};
}

var _Http_mapExpect = F2(function(func, expect)
{
	return {
		$: 0,
		b: expect.b,
		a: function(response) {
			var convertedResponse = expect.a(response);
			return A2($elm$core$Result$map, func, convertedResponse);
		}
	};
});


// BODY

function _Http_multipart(parts)
{


	for (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS
	{
		var part = parts.a;
		formData.append(part.a, part.b);
	}

	return $elm$http$Http$Internal$FormDataBody(formData);
}



function _Time_now(millisToPosix)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(millisToPosix(Date.now())));
	});
}

var _Time_setInterval = F2(function(interval, task)
{
	return _Scheduler_binding(function(callback)
	{
		var id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);
		return function() { clearInterval(id); };
	});
});

function _Time_here()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(
			A2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)
		));
	});
}


function _Time_getZoneName()
{
	return _Scheduler_binding(function(callback)
	{
		try
		{
			var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
		}
		catch (e)
		{
			var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
		}
		callback(_Scheduler_succeed(name));
	});
}


function _Url_percentEncode(string)
{
	return encodeURIComponent(string);
}

function _Url_percentDecode(string)
{
	try
	{
		return $elm$core$Maybe$Just(decodeURIComponent(string));
	}
	catch (e)
	{
		return $elm$core$Maybe$Nothing;
	}
}



// STRINGS


var _Parser_isSubString = F5(function(smallString, offset, row, col, bigString)
{
	var smallLength = smallString.length;
	var isGood = offset + smallLength <= bigString.length;

	for (var i = 0; isGood && i < smallLength; )
	{
		var code = bigString.charCodeAt(offset);
		isGood =
			smallString[i++] === bigString[offset++]
			&& (
				code === 0x000A /* \n */
					? ( row++, col=1 )
					: ( col++, (code & 0xF800) === 0xD800 ? smallString[i++] === bigString[offset++] : 1 )
			)
	}

	return _Utils_Tuple3(isGood ? offset : -1, row, col);
});



// CHARS


var _Parser_isSubChar = F3(function(predicate, offset, string)
{
	return (
		string.length <= offset
			? -1
			:
		(string.charCodeAt(offset) & 0xF800) === 0xD800
			? (predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1)
			:
		(predicate(_Utils_chr(string[offset]))
			? ((string[offset] === '\n') ? -2 : (offset + 1))
			: -1
		)
	);
});


var _Parser_isAsciiCode = F3(function(code, offset, string)
{
	return string.charCodeAt(offset) === code;
});



// NUMBERS


var _Parser_chompBase10 = F2(function(offset, string)
{
	for (; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (code < 0x30 || 0x39 < code)
		{
			return offset;
		}
	}
	return offset;
});


var _Parser_consumeBase = F3(function(base, offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var digit = string.charCodeAt(offset) - 0x30;
		if (digit < 0 || base <= digit) break;
		total = base * total + digit;
	}
	return _Utils_Tuple2(offset, total);
});


var _Parser_consumeBase16 = F2(function(offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (0x30 <= code && code <= 0x39)
		{
			total = 16 * total + code - 0x30;
		}
		else if (0x41 <= code && code <= 0x46)
		{
			total = 16 * total + code - 55;
		}
		else if (0x61 <= code && code <= 0x66)
		{
			total = 16 * total + code - 87;
		}
		else
		{
			break;
		}
	}
	return _Utils_Tuple2(offset, total);
});



// FIND STRING


var _Parser_findSubString = F5(function(smallString, offset, row, col, bigString)
{
	var newOffset = bigString.indexOf(smallString, offset);
	var target = newOffset < 0 ? bigString.length : newOffset + smallString.length;

	while (offset < target)
	{
		var code = bigString.charCodeAt(offset++);
		code === 0x000A /* \n */
			? ( col=1, row++ )
			: ( col++, (code & 0xF800) === 0xD800 && offset++ )
	}

	return _Utils_Tuple3(newOffset, row, col);
});



var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});
var $author$project$Message$TopLevelMessage$DeliveryReceived = function (a) {
	return {$: 2, a: a};
};
var $author$project$Message$Subscription$UrlRequest = function (a) {
	return {$: 9, a: a};
};
var $elm$core$List$cons = _List_cons;
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (!node.$) {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === -2) {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Basics$EQ = 1;
var $elm$core$Basics$GT = 2;
var $elm$core$Basics$LT = 0;
var $elm$core$Result$Err = function (a) {
	return {$: 1, a: a};
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 0, a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 2, a: a};
};
var $elm$core$Basics$False = 1;
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Maybe$Nothing = {$: 1};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 0:
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 1) {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 1:
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 2:
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.n) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.p),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.p);
		} else {
			var treeLen = builder.n * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.q) : builder.q;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.n);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.p) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.p);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{q: nodeList, n: (len / $elm$core$Array$branchFactor) | 0, p: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = 0;
var $elm$core$Result$isOk = function (result) {
	if (!result.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Browser$External = function (a) {
	return {$: 1, a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;
var $elm$url$Url$Http = 0;
var $elm$url$Url$Https = 1;
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {f3: fragment, gc: host, g7: path, hf: port_, hh: protocol, al: query};
	});
var $elm$core$String$contains = _String_contains;
var $elm$core$String$length = _String_length;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 1) {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		0,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		1,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$core$Task$Perform = $elm$core$Basics$identity;
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(0);
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return 0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0;
		return A2($elm$core$Task$map, tagger, task);
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			A2($elm$core$Task$map, toMessage, task));
	});
var $elm$browser$Browser$application = _Browser_application;
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $elm$json$Json$Decode$field = _Json_decodeField;
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $author$project$Message$TopLevelMessage$Callback = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Platform$Cmd$map = _Platform_map;
var $author$project$Api$Endpoints$AbortBuild = 3;
var $author$project$Message$Callback$AllJobsFetched = function (a) {
	return {$: 26, a: a};
};
var $author$project$Message$Callback$AllPipelinesFetched = function (a) {
	return {$: 37, a: a};
};
var $author$project$Message$Callback$AllResourcesFetched = function (a) {
	return {$: 27, a: a};
};
var $author$project$Message$Callback$AllTeamsFetched = function (a) {
	return {$: 25, a: a};
};
var $author$project$Api$Endpoints$BaseBuild = 0;
var $author$project$Api$Endpoints$BaseJob = 0;
var $author$project$Api$Endpoints$BasePipeline = 0;
var $author$project$Api$Endpoints$BaseResource = 0;
var $author$project$Api$Endpoints$Build = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Message$Callback$BuildAborted = function (a) {
	return {$: 35, a: a};
};
var $author$project$Assets$BuildFavicon = function (a) {
	return {$: 6, a: a};
};
var $author$project$Message$Callback$BuildFetched = function (a) {
	return {$: 31, a: a};
};
var $author$project$Message$Callback$BuildHistoryFetched = function (a) {
	return {$: 33, a: a};
};
var $author$project$Message$Callback$BuildJobDetailsFetched = function (a) {
	return {$: 30, a: a};
};
var $author$project$Api$Endpoints$BuildPlan = 1;
var $author$project$Api$Endpoints$BuildPrep = 2;
var $author$project$Message$Callback$BuildPrepFetched = F2(
	function (a, b) {
		return {$: 32, a: a, b: b};
	});
var $author$project$Message$Callback$BuildResourcesFetched = function (a) {
	return {$: 13, a: a};
};
var $author$project$Api$Endpoints$BuildResourcesList = 4;
var $author$project$Message$Callback$BuildTriggered = function (a) {
	return {$: 3, a: a};
};
var $author$project$Api$Endpoints$Check = function (a) {
	return {$: 9, a: a};
};
var $author$project$Api$Endpoints$CheckResource = 3;
var $author$project$Message$Callback$Checked = function (a) {
	return {$: 23, a: a};
};
var $author$project$Api$Endpoints$ClusterInfo = {$: 12};
var $author$project$Message$Callback$ClusterInfoFetched = function (a) {
	return {$: 16, a: a};
};
var $author$project$Message$Callback$CommentSet = function (a) {
	return {$: 24, a: a};
};
var $author$project$Api$Endpoints$DisableResourceVersion = 4;
var $author$project$Message$Callback$EmptyCallback = {$: 0};
var $author$project$Api$Endpoints$EnableResourceVersion = 3;
var $author$project$Api$Endpoints$ExposePipeline = 3;
var $author$project$Message$Callback$GotCurrentTime = function (a) {
	return {$: 1, a: a};
};
var $author$project$Message$Callback$GotCurrentTimeZone = function (a) {
	return {$: 2, a: a};
};
var $author$project$Message$Callback$GotElement = function (a) {
	return {$: 39, a: a};
};
var $author$project$Message$Callback$GotViewport = F2(
	function (a, b) {
		return {$: 38, a: a, b: b};
	});
var $author$project$Api$Endpoints$HidePipeline = 4;
var $author$project$Message$Callback$InputToFetched = function (a) {
	return {$: 18, a: a};
};
var $author$project$Api$Endpoints$Job = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $author$project$Api$Endpoints$JobBuild = function (a) {
	return {$: 4, a: a};
};
var $author$project$Message$Callback$JobBuildsFetched = function (a) {
	return {$: 4, a: a};
};
var $author$project$Api$Endpoints$JobBuildsList = 3;
var $author$project$Message$Callback$JobFetched = function (a) {
	return {$: 5, a: a};
};
var $author$project$Message$Callback$JobsFetched = function (a) {
	return {$: 6, a: a};
};
var $author$project$Api$Endpoints$JobsList = {$: 2};
var $author$project$Message$Callback$LoggedOut = function (a) {
	return {$: 28, a: a};
};
var $author$project$Api$Endpoints$Logout = {$: 15};
var $author$project$Api$Endpoints$OrderTeamPipelines = 1;
var $author$project$Message$Callback$OutputOfFetched = function (a) {
	return {$: 19, a: a};
};
var $author$project$Api$Endpoints$PauseJob = 1;
var $author$project$Api$Endpoints$PausePipeline = 1;
var $author$project$Message$Callback$PausedToggled = function (a) {
	return {$: 17, a: a};
};
var $author$project$Api$Endpoints$PinResourceComment = 4;
var $author$project$Api$Endpoints$PinResourceVersion = 2;
var $author$project$Api$Endpoints$Pipeline = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Message$Callback$PipelineFetched = function (a) {
	return {$: 7, a: a};
};
var $author$project$Api$Endpoints$PipelineJobsList = 5;
var $author$project$Api$Endpoints$PipelineResourcesList = 6;
var $author$project$Message$Callback$PipelineToggled = F2(
	function (a, b) {
		return {$: 9, a: a, b: b};
	});
var $author$project$Message$Callback$PipelinesFetched = function (a) {
	return {$: 8, a: a};
};
var $author$project$Api$Endpoints$PipelinesList = {$: 0};
var $author$project$Message$Callback$PipelinesOrdered = F2(
	function (a, b) {
		return {$: 10, a: a, b: b};
	});
var $author$project$Message$Callback$PlanAndResourcesFetched = F2(
	function (a, b) {
		return {$: 34, a: a, b: b};
	});
var $author$project$Api$Endpoints$Resource = F2(
	function (a, b) {
		return {$: 7, a: a, b: b};
	});
var $author$project$Message$Callback$ResourceFetched = function (a) {
	return {$: 14, a: a};
};
var $author$project$Api$Endpoints$ResourceVersion = F2(
	function (a, b) {
		return {$: 8, a: a, b: b};
	});
var $author$project$Api$Endpoints$ResourceVersionInputTo = 0;
var $author$project$Api$Endpoints$ResourceVersionOutputOf = 1;
var $author$project$Api$Endpoints$ResourceVersionsList = 1;
var $author$project$Message$Callback$ResourcesFetched = function (a) {
	return {$: 12, a: a};
};
var $author$project$Api$Endpoints$ResourcesList = {$: 6};
var $author$project$Message$Callback$ScreenResized = function (a) {
	return {$: 29, a: a};
};
var $author$project$Api$Endpoints$Team = F2(
	function (a, b) {
		return {$: 11, a: a, b: b};
	});
var $author$project$Api$Endpoints$TeamPipelinesList = 0;
var $author$project$Api$Endpoints$TeamsList = {$: 10};
var $author$project$Api$Endpoints$UnpauseJob = 2;
var $author$project$Api$Endpoints$UnpausePipeline = 2;
var $author$project$Api$Endpoints$UnpinResource = 2;
var $author$project$Message$Callback$UserFetched = function (a) {
	return {$: 11, a: a};
};
var $author$project$Api$Endpoints$UserInfo = {$: 14};
var $author$project$Message$Callback$VersionPinned = function (a) {
	return {$: 20, a: a};
};
var $author$project$Message$Callback$VersionToggled = F3(
	function (a, b, c) {
		return {$: 22, a: a, b: b, c: c};
	});
var $author$project$Message$Callback$VersionUnpinned = function (a) {
	return {$: 21, a: a};
};
var $author$project$Message$Callback$VersionedResourcesFetched = function (a) {
	return {$: 15, a: a};
};
var $author$project$Message$Callback$VisibilityChanged = F3(
	function (a, b, c) {
		return {$: 36, a: a, b: b, c: c};
	});
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $elm$core$Task$onError = _Scheduler_onError;
var $elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return $elm$core$Task$command(
			A2(
				$elm$core$Task$onError,
				A2(
					$elm$core$Basics$composeL,
					A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
					$elm$core$Result$Err),
				A2(
					$elm$core$Task$andThen,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
						$elm$core$Result$Ok),
					task)));
	});
var $elm$browser$Browser$Dom$blur = _Browser_call('blur');
var $elm$json$Json$Encode$string = _Json_wrap;
var $author$project$Message$Effects$checkIsVisible = _Platform_outgoingPort('checkIsVisible', $elm$json$Json$Encode$string);
var $elm$json$Json$Encode$null = _Json_encodeNull;
var $author$project$Message$Effects$closeEventStream = _Platform_outgoingPort(
	'closeEventStream',
	function ($) {
		return $elm$json$Json$Encode$null;
	});
var $author$project$Concourse$Build = F6(
	function (id, name, job, status, duration, reapTime) {
		return {cv: duration, L: id, gF: job, bX: name, bs: reapTime, hH: status};
	});
var $author$project$Concourse$BuildDuration = F2(
	function (startedAt, finishedAt) {
		return {dQ: finishedAt, eR: startedAt};
	});
var $author$project$Concourse$JobIdentifier = F3(
	function (teamName, pipelineName, jobName) {
		return {d7: jobName, c_: pipelineName, dh: teamName};
	});
var $elm_community$json_extra$Json$Decode$Extra$andMap = $elm$json$Json$Decode$map2($elm$core$Basics$apR);
var $elm$time$Time$Posix = $elm$core$Basics$identity;
var $elm$time$Time$millisToPosix = $elm$core$Basics$identity;
var $author$project$Concourse$dateFromSeconds = A2(
	$elm$core$Basics$composeL,
	$elm$time$Time$millisToPosix,
	$elm$core$Basics$mul(1000));
var $author$project$Concourse$BuildStatus$BuildStatusAborted = 5;
var $author$project$Concourse$BuildStatus$BuildStatusErrored = 4;
var $author$project$Concourse$BuildStatus$BuildStatusFailed = 3;
var $author$project$Concourse$BuildStatus$BuildStatusPending = 0;
var $author$project$Concourse$BuildStatus$BuildStatusStarted = 1;
var $author$project$Concourse$BuildStatus$BuildStatusSucceeded = 2;
var $elm$json$Json$Decode$fail = _Json_fail;
var $elm$json$Json$Decode$string = _Json_decodeString;
var $author$project$Concourse$BuildStatus$decodeBuildStatus = A2(
	$elm$json$Json$Decode$andThen,
	function (status) {
		switch (status) {
			case 'pending':
				return $elm$json$Json$Decode$succeed(0);
			case 'started':
				return $elm$json$Json$Decode$succeed(1);
			case 'succeeded':
				return $elm$json$Json$Decode$succeed(2);
			case 'failed':
				return $elm$json$Json$Decode$succeed(3);
			case 'errored':
				return $elm$json$Json$Decode$succeed(4);
			case 'aborted':
				return $elm$json$Json$Decode$succeed(5);
			default:
				var unknown = status;
				return $elm$json$Json$Decode$fail('unknown build status: ' + unknown);
		}
	},
	$elm$json$Json$Decode$string);
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
var $elm$json$Json$Decode$maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
			]));
};
var $author$project$Concourse$decodeBuild = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	$elm$json$Json$Decode$maybe(
		A2(
			$elm$json$Json$Decode$field,
			'reap_time',
			A2($elm$json$Json$Decode$map, $author$project$Concourse$dateFromSeconds, $elm$json$Json$Decode$int))),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			$elm$json$Json$Decode$maybe(
				A2(
					$elm$json$Json$Decode$field,
					'end_time',
					A2($elm$json$Json$Decode$map, $author$project$Concourse$dateFromSeconds, $elm$json$Json$Decode$int))),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				$elm$json$Json$Decode$maybe(
					A2(
						$elm$json$Json$Decode$field,
						'start_time',
						A2($elm$json$Json$Decode$map, $author$project$Concourse$dateFromSeconds, $elm$json$Json$Decode$int))),
				$elm$json$Json$Decode$succeed($author$project$Concourse$BuildDuration))),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2($elm$json$Json$Decode$field, 'status', $author$project$Concourse$BuildStatus$decodeBuildStatus),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				$elm$json$Json$Decode$maybe(
					A2(
						$elm_community$json_extra$Json$Decode$Extra$andMap,
						A2($elm$json$Json$Decode$field, 'job_name', $elm$json$Json$Decode$string),
						A2(
							$elm_community$json_extra$Json$Decode$Extra$andMap,
							A2($elm$json$Json$Decode$field, 'pipeline_name', $elm$json$Json$Decode$string),
							A2(
								$elm_community$json_extra$Json$Decode$Extra$andMap,
								A2($elm$json$Json$Decode$field, 'team_name', $elm$json$Json$Decode$string),
								$elm$json$Json$Decode$succeed($author$project$Concourse$JobIdentifier))))),
				A2(
					$elm_community$json_extra$Json$Decode$Extra$andMap,
					A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
					A2(
						$elm_community$json_extra$Json$Decode$Extra$andMap,
						A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
						$elm$json$Json$Decode$succeed($author$project$Concourse$Build)))))));
var $elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
	});
var $author$project$Concourse$AcrossPlan = F2(
	function (vars, steps) {
		return {hI: steps, e_: vars};
	});
var $author$project$Concourse$BuildPlan = F2(
	function (id, step) {
		return {L: id, A: step};
	});
var $author$project$Concourse$BuildStepAcross = function (a) {
	return {$: 9, a: a};
};
var $author$project$Concourse$BuildStepAggregate = function (a) {
	return {$: 7, a: a};
};
var $author$project$Concourse$BuildStepDo = function (a) {
	return {$: 10, a: a};
};
var $author$project$Concourse$BuildStepEnsure = function (a) {
	return {$: 15, a: a};
};
var $author$project$Concourse$BuildStepInParallel = function (a) {
	return {$: 8, a: a};
};
var $author$project$Concourse$BuildStepOnAbort = function (a) {
	return {$: 13, a: a};
};
var $author$project$Concourse$BuildStepOnError = function (a) {
	return {$: 14, a: a};
};
var $author$project$Concourse$BuildStepOnFailure = function (a) {
	return {$: 12, a: a};
};
var $author$project$Concourse$BuildStepOnSuccess = function (a) {
	return {$: 11, a: a};
};
var $author$project$Concourse$BuildStepRetry = function (a) {
	return {$: 17, a: a};
};
var $author$project$Concourse$BuildStepTimeout = function (a) {
	return {$: 18, a: a};
};
var $author$project$Concourse$BuildStepTry = function (a) {
	return {$: 16, a: a};
};
var $author$project$Concourse$HookedPlan = F2(
	function (step, hook) {
		return {z: hook, A: step};
	});
var $elm$json$Json$Decode$array = _Json_decodeArray;
var $author$project$Concourse$BuildStepSetPipeline = function (a) {
	return {$: 1, a: a};
};
var $author$project$Concourse$decodeBuildSetPipeline = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepSetPipeline));
var $author$project$Concourse$BuildStepArtifactInput = function (a) {
	return {$: 3, a: a};
};
var $author$project$Concourse$decodeBuildStepArtifactInput = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepArtifactInput));
var $author$project$Concourse$BuildStepArtifactOutput = function (a) {
	return {$: 5, a: a};
};
var $author$project$Concourse$decodeBuildStepArtifactOutput = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepArtifactOutput));
var $author$project$Concourse$BuildStepGet = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$core$Dict$Black = 1;
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: -1, a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$Red = 0;
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === -1) && (!right.a)) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === -1) && (!left.a)) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					0,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					0,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === -2) {
			return A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1) {
				case 0:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 1:
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === -1) && (!_v0.a)) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $elm$json$Json$Decode$keyValuePairs = _Json_decodeKeyValuePairs;
var $elm$json$Json$Decode$dict = function (decoder) {
	return A2(
		$elm$json$Json$Decode$map,
		$elm$core$Dict$fromList,
		$elm$json$Json$Decode$keyValuePairs(decoder));
};
var $author$project$Concourse$decodeVersion = $elm$json$Json$Decode$dict($elm$json$Json$Decode$string);
var $author$project$Concourse$decodeBuildStepGet = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	$elm$json$Json$Decode$maybe(
		A2($elm$json$Json$Decode$field, 'version', $author$project$Concourse$decodeVersion)),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepGet)));
var $author$project$Concourse$BuildStepLoadVar = function (a) {
	return {$: 2, a: a};
};
var $author$project$Concourse$decodeBuildStepLoadVar = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepLoadVar));
var $author$project$Concourse$BuildStepPut = function (a) {
	return {$: 6, a: a};
};
var $author$project$Concourse$decodeBuildStepPut = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepPut));
var $author$project$Concourse$BuildStepTask = function (a) {
	return {$: 0, a: a};
};
var $author$project$Concourse$decodeBuildStepTask = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepTask));
var $author$project$Concourse$JsonArray = function (a) {
	return {$: 3, a: a};
};
var $author$project$Concourse$JsonObject = function (a) {
	return {$: 2, a: a};
};
var $author$project$Concourse$JsonNumber = function (a) {
	return {$: 1, a: a};
};
var $author$project$Concourse$JsonRaw = function (a) {
	return {$: 4, a: a};
};
var $author$project$Concourse$JsonString = function (a) {
	return {$: 0, a: a};
};
var $elm$json$Json$Decode$float = _Json_decodeFloat;
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $author$project$Concourse$decodeSimpleJsonValue = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2($elm$json$Json$Decode$map, $author$project$Concourse$JsonString, $elm$json$Json$Decode$string),
			A2($elm$json$Json$Decode$map, $author$project$Concourse$JsonNumber, $elm$json$Json$Decode$float),
			A2($elm$json$Json$Decode$map, $author$project$Concourse$JsonRaw, $elm$json$Json$Decode$value)
		]));
var $elm$json$Json$Decode$list = _Json_decodeList;
var $author$project$Concourse$decodeJsonValue = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$map,
			$author$project$Concourse$JsonObject,
			$elm$json$Json$Decode$keyValuePairs($author$project$Concourse$decodeSimpleJsonValue)),
			A2(
			$elm$json$Json$Decode$map,
			$author$project$Concourse$JsonArray,
			$elm$json$Json$Decode$list($author$project$Concourse$decodeSimpleJsonValue)),
			$author$project$Concourse$decodeSimpleJsonValue
		]));
var $author$project$Concourse$customDecoder = F2(
	function (decoder, toResult) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (a) {
				var _v0 = toResult(a);
				if (!_v0.$) {
					var b = _v0.a;
					return $elm$json$Json$Decode$succeed(b);
				} else {
					var err = _v0.a;
					return $elm$json$Json$Decode$fail(
						$elm$json$Json$Decode$errorToString(err));
				}
			},
			decoder);
	});
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $author$project$Concourse$lazy = function (thunk) {
	return A2(
		$author$project$Concourse$customDecoder,
		$elm$json$Json$Decode$value,
		function (js) {
			return A2(
				$elm$json$Json$Decode$decodeValue,
				thunk(0),
				js);
		});
};
var $elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
function $author$project$Concourse$cyclic$decodeBuildStepAcross() {
	return A2(
		$elm$json$Json$Decode$map,
		$author$project$Concourse$BuildStepAcross,
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2(
				$elm$json$Json$Decode$field,
				'steps',
				$elm$json$Json$Decode$list(
					A3(
						$elm$json$Json$Decode$map2,
						$elm$core$Tuple$pair,
						A2(
							$elm$json$Json$Decode$field,
							'values',
							$elm$json$Json$Decode$list($author$project$Concourse$decodeJsonValue)),
						A2(
							$elm$json$Json$Decode$field,
							'step',
							$author$project$Concourse$cyclic$decodeBuildPlan_())))),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2(
					$elm$json$Json$Decode$field,
					'vars',
					$elm$json$Json$Decode$list(
						A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string))),
				$elm$json$Json$Decode$succeed($author$project$Concourse$AcrossPlan))));
}
function $author$project$Concourse$cyclic$decodeBuildPlan_() {
	return A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		$elm$json$Json$Decode$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$json$Json$Decode$field,
					'task',
					$author$project$Concourse$lazy(
						function (_v16) {
							return $author$project$Concourse$decodeBuildStepTask;
						})),
					A2(
					$elm$json$Json$Decode$field,
					'get',
					$author$project$Concourse$lazy(
						function (_v17) {
							return $author$project$Concourse$decodeBuildStepGet;
						})),
					A2(
					$elm$json$Json$Decode$field,
					'artifact_input',
					$author$project$Concourse$lazy(
						function (_v18) {
							return $author$project$Concourse$decodeBuildStepArtifactInput;
						})),
					A2(
					$elm$json$Json$Decode$field,
					'put',
					$author$project$Concourse$lazy(
						function (_v19) {
							return $author$project$Concourse$decodeBuildStepPut;
						})),
					A2(
					$elm$json$Json$Decode$field,
					'artifact_output',
					$author$project$Concourse$lazy(
						function (_v20) {
							return $author$project$Concourse$decodeBuildStepArtifactOutput;
						})),
					A2(
					$elm$json$Json$Decode$field,
					'dependent_get',
					$author$project$Concourse$lazy(
						function (_v21) {
							return $author$project$Concourse$decodeBuildStepGet;
						})),
					A2(
					$elm$json$Json$Decode$field,
					'aggregate',
					$author$project$Concourse$lazy(
						function (_v22) {
							return $author$project$Concourse$cyclic$decodeBuildStepAggregate();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'in_parallel',
					$author$project$Concourse$lazy(
						function (_v23) {
							return $author$project$Concourse$cyclic$decodeBuildStepInParallel();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'do',
					$author$project$Concourse$lazy(
						function (_v24) {
							return $author$project$Concourse$cyclic$decodeBuildStepDo();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'on_success',
					$author$project$Concourse$lazy(
						function (_v25) {
							return $author$project$Concourse$cyclic$decodeBuildStepOnSuccess();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'on_failure',
					$author$project$Concourse$lazy(
						function (_v26) {
							return $author$project$Concourse$cyclic$decodeBuildStepOnFailure();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'on_abort',
					$author$project$Concourse$lazy(
						function (_v27) {
							return $author$project$Concourse$cyclic$decodeBuildStepOnAbort();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'on_error',
					$author$project$Concourse$lazy(
						function (_v28) {
							return $author$project$Concourse$cyclic$decodeBuildStepOnError();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'ensure',
					$author$project$Concourse$lazy(
						function (_v29) {
							return $author$project$Concourse$cyclic$decodeBuildStepEnsure();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'try',
					$author$project$Concourse$lazy(
						function (_v30) {
							return $author$project$Concourse$cyclic$decodeBuildStepTry();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'retry',
					$author$project$Concourse$lazy(
						function (_v31) {
							return $author$project$Concourse$cyclic$decodeBuildStepRetry();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'timeout',
					$author$project$Concourse$lazy(
						function (_v32) {
							return $author$project$Concourse$cyclic$decodeBuildStepTimeout();
						})),
					A2(
					$elm$json$Json$Decode$field,
					'set_pipeline',
					$author$project$Concourse$lazy(
						function (_v33) {
							return $author$project$Concourse$decodeBuildSetPipeline;
						})),
					A2(
					$elm$json$Json$Decode$field,
					'load_var',
					$author$project$Concourse$lazy(
						function (_v34) {
							return $author$project$Concourse$decodeBuildStepLoadVar;
						})),
					A2(
					$elm$json$Json$Decode$field,
					'across',
					$author$project$Concourse$lazy(
						function (_v35) {
							return $author$project$Concourse$cyclic$decodeBuildStepAcross();
						}))
				])),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string),
			$elm$json$Json$Decode$succeed($author$project$Concourse$BuildPlan)));
}
function $author$project$Concourse$cyclic$decodeBuildStepAggregate() {
	return A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		$elm$json$Json$Decode$array(
			$author$project$Concourse$lazy(
				function (_v15) {
					return $author$project$Concourse$cyclic$decodeBuildPlan_();
				})),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepAggregate));
}
function $author$project$Concourse$cyclic$decodeBuildStepDo() {
	return A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		$elm$json$Json$Decode$array(
			$author$project$Concourse$lazy(
				function (_v14) {
					return $author$project$Concourse$cyclic$decodeBuildPlan_();
				})),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepDo));
}
function $author$project$Concourse$cyclic$decodeBuildStepEnsure() {
	return A2(
		$elm$json$Json$Decode$map,
		$author$project$Concourse$BuildStepEnsure,
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2(
				$elm$json$Json$Decode$field,
				'ensure',
				$author$project$Concourse$lazy(
					function (_v13) {
						return $author$project$Concourse$cyclic$decodeBuildPlan_();
					})),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2(
					$elm$json$Json$Decode$field,
					'step',
					$author$project$Concourse$lazy(
						function (_v12) {
							return $author$project$Concourse$cyclic$decodeBuildPlan_();
						})),
				$elm$json$Json$Decode$succeed($author$project$Concourse$HookedPlan))));
}
function $author$project$Concourse$cyclic$decodeBuildStepInParallel() {
	return A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$elm$json$Json$Decode$field,
			'steps',
			$elm$json$Json$Decode$array(
				$author$project$Concourse$lazy(
					function (_v11) {
						return $author$project$Concourse$cyclic$decodeBuildPlan_();
					}))),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepInParallel));
}
function $author$project$Concourse$cyclic$decodeBuildStepOnAbort() {
	return A2(
		$elm$json$Json$Decode$map,
		$author$project$Concourse$BuildStepOnAbort,
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2(
				$elm$json$Json$Decode$field,
				'on_abort',
				$author$project$Concourse$lazy(
					function (_v10) {
						return $author$project$Concourse$cyclic$decodeBuildPlan_();
					})),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2(
					$elm$json$Json$Decode$field,
					'step',
					$author$project$Concourse$lazy(
						function (_v9) {
							return $author$project$Concourse$cyclic$decodeBuildPlan_();
						})),
				$elm$json$Json$Decode$succeed($author$project$Concourse$HookedPlan))));
}
function $author$project$Concourse$cyclic$decodeBuildStepOnError() {
	return A2(
		$elm$json$Json$Decode$map,
		$author$project$Concourse$BuildStepOnError,
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2(
				$elm$json$Json$Decode$field,
				'on_error',
				$author$project$Concourse$lazy(
					function (_v8) {
						return $author$project$Concourse$cyclic$decodeBuildPlan_();
					})),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2(
					$elm$json$Json$Decode$field,
					'step',
					$author$project$Concourse$lazy(
						function (_v7) {
							return $author$project$Concourse$cyclic$decodeBuildPlan_();
						})),
				$elm$json$Json$Decode$succeed($author$project$Concourse$HookedPlan))));
}
function $author$project$Concourse$cyclic$decodeBuildStepOnFailure() {
	return A2(
		$elm$json$Json$Decode$map,
		$author$project$Concourse$BuildStepOnFailure,
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2(
				$elm$json$Json$Decode$field,
				'on_failure',
				$author$project$Concourse$lazy(
					function (_v6) {
						return $author$project$Concourse$cyclic$decodeBuildPlan_();
					})),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2(
					$elm$json$Json$Decode$field,
					'step',
					$author$project$Concourse$lazy(
						function (_v5) {
							return $author$project$Concourse$cyclic$decodeBuildPlan_();
						})),
				$elm$json$Json$Decode$succeed($author$project$Concourse$HookedPlan))));
}
function $author$project$Concourse$cyclic$decodeBuildStepOnSuccess() {
	return A2(
		$elm$json$Json$Decode$map,
		$author$project$Concourse$BuildStepOnSuccess,
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2(
				$elm$json$Json$Decode$field,
				'on_success',
				$author$project$Concourse$lazy(
					function (_v4) {
						return $author$project$Concourse$cyclic$decodeBuildPlan_();
					})),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2(
					$elm$json$Json$Decode$field,
					'step',
					$author$project$Concourse$lazy(
						function (_v3) {
							return $author$project$Concourse$cyclic$decodeBuildPlan_();
						})),
				$elm$json$Json$Decode$succeed($author$project$Concourse$HookedPlan))));
}
function $author$project$Concourse$cyclic$decodeBuildStepRetry() {
	return A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		$elm$json$Json$Decode$array(
			$author$project$Concourse$lazy(
				function (_v2) {
					return $author$project$Concourse$cyclic$decodeBuildPlan_();
				})),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepRetry));
}
function $author$project$Concourse$cyclic$decodeBuildStepTimeout() {
	return A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$elm$json$Json$Decode$field,
			'step',
			$author$project$Concourse$lazy(
				function (_v1) {
					return $author$project$Concourse$cyclic$decodeBuildPlan_();
				})),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepTimeout));
}
function $author$project$Concourse$cyclic$decodeBuildStepTry() {
	return A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$elm$json$Json$Decode$field,
			'step',
			$author$project$Concourse$lazy(
				function (_v0) {
					return $author$project$Concourse$cyclic$decodeBuildPlan_();
				})),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildStepTry));
}
var $author$project$Concourse$decodeBuildStepAcross = $author$project$Concourse$cyclic$decodeBuildStepAcross();
$author$project$Concourse$cyclic$decodeBuildStepAcross = function () {
	return $author$project$Concourse$decodeBuildStepAcross;
};
var $author$project$Concourse$decodeBuildPlan_ = $author$project$Concourse$cyclic$decodeBuildPlan_();
$author$project$Concourse$cyclic$decodeBuildPlan_ = function () {
	return $author$project$Concourse$decodeBuildPlan_;
};
var $author$project$Concourse$decodeBuildStepAggregate = $author$project$Concourse$cyclic$decodeBuildStepAggregate();
$author$project$Concourse$cyclic$decodeBuildStepAggregate = function () {
	return $author$project$Concourse$decodeBuildStepAggregate;
};
var $author$project$Concourse$decodeBuildStepDo = $author$project$Concourse$cyclic$decodeBuildStepDo();
$author$project$Concourse$cyclic$decodeBuildStepDo = function () {
	return $author$project$Concourse$decodeBuildStepDo;
};
var $author$project$Concourse$decodeBuildStepEnsure = $author$project$Concourse$cyclic$decodeBuildStepEnsure();
$author$project$Concourse$cyclic$decodeBuildStepEnsure = function () {
	return $author$project$Concourse$decodeBuildStepEnsure;
};
var $author$project$Concourse$decodeBuildStepInParallel = $author$project$Concourse$cyclic$decodeBuildStepInParallel();
$author$project$Concourse$cyclic$decodeBuildStepInParallel = function () {
	return $author$project$Concourse$decodeBuildStepInParallel;
};
var $author$project$Concourse$decodeBuildStepOnAbort = $author$project$Concourse$cyclic$decodeBuildStepOnAbort();
$author$project$Concourse$cyclic$decodeBuildStepOnAbort = function () {
	return $author$project$Concourse$decodeBuildStepOnAbort;
};
var $author$project$Concourse$decodeBuildStepOnError = $author$project$Concourse$cyclic$decodeBuildStepOnError();
$author$project$Concourse$cyclic$decodeBuildStepOnError = function () {
	return $author$project$Concourse$decodeBuildStepOnError;
};
var $author$project$Concourse$decodeBuildStepOnFailure = $author$project$Concourse$cyclic$decodeBuildStepOnFailure();
$author$project$Concourse$cyclic$decodeBuildStepOnFailure = function () {
	return $author$project$Concourse$decodeBuildStepOnFailure;
};
var $author$project$Concourse$decodeBuildStepOnSuccess = $author$project$Concourse$cyclic$decodeBuildStepOnSuccess();
$author$project$Concourse$cyclic$decodeBuildStepOnSuccess = function () {
	return $author$project$Concourse$decodeBuildStepOnSuccess;
};
var $author$project$Concourse$decodeBuildStepRetry = $author$project$Concourse$cyclic$decodeBuildStepRetry();
$author$project$Concourse$cyclic$decodeBuildStepRetry = function () {
	return $author$project$Concourse$decodeBuildStepRetry;
};
var $author$project$Concourse$decodeBuildStepTimeout = $author$project$Concourse$cyclic$decodeBuildStepTimeout();
$author$project$Concourse$cyclic$decodeBuildStepTimeout = function () {
	return $author$project$Concourse$decodeBuildStepTimeout;
};
var $author$project$Concourse$decodeBuildStepTry = $author$project$Concourse$cyclic$decodeBuildStepTry();
$author$project$Concourse$cyclic$decodeBuildStepTry = function () {
	return $author$project$Concourse$decodeBuildStepTry;
};
var $author$project$Concourse$decodeBuildPlan = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['plan']),
	$author$project$Concourse$decodeBuildPlan_);
var $author$project$Concourse$BuildPrep = F6(
	function (pausedPipeline, pausedJob, maxRunningBuilds, inputs, inputsSatisfied, missingInputReasons) {
		return {go: inputs, gp: inputsSatisfied, gM: maxRunningBuilds, gP: missingInputReasons, g8: pausedJob, g9: pausedPipeline};
	});
var $author$project$Concourse$BuildPrepStatusBlocking = 1;
var $author$project$Concourse$BuildPrepStatusNotBlocking = 2;
var $author$project$Concourse$BuildPrepStatusUnknown = 0;
var $author$project$Concourse$decodeBuildPrepStatus = A2(
	$author$project$Concourse$customDecoder,
	$elm$json$Json$Decode$string,
	function (status) {
		switch (status) {
			case 'unknown':
				return $elm$core$Result$Ok(0);
			case 'blocking':
				return $elm$core$Result$Ok(1);
			case 'not_blocking':
				return $elm$core$Result$Ok(2);
			default:
				var unknown = status;
				return $elm$core$Result$Err(
					A2(
						$elm$json$Json$Decode$Failure,
						'unknown build preparation status',
						$elm$json$Json$Encode$string(unknown)));
		}
	});
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $author$project$Concourse$defaultTo = function (_default) {
	return A2(
		$elm$core$Basics$composeL,
		$elm$json$Json$Decode$map(
			$elm$core$Maybe$withDefault(_default)),
		$elm$json$Json$Decode$maybe);
};
var $author$project$Concourse$decodeBuildPrep = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$author$project$Concourse$defaultTo,
		$elm$core$Dict$empty,
		A2(
			$elm$json$Json$Decode$field,
			'missing_input_reasons',
			$elm$json$Json$Decode$dict($elm$json$Json$Decode$string))),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'inputs_satisfied', $author$project$Concourse$decodeBuildPrepStatus),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2(
				$elm$json$Json$Decode$field,
				'inputs',
				$elm$json$Json$Decode$dict($author$project$Concourse$decodeBuildPrepStatus)),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2($elm$json$Json$Decode$field, 'max_running_builds', $author$project$Concourse$decodeBuildPrepStatus),
				A2(
					$elm_community$json_extra$Json$Decode$Extra$andMap,
					A2($elm$json$Json$Decode$field, 'paused_job', $author$project$Concourse$decodeBuildPrepStatus),
					A2(
						$elm_community$json_extra$Json$Decode$Extra$andMap,
						A2($elm$json$Json$Decode$field, 'paused_pipeline', $author$project$Concourse$decodeBuildPrepStatus),
						$elm$json$Json$Decode$succeed($author$project$Concourse$BuildPrep)))))));
var $author$project$Concourse$BuildResources = F2(
	function (inputs, outputs) {
		return {go: inputs, bZ: outputs};
	});
var $author$project$Concourse$BuildResourcesInput = F3(
	function (name, version, firstOccurrence) {
		return {f2: firstOccurrence, bX: name, dn: version};
	});
var $elm$json$Json$Decode$bool = _Json_decodeBool;
var $author$project$Concourse$decodeResourcesInput = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'first_occurrence', $elm$json$Json$Decode$bool),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'version', $author$project$Concourse$decodeVersion),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
			$elm$json$Json$Decode$succeed($author$project$Concourse$BuildResourcesInput))));
var $author$project$Concourse$BuildResourcesOutput = F2(
	function (name, version) {
		return {bX: name, dn: version};
	});
var $author$project$Concourse$decodeResourcesOutput = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$elm$json$Json$Decode$field,
		'version',
		$elm$json$Json$Decode$dict($elm$json$Json$Decode$string)),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildResourcesOutput)));
var $author$project$Concourse$decodeBuildResources = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$elm$json$Json$Decode$field,
		'outputs',
		$elm$json$Json$Decode$list($author$project$Concourse$decodeResourcesOutput)),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$elm$json$Json$Decode$field,
			'inputs',
			$elm$json$Json$Decode$list($author$project$Concourse$decodeResourcesInput)),
		$elm$json$Json$Decode$succeed($author$project$Concourse$BuildResources)));
var $author$project$Concourse$Check = F6(
	function (id, status, createTime, startTime, endTime, checkError) {
		return {dv: checkError, fy: createTime, fK: endTime, L: id, hE: startTime, hH: status};
	});
var $author$project$Concourse$Errored = 2;
var $author$project$Concourse$Started = 0;
var $author$project$Concourse$Succeeded = 1;
var $author$project$Concourse$decodeCheckStatus = A2(
	$elm$json$Json$Decode$andThen,
	function (status) {
		switch (status) {
			case 'started':
				return $elm$json$Json$Decode$succeed(0);
			case 'succeeded':
				return $elm$json$Json$Decode$succeed(1);
			case 'errored':
				return $elm$json$Json$Decode$succeed(2);
			default:
				var unknown = status;
				return $elm$json$Json$Decode$fail('unknown check status: ' + unknown);
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Concourse$decodeCheck = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	$elm$json$Json$Decode$maybe(
		A2($elm$json$Json$Decode$field, 'check_error', $elm$json$Json$Decode$string)),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		$elm$json$Json$Decode$maybe(
			A2(
				$elm$json$Json$Decode$field,
				'end_time',
				A2($elm$json$Json$Decode$map, $author$project$Concourse$dateFromSeconds, $elm$json$Json$Decode$int))),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			$elm$json$Json$Decode$maybe(
				A2(
					$elm$json$Json$Decode$field,
					'start_time',
					A2($elm$json$Json$Decode$map, $author$project$Concourse$dateFromSeconds, $elm$json$Json$Decode$int))),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				$elm$json$Json$Decode$maybe(
					A2(
						$elm$json$Json$Decode$field,
						'create_time',
						A2($elm$json$Json$Decode$map, $author$project$Concourse$dateFromSeconds, $elm$json$Json$Decode$int))),
				A2(
					$elm_community$json_extra$Json$Decode$Extra$andMap,
					A2($elm$json$Json$Decode$field, 'status', $author$project$Concourse$decodeCheckStatus),
					A2(
						$elm_community$json_extra$Json$Decode$Extra$andMap,
						A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
						$elm$json$Json$Decode$succeed($author$project$Concourse$Check)))))));
var $author$project$Concourse$ClusterInfo = F2(
	function (version, clusterName) {
		return {cq: clusterName, dn: version};
	});
var $author$project$Concourse$decodeInfo = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$author$project$Concourse$defaultTo,
		'',
		A2($elm$json$Json$Decode$field, 'cluster_name', $elm$json$Json$Decode$string)),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'version', $elm$json$Json$Decode$string),
		$elm$json$Json$Decode$succeed($author$project$Concourse$ClusterInfo)));
var $author$project$Concourse$Job = function (name) {
	return function (pipelineName) {
		return function (teamName) {
			return function (nextBuild) {
				return function (finishedBuild) {
					return function (transitionBuild) {
						return function (paused) {
							return function (disableManualTrigger) {
								return function (inputs) {
									return function (outputs) {
										return function (groups) {
											return {ct: disableManualTrigger, cx: finishedBuild, bP: groups, go: inputs, bX: name, el: nextBuild, bZ: outputs, bn: paused, c_: pipelineName, dh: teamName, h2: transitionBuild};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Concourse$JobInput = F4(
	function (name, resource, passed, trigger) {
		return {bX: name, er: passed, b7: resource, eZ: trigger};
	});
var $author$project$Concourse$decodeJobInput = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$author$project$Concourse$defaultTo,
		false,
		A2($elm$json$Json$Decode$field, 'trigger', $elm$json$Json$Decode$bool)),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$author$project$Concourse$defaultTo,
			_List_Nil,
			A2(
				$elm$json$Json$Decode$field,
				'passed',
				$elm$json$Json$Decode$list($elm$json$Json$Decode$string))),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2($elm$json$Json$Decode$field, 'resource', $elm$json$Json$Decode$string),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
				$elm$json$Json$Decode$succeed($author$project$Concourse$JobInput)))));
var $author$project$Concourse$JobOutput = F2(
	function (name, resource) {
		return {bX: name, b7: resource};
	});
var $author$project$Concourse$decodeJobOutput = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'resource', $elm$json$Json$Decode$string),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
		$elm$json$Json$Decode$succeed($author$project$Concourse$JobOutput)));
var $author$project$Concourse$decodeJob = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$author$project$Concourse$defaultTo,
		_List_Nil,
		A2(
			$elm$json$Json$Decode$field,
			'groups',
			$elm$json$Json$Decode$list($elm$json$Json$Decode$string))),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$author$project$Concourse$defaultTo,
			_List_Nil,
			A2(
				$elm$json$Json$Decode$field,
				'outputs',
				$elm$json$Json$Decode$list($author$project$Concourse$decodeJobOutput))),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2(
				$author$project$Concourse$defaultTo,
				_List_Nil,
				A2(
					$elm$json$Json$Decode$field,
					'inputs',
					$elm$json$Json$Decode$list($author$project$Concourse$decodeJobInput))),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2(
					$author$project$Concourse$defaultTo,
					false,
					A2($elm$json$Json$Decode$field, 'disable_manual_trigger', $elm$json$Json$Decode$bool)),
				A2(
					$elm_community$json_extra$Json$Decode$Extra$andMap,
					A2(
						$author$project$Concourse$defaultTo,
						false,
						A2($elm$json$Json$Decode$field, 'paused', $elm$json$Json$Decode$bool)),
					A2(
						$elm_community$json_extra$Json$Decode$Extra$andMap,
						$elm$json$Json$Decode$maybe(
							A2($elm$json$Json$Decode$field, 'transition_build', $author$project$Concourse$decodeBuild)),
						A2(
							$elm_community$json_extra$Json$Decode$Extra$andMap,
							$elm$json$Json$Decode$maybe(
								A2($elm$json$Json$Decode$field, 'finished_build', $author$project$Concourse$decodeBuild)),
							A2(
								$elm_community$json_extra$Json$Decode$Extra$andMap,
								$elm$json$Json$Decode$maybe(
									A2($elm$json$Json$Decode$field, 'next_build', $author$project$Concourse$decodeBuild)),
								A2(
									$elm_community$json_extra$Json$Decode$Extra$andMap,
									A2($elm$json$Json$Decode$field, 'team_name', $elm$json$Json$Decode$string),
									A2(
										$elm_community$json_extra$Json$Decode$Extra$andMap,
										A2($elm$json$Json$Decode$field, 'pipeline_name', $elm$json$Json$Decode$string),
										A2(
											$elm_community$json_extra$Json$Decode$Extra$andMap,
											A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
											$elm$json$Json$Decode$succeed($author$project$Concourse$Job))))))))))));
var $author$project$Concourse$Pipeline = F7(
	function (id, name, paused, archived, _public, teamName, groups) {
		return {e5: archived, bP: groups, L: id, bX: name, bn: paused, eB: _public, dh: teamName};
	});
var $author$project$Concourse$PipelineGroup = F3(
	function (name, jobs, resources) {
		return {d8: jobs, bX: name, eH: resources};
	});
var $author$project$Concourse$decodePipelineGroup = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$author$project$Concourse$defaultTo,
		_List_Nil,
		A2(
			$elm$json$Json$Decode$field,
			'resources',
			$elm$json$Json$Decode$list($elm$json$Json$Decode$string))),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$author$project$Concourse$defaultTo,
			_List_Nil,
			A2(
				$elm$json$Json$Decode$field,
				'jobs',
				$elm$json$Json$Decode$list($elm$json$Json$Decode$string))),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
			$elm$json$Json$Decode$succeed($author$project$Concourse$PipelineGroup))));
var $author$project$Concourse$decodePipeline = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$author$project$Concourse$defaultTo,
		_List_Nil,
		A2(
			$elm$json$Json$Decode$field,
			'groups',
			$elm$json$Json$Decode$list($author$project$Concourse$decodePipelineGroup))),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'team_name', $elm$json$Json$Decode$string),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2($elm$json$Json$Decode$field, 'public', $elm$json$Json$Decode$bool),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2($elm$json$Json$Decode$field, 'archived', $elm$json$Json$Decode$bool),
				A2(
					$elm_community$json_extra$Json$Decode$Extra$andMap,
					A2($elm$json$Json$Decode$field, 'paused', $elm$json$Json$Decode$bool),
					A2(
						$elm_community$json_extra$Json$Decode$Extra$andMap,
						A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
						A2(
							$elm_community$json_extra$Json$Decode$Extra$andMap,
							A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
							$elm$json$Json$Decode$succeed($author$project$Concourse$Pipeline))))))));
var $author$project$Concourse$Resource = function (teamName) {
	return function (pipelineName) {
		return function (name) {
			return function (icon) {
				return function (failingToCheck) {
					return function (checkError) {
						return function (checkSetupError) {
							return function (lastChecked) {
								return function (pinnedVersion) {
									return function (pinnedInConfig) {
										return function (pinComment) {
											return {dv: checkError, fm: checkSetupError, fW: failingToCheck, gh: icon, gI: lastChecked, bX: name, ha: pinComment, hb: pinnedInConfig, hc: pinnedVersion, c_: pipelineName, dh: teamName};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Concourse$decodeResource = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	$elm$json$Json$Decode$maybe(
		A2($elm$json$Json$Decode$field, 'pin_comment', $elm$json$Json$Decode$string)),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$author$project$Concourse$defaultTo,
			false,
			A2($elm$json$Json$Decode$field, 'pinned_in_config', $elm$json$Json$Decode$bool)),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			$elm$json$Json$Decode$maybe(
				A2($elm$json$Json$Decode$field, 'pinned_version', $author$project$Concourse$decodeVersion)),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				$elm$json$Json$Decode$maybe(
					A2(
						$elm$json$Json$Decode$field,
						'last_checked',
						A2($elm$json$Json$Decode$map, $author$project$Concourse$dateFromSeconds, $elm$json$Json$Decode$int))),
				A2(
					$elm_community$json_extra$Json$Decode$Extra$andMap,
					A2(
						$author$project$Concourse$defaultTo,
						'',
						A2($elm$json$Json$Decode$field, 'check_setup_error', $elm$json$Json$Decode$string)),
					A2(
						$elm_community$json_extra$Json$Decode$Extra$andMap,
						A2(
							$author$project$Concourse$defaultTo,
							'',
							A2($elm$json$Json$Decode$field, 'check_error', $elm$json$Json$Decode$string)),
						A2(
							$elm_community$json_extra$Json$Decode$Extra$andMap,
							A2(
								$author$project$Concourse$defaultTo,
								false,
								A2($elm$json$Json$Decode$field, 'failing_to_check', $elm$json$Json$Decode$bool)),
							A2(
								$elm_community$json_extra$Json$Decode$Extra$andMap,
								$elm$json$Json$Decode$maybe(
									A2($elm$json$Json$Decode$field, 'icon', $elm$json$Json$Decode$string)),
								A2(
									$elm_community$json_extra$Json$Decode$Extra$andMap,
									A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
									A2(
										$elm_community$json_extra$Json$Decode$Extra$andMap,
										A2($elm$json$Json$Decode$field, 'pipeline_name', $elm$json$Json$Decode$string),
										A2(
											$elm_community$json_extra$Json$Decode$Extra$andMap,
											A2($elm$json$Json$Decode$field, 'team_name', $elm$json$Json$Decode$string),
											$elm$json$Json$Decode$succeed($author$project$Concourse$Resource))))))))))));
var $author$project$Concourse$Team = F2(
	function (id, name) {
		return {L: id, bX: name};
	});
var $author$project$Concourse$decodeTeam = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
		$elm$json$Json$Decode$succeed($author$project$Concourse$Team)));
var $author$project$Concourse$User = F6(
	function (id, userName, name, email, isAdmin, teams) {
		return {fI: email, L: id, gs: isAdmin, bX: name, hQ: teams, h5: userName};
	});
var $author$project$Concourse$decodeUser = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2(
		$elm$json$Json$Decode$field,
		'teams',
		$elm$json$Json$Decode$dict(
			$elm$json$Json$Decode$list($elm$json$Json$Decode$string))),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'is_admin', $elm$json$Json$Decode$bool),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2($elm$json$Json$Decode$field, 'email', $elm$json$Json$Decode$string),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
				A2(
					$elm_community$json_extra$Json$Decode$Extra$andMap,
					A2($elm$json$Json$Decode$field, 'user_name', $elm$json$Json$Decode$string),
					A2(
						$elm_community$json_extra$Json$Decode$Extra$andMap,
						A2($elm$json$Json$Decode$field, 'user_id', $elm$json$Json$Decode$string),
						$elm$json$Json$Decode$succeed($author$project$Concourse$User)))))));
var $author$project$Concourse$VersionedResource = F4(
	function (id, version, metadata, enabled) {
		return {fJ: enabled, L: id, gN: metadata, dn: version};
	});
var $author$project$Concourse$MetadataField = F2(
	function (name, value) {
		return {bX: name, h6: value};
	});
var $author$project$Concourse$decodeMetadataField = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'value', $elm$json$Json$Decode$string),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
		$elm$json$Json$Decode$succeed($author$project$Concourse$MetadataField)));
var $author$project$Concourse$decodeMetadata = $elm$json$Json$Decode$list($author$project$Concourse$decodeMetadataField);
var $author$project$Concourse$decodeVersionedResource = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'enabled', $elm$json$Json$Decode$bool),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2(
			$author$project$Concourse$defaultTo,
			_List_Nil,
			A2($elm$json$Json$Decode$field, 'metadata', $author$project$Concourse$decodeMetadata)),
		A2(
			$elm_community$json_extra$Json$Decode$Extra$andMap,
			A2($elm$json$Json$Decode$field, 'version', $author$project$Concourse$decodeVersion),
			A2(
				$elm_community$json_extra$Json$Decode$Extra$andMap,
				A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
				$elm$json$Json$Decode$succeed($author$project$Concourse$VersionedResource)))));
var $author$project$Message$Storage$deleteFromLocalStorage = _Platform_outgoingPort('deleteFromLocalStorage', $elm$json$Json$Encode$string);
var $author$project$Concourse$emptyBuildResources = {go: _List_Nil, bZ: _List_Nil};
var $elm$json$Json$Encode$bool = _Json_wrap;
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(0),
				entries));
	});
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(0),
			pairs));
};
var $author$project$Concourse$encodeJobInput = function (jobInput) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(jobInput.bX)),
				_Utils_Tuple2(
				'resource',
				$elm$json$Json$Encode$string(jobInput.b7)),
				_Utils_Tuple2(
				'passed',
				A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, jobInput.er)),
				_Utils_Tuple2(
				'trigger',
				$elm$json$Json$Encode$bool(jobInput.eZ))
			]));
};
var $author$project$Concourse$encodeJobOutput = function (jobOutput) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(jobOutput.bX)),
				_Utils_Tuple2(
				'resource',
				$elm$json$Json$Encode$string(jobOutput.b7))
			]));
};
var $author$project$Concourse$BuildStatus$show = function (status) {
	switch (status) {
		case 0:
			return 'pending';
		case 1:
			return 'started';
		case 2:
			return 'succeeded';
		case 3:
			return 'failed';
		case 4:
			return 'errored';
		default:
			return 'aborted';
	}
};
var $author$project$Concourse$BuildStatus$encodeBuildStatus = A2($elm$core$Basics$composeR, $author$project$Concourse$BuildStatus$show, $elm$json$Json$Encode$string);
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (!_v0.$) {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$json$Json$Encode$int = _Json_wrap;
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Concourse$optionalField = F2(
	function (field, encoder) {
		return $elm$core$Maybe$map(
			function (val) {
				return _Utils_Tuple2(
					field,
					encoder(val));
			});
	});
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0;
	return millis;
};
var $author$project$Concourse$secondsFromDate = A2(
	$elm$core$Basics$composeR,
	$elm$time$Time$posixToMillis,
	function (m) {
		return (m / 1000) | 0;
	});
var $author$project$Concourse$encodeBuild = function (build) {
	return $elm$json$Json$Encode$object(
		A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					$elm$core$Maybe$Just(
					_Utils_Tuple2(
						'id',
						$elm$json$Json$Encode$int(build.L))),
					$elm$core$Maybe$Just(
					_Utils_Tuple2(
						'name',
						$elm$json$Json$Encode$string(build.bX))),
					A3(
					$author$project$Concourse$optionalField,
					'team_name',
					$elm$json$Json$Encode$string,
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.dh;
						},
						build.gF)),
					A3(
					$author$project$Concourse$optionalField,
					'pipeline_name',
					$elm$json$Json$Encode$string,
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.c_;
						},
						build.gF)),
					A3(
					$author$project$Concourse$optionalField,
					'job_name',
					$elm$json$Json$Encode$string,
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.d7;
						},
						build.gF)),
					$elm$core$Maybe$Just(
					_Utils_Tuple2(
						'status',
						$author$project$Concourse$BuildStatus$encodeBuildStatus(build.hH))),
					A3(
					$author$project$Concourse$optionalField,
					'start_time',
					A2($elm$core$Basics$composeR, $author$project$Concourse$secondsFromDate, $elm$json$Json$Encode$int),
					build.cv.eR),
					A3(
					$author$project$Concourse$optionalField,
					'end_time',
					A2($elm$core$Basics$composeR, $author$project$Concourse$secondsFromDate, $elm$json$Json$Encode$int),
					build.cv.dQ),
					A3(
					$author$project$Concourse$optionalField,
					'reap_time',
					A2($elm$core$Basics$composeR, $author$project$Concourse$secondsFromDate, $elm$json$Json$Encode$int),
					build.bs)
				])));
};
var $author$project$Concourse$encodeMaybeBuild = function (maybeBuild) {
	if (maybeBuild.$ === 1) {
		return $elm$json$Json$Encode$null;
	} else {
		var build = maybeBuild.a;
		return $author$project$Concourse$encodeBuild(build);
	}
};
var $author$project$Concourse$encodeJob = function (job) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(job.bX)),
				_Utils_Tuple2(
				'pipeline_name',
				$elm$json$Json$Encode$string(job.c_)),
				_Utils_Tuple2(
				'team_name',
				$elm$json$Json$Encode$string(job.dh)),
				_Utils_Tuple2(
				'next_build',
				$author$project$Concourse$encodeMaybeBuild(job.el)),
				_Utils_Tuple2(
				'finished_build',
				$author$project$Concourse$encodeMaybeBuild(job.cx)),
				_Utils_Tuple2(
				'transition_build',
				$author$project$Concourse$encodeMaybeBuild(job.cx)),
				_Utils_Tuple2(
				'paused',
				$elm$json$Json$Encode$bool(job.bn)),
				_Utils_Tuple2(
				'disable_manual_trigger',
				$elm$json$Json$Encode$bool(job.bn)),
				_Utils_Tuple2(
				'disable_manual_trigger',
				$elm$json$Json$Encode$bool(job.ct)),
				_Utils_Tuple2(
				'inputs',
				A2($elm$json$Json$Encode$list, $author$project$Concourse$encodeJobInput, job.go)),
				_Utils_Tuple2(
				'outputs',
				A2($elm$json$Json$Encode$list, $author$project$Concourse$encodeJobOutput, job.bZ)),
				_Utils_Tuple2(
				'groups',
				A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, job.bP))
			]));
};
var $author$project$Concourse$encodePipelineGroup = function (pipelineGroup) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(pipelineGroup.bX)),
				_Utils_Tuple2(
				'jobs',
				A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, pipelineGroup.d8)),
				_Utils_Tuple2(
				'resources',
				A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, pipelineGroup.eH))
			]));
};
var $author$project$Concourse$encodePipeline = function (pipeline) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$elm$json$Json$Encode$int(pipeline.L)),
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(pipeline.bX)),
				_Utils_Tuple2(
				'paused',
				$elm$json$Json$Encode$bool(pipeline.bn)),
				_Utils_Tuple2(
				'archived',
				$elm$json$Json$Encode$bool(pipeline.e5)),
				_Utils_Tuple2(
				'public',
				$elm$json$Json$Encode$bool(pipeline.eB)),
				_Utils_Tuple2(
				'team_name',
				$elm$json$Json$Encode$string(pipeline.dh)),
				_Utils_Tuple2(
				'groups',
				A2($elm$json$Json$Encode$list, $author$project$Concourse$encodePipelineGroup, pipeline.bP))
			]));
};
var $elm$json$Json$Encode$float = _Json_wrap;
var $author$project$SideBar$State$encodeSideBarState = function (state) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'is_open',
				$elm$json$Json$Encode$bool(state.gy)),
				_Utils_Tuple2(
				'width',
				$elm$json$Json$Encode$float(state.e$))
			]));
};
var $author$project$Concourse$encodeTeam = function (team) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$elm$json$Json$Encode$int(team.L)),
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(team.bX))
			]));
};
var $elm$json$Json$Decode$decodeString = _Json_runOnString;
var $elm$http$Http$BadPayload = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $elm$http$Http$BadStatus = function (a) {
	return {$: 3, a: a};
};
var $elm$http$Http$BadUrl = function (a) {
	return {$: 0, a: a};
};
var $elm$http$Http$Internal$FormDataBody = function (a) {
	return {$: 2, a: a};
};
var $elm$http$Http$NetworkError = {$: 2};
var $elm$http$Http$Timeout = {$: 1};
var $elm$core$Maybe$isJust = function (maybe) {
	if (!maybe.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$http$Http$Internal$isStringBody = function (body) {
	if (body.$ === 1) {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (!ra.$) {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === -2) {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1) {
					case 0:
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 1:
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === -1) && (dict.d.$ === -1)) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.e.d.$ === -1) && (!dict.e.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				0,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr === 1) {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.d.d.$ === -1) && (!dict.d.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				0,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr === 1) {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === -1) && (!left.a)) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === -1) && (right.a === 1)) {
					if (right.d.$ === -1) {
						if (right.d.a === 1) {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === -1) && (dict.d.$ === -1)) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor === 1) {
			if ((lLeft.$ === -1) && (!lLeft.a)) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === -1) {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === -2) {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === -1) && (left.a === 1)) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === -1) && (!lLeft.a)) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === -1) {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === -1) {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === -1) {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === -1) && (!_v0.a)) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (!_v0.$) {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $elm$http$Http$expectStringResponse = _Http_expectStringResponse;
var $elm$http$Http$expectJson = function (decoder) {
	return $elm$http$Http$expectStringResponse(
		function (response) {
			var _v0 = A2($elm$json$Json$Decode$decodeString, decoder, response.N);
			if (_v0.$ === 1) {
				var decodeError = _v0.a;
				return $elm$core$Result$Err(
					$elm$json$Json$Decode$errorToString(decodeError));
			} else {
				var value = _v0.a;
				return $elm$core$Result$Ok(value);
			}
		});
};
var $author$project$Api$expectJson = F2(
	function (decoder, r) {
		return {
			N: r.N,
			ac: r.ac,
			ad: $elm$http$Http$expectJson(decoder),
			U: r.U,
			Z: r.Z,
			al: r.al
		};
	});
var $author$project$Message$Storage$favoritedPipelinesKey = 'favorited_pipelines';
var $elm$browser$Browser$Dom$focus = _Browser_call('focus');
var $elm$http$Http$Internal$EmptyBody = {$: 0};
var $elm$http$Http$emptyBody = $elm$http$Http$Internal$EmptyBody;
var $author$project$Api$ignoreResponse = $elm$http$Http$expectStringResponse(
	$elm$core$Basics$always(
		$elm$core$Result$Ok(0)));
var $author$project$Api$get = function (endpoint) {
	return {N: $elm$http$Http$emptyBody, ac: endpoint, ad: $author$project$Api$ignoreResponse, U: _List_Nil, Z: 'GET', al: _List_Nil};
};
var $elm$browser$Browser$Dom$getElement = _Browser_getElement;
var $elm$browser$Browser$Dom$getViewport = _Browser_withWindow(_Browser_getViewport);
var $elm$browser$Browser$Dom$getViewportOf = _Browser_getViewportOf;
var $elm$time$Time$Name = function (a) {
	return {$: 0, a: a};
};
var $elm$time$Time$Offset = function (a) {
	return {$: 1, a: a};
};
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$time$Time$customZone = $elm$time$Time$Zone;
var $elm$time$Time$here = _Time_here(0);
var $author$project$Message$Storage$jobsKey = 'jobs';
var $elm$browser$Browser$Navigation$load = _Browser_load;
var $author$project$Message$Storage$loadFromLocalStorage = _Platform_outgoingPort('loadFromLocalStorage', $elm$json$Json$Encode$string);
var $author$project$Message$Storage$loadFromSessionStorage = _Platform_outgoingPort('loadFromSessionStorage', $elm$json$Json$Encode$string);
var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $elm$json$Json$Decode$nullable = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder)
			]));
};
var $author$project$Message$Effects$openEventStream = _Platform_outgoingPort(
	'openEventStream',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'eventTypes',
					$elm$json$Json$Encode$list($elm$json$Json$Encode$string)($.fO)),
					_Utils_Tuple2(
					'url',
					$elm$json$Json$Encode$string($.h4))
				]));
	});
var $elm$url$Url$Builder$QueryParameter = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$url$Url$percentEncode = _Url_percentEncode;
var $elm$url$Url$Builder$int = F2(
	function (key, value) {
		return A2(
			$elm$url$Url$Builder$QueryParameter,
			$elm$url$Url$percentEncode(key),
			$elm$core$String$fromInt(value));
	});
var $author$project$Api$Pagination$params = function (p) {
	if (!p.$) {
		var direction = p.a.dH;
		var limit = p.a.ec;
		return _List_fromArray(
			[
				A2($elm$url$Url$Builder$int, 'limit', limit),
				function () {
				switch (direction.$) {
					case 0:
						var since = direction.a;
						return A2($elm$url$Url$Builder$int, 'since', since);
					case 1:
						var until = direction.a;
						return A2($elm$url$Url$Builder$int, 'limit', until);
					case 2:
						var from = direction.a;
						return A2($elm$url$Url$Builder$int, 'limit', from);
					default:
						var to = direction.a;
						return A2($elm$url$Url$Builder$int, 'limit', to);
				}
			}()
			]);
	} else {
		return _List_Nil;
	}
};
var $elm$core$Result$mapError = F2(
	function (f, result) {
		if (!result.$) {
			var v = result.a;
			return $elm$core$Result$Ok(v);
		} else {
			var e = result.a;
			return $elm$core$Result$Err(
				f(e));
		}
	});
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (!maybeValue.$) {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $elm_community$list_extra$List$Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var first = list.a;
				var rest = list.b;
				if (predicate(first)) {
					return $elm$core$Maybe$Just(first);
				} else {
					var $temp$predicate = predicate,
						$temp$list = rest;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$Bad = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$Good = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $elm$parser$Parser$Advanced$Parser = $elm$core$Basics$identity;
var $elm$parser$Parser$Advanced$backtrackable = function (_v0) {
	var parse = _v0;
	return function (s0) {
		var _v1 = parse(s0);
		if (_v1.$ === 1) {
			var x = _v1.b;
			return A2($elm$parser$Parser$Advanced$Bad, false, x);
		} else {
			var a = _v1.b;
			var s1 = _v1.c;
			return A3($elm$parser$Parser$Advanced$Good, false, a, s1);
		}
	};
};
var $elm$parser$Parser$backtrackable = $elm$parser$Parser$Advanced$backtrackable;
var $elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$parser$Parser$Advanced$chompWhileHelp = F5(
	function (isGood, offset, row, col, s0) {
		chompWhileHelp:
		while (true) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.a);
			if (_Utils_eq(newOffset, -1)) {
				return A3(
					$elm$parser$Parser$Advanced$Good,
					_Utils_cmp(s0.f, offset) < 0,
					0,
					{dw: col, i: s0.i, j: s0.j, f: offset, aA: row, a: s0.a});
			} else {
				if (_Utils_eq(newOffset, -2)) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = newOffset,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$chompWhile = function (isGood) {
	return function (s) {
		return A5($elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.f, s.aA, s.dw, s);
	};
};
var $elm$parser$Parser$chompWhile = $elm$parser$Parser$Advanced$chompWhile;
var $elm$parser$Parser$Advanced$mapChompedString = F2(
	function (func, _v0) {
		var parse = _v0;
		return function (s0) {
			var _v1 = parse(s0);
			if (_v1.$ === 1) {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				return A3(
					$elm$parser$Parser$Advanced$Good,
					p,
					A2(
						func,
						A3($elm$core$String$slice, s0.f, s1.f, s0.a),
						a),
					s1);
			}
		};
	});
var $elm$parser$Parser$Advanced$getChompedString = function (parser) {
	return A2($elm$parser$Parser$Advanced$mapChompedString, $elm$core$Basics$always, parser);
};
var $elm$parser$Parser$getChompedString = $elm$parser$Parser$Advanced$getChompedString;
var $elm$parser$Parser$Advanced$map2 = F3(
	function (func, _v0, _v1) {
		var parseA = _v0;
		var parseB = _v1;
		return function (s0) {
			var _v2 = parseA(s0);
			if (_v2.$ === 1) {
				var p = _v2.a;
				var x = _v2.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p1 = _v2.a;
				var a = _v2.b;
				var s1 = _v2.c;
				var _v3 = parseB(s1);
				if (_v3.$ === 1) {
					var p2 = _v3.a;
					var x = _v3.b;
					return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
				} else {
					var p2 = _v3.a;
					var b = _v3.b;
					var s2 = _v3.c;
					return A3(
						$elm$parser$Parser$Advanced$Good,
						p1 || p2,
						A2(func, a, b),
						s2);
				}
			}
		};
	});
var $elm$parser$Parser$Advanced$ignorer = F2(
	function (keepParser, ignoreParser) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$always, keepParser, ignoreParser);
	});
var $elm$parser$Parser$ignorer = $elm$parser$Parser$Advanced$ignorer;
var $elm$parser$Parser$Advanced$keeper = F2(
	function (parseFunc, parseArg) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$apL, parseFunc, parseArg);
	});
var $elm$parser$Parser$keeper = $elm$parser$Parser$Advanced$keeper;
var $elm$parser$Parser$ExpectingKeyword = function (a) {
	return {$: 9, a: a};
};
var $elm$parser$Parser$Advanced$Token = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$AddRight = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$DeadEnd = F4(
	function (row, col, problem, contextStack) {
		return {dw: col, fx: contextStack, ey: problem, aA: row};
	});
var $elm$parser$Parser$Advanced$Empty = {$: 0};
var $elm$parser$Parser$Advanced$fromState = F2(
	function (s, x) {
		return A2(
			$elm$parser$Parser$Advanced$AddRight,
			$elm$parser$Parser$Advanced$Empty,
			A4($elm$parser$Parser$Advanced$DeadEnd, s.aA, s.dw, x, s.i));
	});
var $elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;
var $elm$core$Basics$not = _Basics_not;
var $elm$parser$Parser$Advanced$keyword = function (_v0) {
	var kwd = _v0.a;
	var expecting = _v0.b;
	var progress = !$elm$core$String$isEmpty(kwd);
	return function (s) {
		var _v1 = A5($elm$parser$Parser$Advanced$isSubString, kwd, s.f, s.aA, s.dw, s.a);
		var newOffset = _v1.a;
		var newRow = _v1.b;
		var newCol = _v1.c;
		return (_Utils_eq(newOffset, -1) || (0 <= A3(
			$elm$parser$Parser$Advanced$isSubChar,
			function (c) {
				return $elm$core$Char$isAlphaNum(c) || (c === '_');
			},
			newOffset,
			s.a))) ? A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(
			$elm$parser$Parser$Advanced$Good,
			progress,
			0,
			{dw: newCol, i: s.i, j: s.j, f: newOffset, aA: newRow, a: s.a});
	};
};
var $elm$parser$Parser$keyword = function (kwd) {
	return $elm$parser$Parser$Advanced$keyword(
		A2(
			$elm$parser$Parser$Advanced$Token,
			kwd,
			$elm$parser$Parser$ExpectingKeyword(kwd)));
};
var $elm$core$Basics$neq = _Utils_notEqual;
var $author$project$Api$Pagination$nextRel = 'next';
var $elm$parser$Parser$Advanced$Append = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$oneOfHelp = F3(
	function (s0, bag, parsers) {
		oneOfHelp:
		while (true) {
			if (!parsers.b) {
				return A2($elm$parser$Parser$Advanced$Bad, false, bag);
			} else {
				var parse = parsers.a;
				var remainingParsers = parsers.b;
				var _v1 = parse(s0);
				if (!_v1.$) {
					var step = _v1;
					return step;
				} else {
					var step = _v1;
					var p = step.a;
					var x = step.b;
					if (p) {
						return step;
					} else {
						var $temp$s0 = s0,
							$temp$bag = A2($elm$parser$Parser$Advanced$Append, bag, x),
							$temp$parsers = remainingParsers;
						s0 = $temp$s0;
						bag = $temp$bag;
						parsers = $temp$parsers;
						continue oneOfHelp;
					}
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$oneOf = function (parsers) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$oneOfHelp, s, $elm$parser$Parser$Advanced$Empty, parsers);
	};
};
var $elm$parser$Parser$oneOf = $elm$parser$Parser$Advanced$oneOf;
var $author$project$Concourse$Pagination$From = function (a) {
	return {$: 2, a: a};
};
var $author$project$Concourse$Pagination$Since = function (a) {
	return {$: 0, a: a};
};
var $author$project$Concourse$Pagination$To = function (a) {
	return {$: 3, a: a};
};
var $author$project$Concourse$Pagination$Until = function (a) {
	return {$: 1, a: a};
};
var $elm$url$Url$Parser$Internal$Parser = $elm$core$Basics$identity;
var $elm$url$Url$Parser$Query$custom = F2(
	function (key, func) {
		return function (dict) {
			return func(
				A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					A2($elm$core$Dict$get, key, dict)));
		};
	});
var $elm$url$Url$Parser$Query$int = function (key) {
	return A2(
		$elm$url$Url$Parser$Query$custom,
		key,
		function (stringList) {
			if (stringList.b && (!stringList.b.b)) {
				var str = stringList.a;
				return $elm$core$String$toInt(str);
			} else {
				return $elm$core$Maybe$Nothing;
			}
		});
};
var $elm_community$maybe_extra$Maybe$Extra$orElse = F2(
	function (ma, mb) {
		if (mb.$ === 1) {
			return ma;
		} else {
			return mb;
		}
	});
var $elm$url$Url$Parser$State = F5(
	function (visited, unvisited, params, frag, value) {
		return {au: frag, ay: params, ao: unvisited, h6: value, aF: visited};
	});
var $elm$url$Url$Parser$getFirstMatch = function (states) {
	getFirstMatch:
	while (true) {
		if (!states.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var state = states.a;
			var rest = states.b;
			var _v1 = state.ao;
			if (!_v1.b) {
				return $elm$core$Maybe$Just(state.h6);
			} else {
				if ((_v1.a === '') && (!_v1.b.b)) {
					return $elm$core$Maybe$Just(state.h6);
				} else {
					var $temp$states = rest;
					states = $temp$states;
					continue getFirstMatch;
				}
			}
		}
	}
};
var $elm$url$Url$Parser$removeFinalEmpty = function (segments) {
	if (!segments.b) {
		return _List_Nil;
	} else {
		if ((segments.a === '') && (!segments.b.b)) {
			return _List_Nil;
		} else {
			var segment = segments.a;
			var rest = segments.b;
			return A2(
				$elm$core$List$cons,
				segment,
				$elm$url$Url$Parser$removeFinalEmpty(rest));
		}
	}
};
var $elm$url$Url$Parser$preparePath = function (path) {
	var _v0 = A2($elm$core$String$split, '/', path);
	if (_v0.b && (_v0.a === '')) {
		var segments = _v0.b;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	} else {
		var segments = _v0;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	}
};
var $elm$url$Url$Parser$addToParametersHelp = F2(
	function (value, maybeList) {
		if (maybeList.$ === 1) {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[value]));
		} else {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, value, list));
		}
	});
var $elm$url$Url$percentDecode = _Url_percentDecode;
var $elm$url$Url$Parser$addParam = F2(
	function (segment, dict) {
		var _v0 = A2($elm$core$String$split, '=', segment);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var rawKey = _v0.a;
			var _v1 = _v0.b;
			var rawValue = _v1.a;
			var _v2 = $elm$url$Url$percentDecode(rawKey);
			if (_v2.$ === 1) {
				return dict;
			} else {
				var key = _v2.a;
				var _v3 = $elm$url$Url$percentDecode(rawValue);
				if (_v3.$ === 1) {
					return dict;
				} else {
					var value = _v3.a;
					return A3(
						$elm$core$Dict$update,
						key,
						$elm$url$Url$Parser$addToParametersHelp(value),
						dict);
				}
			}
		} else {
			return dict;
		}
	});
var $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {
	if (maybeQuery.$ === 1) {
		return $elm$core$Dict$empty;
	} else {
		var qry = maybeQuery.a;
		return A3(
			$elm$core$List$foldr,
			$elm$url$Url$Parser$addParam,
			$elm$core$Dict$empty,
			A2($elm$core$String$split, '&', qry));
	}
};
var $elm$url$Url$Parser$parse = F2(
	function (_v0, url) {
		var parser = _v0;
		return $elm$url$Url$Parser$getFirstMatch(
			parser(
				A5(
					$elm$url$Url$Parser$State,
					_List_Nil,
					$elm$url$Url$Parser$preparePath(url.g7),
					$elm$url$Url$Parser$prepareQuery(url.al),
					url.f3,
					$elm$core$Basics$identity)));
	});
var $elm$url$Url$Parser$Parser = $elm$core$Basics$identity;
var $elm$url$Url$Parser$query = function (_v0) {
	var queryParser = _v0;
	return function (_v1) {
		var visited = _v1.aF;
		var unvisited = _v1.ao;
		var params = _v1.ay;
		var frag = _v1.au;
		var value = _v1.h6;
		return _List_fromArray(
			[
				A5(
				$elm$url$Url$Parser$State,
				visited,
				unvisited,
				params,
				frag,
				value(
					queryParser(params)))
			]);
	};
};
var $author$project$Api$Pagination$parsePage = function (url) {
	var tryParam = function (param) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$core$Maybe$Nothing,
			A2(
				$elm$core$Maybe$andThen,
				$elm$url$Url$Parser$parse(
					$elm$url$Url$Parser$query(
						$elm$url$Url$Parser$Query$int(param))),
				A2(
					$elm$core$Maybe$map,
					function (u) {
						return _Utils_update(
							u,
							{g7: ''});
					},
					$elm$url$Url$fromString(url))));
	};
	var tryDirection = function (dir) {
		return A2(
			$elm$core$Basics$composeR,
			tryParam,
			$elm$core$Maybe$map(
				function (n) {
					return {
						dH: dir(n),
						ec: A2(
							$elm$core$Maybe$withDefault,
							0,
							tryParam('limit'))
					};
				}));
	};
	return A2(
		$elm_community$maybe_extra$Maybe$Extra$orElse,
		A2(tryDirection, $author$project$Concourse$Pagination$To, 'to'),
		A2(
			$elm_community$maybe_extra$Maybe$Extra$orElse,
			A2(tryDirection, $author$project$Concourse$Pagination$From, 'from'),
			A2(
				$elm_community$maybe_extra$Maybe$Extra$orElse,
				A2(tryDirection, $author$project$Concourse$Pagination$Since, 'since'),
				A2(tryDirection, $author$project$Concourse$Pagination$Until, 'until'))));
};
var $author$project$Api$Pagination$previousRel = 'previous';
var $elm$parser$Parser$Advanced$spaces = $elm$parser$Parser$Advanced$chompWhile(
	function (c) {
		return (c === ' ') || ((c === '\n') || (c === '\r'));
	});
var $elm$parser$Parser$spaces = $elm$parser$Parser$Advanced$spaces;
var $elm$parser$Parser$Advanced$succeed = function (a) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$Good, false, a, s);
	};
};
var $elm$parser$Parser$succeed = $elm$parser$Parser$Advanced$succeed;
var $elm$parser$Parser$ExpectingSymbol = function (a) {
	return {$: 8, a: a};
};
var $elm$parser$Parser$Advanced$token = function (_v0) {
	var str = _v0.a;
	var expecting = _v0.b;
	var progress = !$elm$core$String$isEmpty(str);
	return function (s) {
		var _v1 = A5($elm$parser$Parser$Advanced$isSubString, str, s.f, s.aA, s.dw, s.a);
		var newOffset = _v1.a;
		var newRow = _v1.b;
		var newCol = _v1.c;
		return _Utils_eq(newOffset, -1) ? A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(
			$elm$parser$Parser$Advanced$Good,
			progress,
			0,
			{dw: newCol, i: s.i, j: s.j, f: newOffset, aA: newRow, a: s.a});
	};
};
var $elm$parser$Parser$Advanced$symbol = $elm$parser$Parser$Advanced$token;
var $elm$parser$Parser$symbol = function (str) {
	return $elm$parser$Parser$Advanced$symbol(
		A2(
			$elm$parser$Parser$Advanced$Token,
			str,
			$elm$parser$Parser$ExpectingSymbol(str)));
};
var $author$project$Api$Pagination$pagination = function () {
	var entry = function (rel) {
		return $elm$parser$Parser$backtrackable(
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed($author$project$Api$Pagination$parsePage),
					$elm$parser$Parser$symbol('<')),
				A2(
					$elm$parser$Parser$ignorer,
					A2(
						$elm$parser$Parser$ignorer,
						A2(
							$elm$parser$Parser$ignorer,
							A2(
								$elm$parser$Parser$ignorer,
								A2(
									$elm$parser$Parser$ignorer,
									A2(
										$elm$parser$Parser$ignorer,
										A2(
											$elm$parser$Parser$ignorer,
											A2(
												$elm$parser$Parser$ignorer,
												$elm$parser$Parser$getChompedString(
													$elm$parser$Parser$chompWhile(
														$elm$core$Basics$neq('>'))),
												$elm$parser$Parser$symbol('>')),
											$elm$parser$Parser$symbol(';')),
										$elm$parser$Parser$spaces),
									$elm$parser$Parser$keyword('rel')),
								$elm$parser$Parser$symbol('=')),
							$elm$parser$Parser$symbol('\"')),
						$elm$parser$Parser$keyword(rel)),
					$elm$parser$Parser$symbol('\"'))));
	};
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					$elm$parser$Parser$succeed(
						F2(
							function (p, n) {
								return {bh: n, br: p};
							})),
					A2(
						$elm$parser$Parser$ignorer,
						A2(
							$elm$parser$Parser$ignorer,
							entry($author$project$Api$Pagination$previousRel),
							$elm$parser$Parser$symbol(',')),
						$elm$parser$Parser$spaces)),
				entry($author$project$Api$Pagination$nextRel)),
				A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					$elm$parser$Parser$succeed(
						F2(
							function (n, p) {
								return {bh: n, br: p};
							})),
					A2(
						$elm$parser$Parser$ignorer,
						A2(
							$elm$parser$Parser$ignorer,
							entry($author$project$Api$Pagination$nextRel),
							$elm$parser$Parser$symbol(',')),
						$elm$parser$Parser$spaces)),
				entry($author$project$Api$Pagination$previousRel)),
				A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed(
					function (p) {
						return {bh: $elm$core$Maybe$Nothing, br: p};
					}),
				entry($author$project$Api$Pagination$previousRel)),
				A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed(
					function (n) {
						return {bh: n, br: $elm$core$Maybe$Nothing};
					}),
				entry($author$project$Api$Pagination$nextRel))
			]));
}();
var $elm$parser$Parser$DeadEnd = F3(
	function (row, col, problem) {
		return {dw: col, ey: problem, aA: row};
	});
var $elm$parser$Parser$problemToDeadEnd = function (p) {
	return A3($elm$parser$Parser$DeadEnd, p.aA, p.dw, p.ey);
};
var $elm$parser$Parser$Advanced$bagToList = F2(
	function (bag, list) {
		bagToList:
		while (true) {
			switch (bag.$) {
				case 0:
					return list;
				case 1:
					var bag1 = bag.a;
					var x = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$core$List$cons, x, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
				default:
					var bag1 = bag.a;
					var bag2 = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$parser$Parser$Advanced$bagToList, bag2, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
			}
		}
	});
var $elm$parser$Parser$Advanced$run = F2(
	function (_v0, src) {
		var parse = _v0;
		var _v1 = parse(
			{dw: 1, i: _List_Nil, j: 1, f: 0, aA: 1, a: src});
		if (!_v1.$) {
			var value = _v1.b;
			return $elm$core$Result$Ok(value);
		} else {
			var bag = _v1.b;
			return $elm$core$Result$Err(
				A2($elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));
		}
	});
var $elm$parser$Parser$run = F2(
	function (parser, source) {
		var _v0 = A2($elm$parser$Parser$Advanced$run, parser, source);
		if (!_v0.$) {
			var a = _v0.a;
			return $elm$core$Result$Ok(a);
		} else {
			var problems = _v0.a;
			return $elm$core$Result$Err(
				A2($elm$core$List$map, $elm$parser$Parser$problemToDeadEnd, problems));
		}
	});
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $elm$core$String$toLower = _String_toLower;
var $elm$core$Result$toMaybe = function (result) {
	if (!result.$) {
		var v = result.a;
		return $elm$core$Maybe$Just(v);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Api$Pagination$parseLinks = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.U;
	},
	A2(
		$elm$core$Basics$composeR,
		$elm$core$Dict$toList,
		A2(
			$elm$core$Basics$composeR,
			$elm_community$list_extra$List$Extra$find(
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Tuple$first,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$String$toLower,
						$elm$core$Basics$eq('link')))),
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Maybe$map($elm$core$Tuple$second),
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Maybe$andThen(
						A2(
							$elm$core$Basics$composeR,
							$elm$parser$Parser$run($author$project$Api$Pagination$pagination),
							$elm$core$Result$toMaybe)),
					$elm$core$Maybe$withDefault(
						{bh: $elm$core$Maybe$Nothing, br: $elm$core$Maybe$Nothing}))))));
var $author$project$Api$Pagination$parsePagination = F2(
	function (decoder, response) {
		return A2(
			$elm$core$Result$map,
			function (content) {
				return {
					fw: content,
					g6: $author$project$Api$Pagination$parseLinks(response)
				};
			},
			A2(
				$elm$core$Result$mapError,
				$elm$json$Json$Decode$errorToString,
				A2(
					$elm$json$Json$Decode$decodeString,
					$elm$json$Json$Decode$list(decoder),
					response.N)));
	});
var $author$project$Api$paginatedGet = F3(
	function (endpoint, page, decoder) {
		return {
			N: $elm$http$Http$emptyBody,
			ac: endpoint,
			ad: $elm$http$Http$expectStringResponse(
				$author$project$Api$Pagination$parsePagination(decoder)),
			U: _List_Nil,
			Z: 'GET',
			al: $author$project$Api$Pagination$params(page)
		};
	});
var $author$project$Message$Effects$pinTeamNames = _Platform_outgoingPort(
	'pinTeamNames',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'pageBodyClass',
					$elm$json$Json$Encode$string($.g5)),
					_Utils_Tuple2(
					'pageHeaderHeight',
					$elm$json$Json$Encode$float($.cY)),
					_Utils_Tuple2(
					'sectionBodyClass',
					$elm$json$Json$Encode$string($.hu)),
					_Utils_Tuple2(
					'sectionClass',
					$elm$json$Json$Encode$string($.c5)),
					_Utils_Tuple2(
					'sectionHeaderClass',
					$elm$json$Json$Encode$string($.hv))
				]));
	});
var $author$project$Message$Storage$pipelinesKey = 'pipelines';
var $author$project$Concourse$csrfTokenHeaderName = 'X-Csrf-Token';
var $elm$http$Http$Internal$Header = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$http$Http$header = $elm$http$Http$Internal$Header;
var $author$project$Api$post = F2(
	function (endpoint, csrfToken) {
		return {
			N: $elm$http$Http$emptyBody,
			ac: endpoint,
			ad: $author$project$Api$ignoreResponse,
			U: _List_fromArray(
				[
					A2($elm$http$Http$header, $author$project$Concourse$csrfTokenHeaderName, csrfToken)
				]),
			Z: 'POST',
			al: _List_Nil
		};
	});
var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var $author$project$Api$put = F2(
	function (endpoint, csrfToken) {
		return {
			N: $elm$http$Http$emptyBody,
			ac: endpoint,
			ad: $author$project$Api$ignoreResponse,
			U: _List_fromArray(
				[
					A2($elm$http$Http$header, $author$project$Concourse$csrfTokenHeaderName, csrfToken)
				]),
			Z: 'PUT',
			al: _List_Nil
		};
	});
var $author$project$Message$Effects$rawHttpRequest = _Platform_outgoingPort('rawHttpRequest', $elm$json$Json$Encode$string);
var $author$project$Message$Effects$renderPipeline = _Platform_outgoingPort(
	'renderPipeline',
	function ($) {
		var a = $.a;
		var b = $.b;
		return A2(
			$elm$json$Json$Encode$list,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					$elm$core$Basics$identity(a),
					$elm$core$Basics$identity(b)
				]));
	});
var $author$project$Message$Effects$renderSvgIcon = _Platform_outgoingPort('renderSvgIcon', $elm$json$Json$Encode$string);
var $elm$browser$Browser$Navigation$replaceUrl = _Browser_replaceUrl;
var $elm$http$Http$Internal$Request = $elm$core$Basics$identity;
var $elm$http$Http$request = $elm$core$Basics$identity;
var $elm$url$Url$Builder$toQueryPair = function (_v0) {
	var key = _v0.a;
	var value = _v0.b;
	return key + ('=' + value);
};
var $elm$url$Url$Builder$toQuery = function (parameters) {
	if (!parameters.b) {
		return '';
	} else {
		return '?' + A2(
			$elm$core$String$join,
			'&',
			A2($elm$core$List$map, $elm$url$Url$Builder$toQueryPair, parameters));
	}
};
var $elm$url$Url$Builder$absolute = F2(
	function (pathSegments, parameters) {
		return '/' + (A2($elm$core$String$join, '/', pathSegments) + $elm$url$Url$Builder$toQuery(parameters));
	});
var $author$project$Api$Endpoints$basePath = _List_fromArray(
	['api', 'v1']);
var $author$project$Api$Endpoints$baseSkyPath = _List_fromArray(
	['sky']);
var $author$project$Api$Endpoints$buildEndpointToPath = function (endpoint) {
	switch (endpoint) {
		case 0:
			return _List_Nil;
		case 1:
			return _List_fromArray(
				['plan']);
		case 2:
			return _List_fromArray(
				['preparation']);
		case 3:
			return _List_fromArray(
				['abort']);
		case 4:
			return _List_fromArray(
				['resources']);
		default:
			return _List_fromArray(
				['events']);
	}
};
var $author$project$Api$Endpoints$jobEndpointToPath = function (endpoint) {
	switch (endpoint) {
		case 0:
			return _List_Nil;
		case 1:
			return _List_fromArray(
				['pause']);
		case 2:
			return _List_fromArray(
				['unpause']);
		default:
			return _List_fromArray(
				['builds']);
	}
};
var $author$project$Api$Endpoints$pipelineEndpointToPath = function (endpoint) {
	switch (endpoint) {
		case 0:
			return _List_Nil;
		case 1:
			return _List_fromArray(
				['pause']);
		case 2:
			return _List_fromArray(
				['unpause']);
		case 3:
			return _List_fromArray(
				['expose']);
		case 4:
			return _List_fromArray(
				['hide']);
		case 5:
			return _List_fromArray(
				['jobs']);
		default:
			return _List_fromArray(
				['resources']);
	}
};
var $author$project$Api$Endpoints$pipelinePath = function (_v0) {
	var pipelineName = _v0.c_;
	var teamName = _v0.dh;
	return _Utils_ap(
		$author$project$Api$Endpoints$basePath,
		_List_fromArray(
			['teams', teamName, 'pipelines', pipelineName]));
};
var $author$project$Api$Endpoints$resourceEndpointToPath = function (endpoint) {
	switch (endpoint) {
		case 0:
			return _List_Nil;
		case 1:
			return _List_fromArray(
				['versions']);
		case 2:
			return _List_fromArray(
				['unpin']);
		case 3:
			return _List_fromArray(
				['check']);
		default:
			return _List_fromArray(
				['pin_comment']);
	}
};
var $author$project$Api$Endpoints$resourcePath = function (_v0) {
	var pipelineName = _v0.c_;
	var teamName = _v0.dh;
	var resourceName = _v0.hk;
	return _Utils_ap(
		$author$project$Api$Endpoints$pipelinePath(
			{c_: pipelineName, dh: teamName}),
		_List_fromArray(
			['resources', resourceName]));
};
var $author$project$Api$Endpoints$resourceVersionEndpointToPath = function (endpoint) {
	switch (endpoint) {
		case 0:
			return _List_fromArray(
				['input_to']);
		case 1:
			return _List_fromArray(
				['output_of']);
		case 2:
			return _List_fromArray(
				['pin']);
		case 3:
			return _List_fromArray(
				['enable']);
		default:
			return _List_fromArray(
				['disable']);
	}
};
var $author$project$Api$Endpoints$teamEndpointToPath = function (endpoint) {
	if (!endpoint) {
		return _List_fromArray(
			['pipelines']);
	} else {
		return _List_fromArray(
			['pipelines', 'ordering']);
	}
};
var $author$project$Api$Endpoints$toPath = function (endpoint) {
	switch (endpoint.$) {
		case 0:
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_List_fromArray(
					['pipelines']));
		case 1:
			var id = endpoint.a;
			var subEndpoint = endpoint.b;
			return _Utils_ap(
				$author$project$Api$Endpoints$pipelinePath(id),
				$author$project$Api$Endpoints$pipelineEndpointToPath(subEndpoint));
		case 2:
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_List_fromArray(
					['jobs']));
		case 3:
			var id = endpoint.a;
			var subEndpoint = endpoint.b;
			return _Utils_ap(
				$author$project$Api$Endpoints$pipelinePath(id),
				_Utils_ap(
					_List_fromArray(
						['jobs', id.d7]),
					$author$project$Api$Endpoints$jobEndpointToPath(subEndpoint)));
		case 4:
			var id = endpoint.a;
			return _Utils_ap(
				$author$project$Api$Endpoints$pipelinePath(id),
				_List_fromArray(
					['jobs', id.d7, 'builds', id.ff]));
		case 5:
			var id = endpoint.a;
			var subEndpoint = endpoint.b;
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_Utils_ap(
					_List_fromArray(
						[
							'builds',
							$elm$core$String$fromInt(id)
						]),
					$author$project$Api$Endpoints$buildEndpointToPath(subEndpoint)));
		case 6:
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_List_fromArray(
					['resources']));
		case 7:
			var id = endpoint.a;
			var subEndpoint = endpoint.b;
			return _Utils_ap(
				$author$project$Api$Endpoints$resourcePath(id),
				$author$project$Api$Endpoints$resourceEndpointToPath(subEndpoint));
		case 8:
			var id = endpoint.a;
			var subEndpoint = endpoint.b;
			return _Utils_ap(
				$author$project$Api$Endpoints$resourcePath(id),
				_Utils_ap(
					_List_fromArray(
						[
							'versions',
							$elm$core$String$fromInt(id.h7)
						]),
					$author$project$Api$Endpoints$resourceVersionEndpointToPath(subEndpoint)));
		case 9:
			var id = endpoint.a;
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_List_fromArray(
					[
						'checks',
						$elm$core$String$fromInt(id)
					]));
		case 10:
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_List_fromArray(
					['teams']));
		case 11:
			var teamName = endpoint.a;
			var subEndpoint = endpoint.b;
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_Utils_ap(
					_List_fromArray(
						['teams', teamName]),
					$author$project$Api$Endpoints$teamEndpointToPath(subEndpoint)));
		case 12:
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_List_fromArray(
					['info']));
		case 13:
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_List_fromArray(
					['cli']));
		case 14:
			return _Utils_ap(
				$author$project$Api$Endpoints$basePath,
				_List_fromArray(
					['user']));
		default:
			return _Utils_ap(
				$author$project$Api$Endpoints$baseSkyPath,
				_List_fromArray(
					['logout']));
	}
};
var $author$project$Api$Endpoints$toString = F2(
	function (query, endpoint) {
		return A2(
			$elm$url$Url$Builder$absolute,
			$author$project$Api$Endpoints$toPath(endpoint),
			query);
	});
var $elm$http$Http$toTask = function (_v0) {
	var request_ = _v0;
	return A2(_Http_toTask, request_, $elm$core$Maybe$Nothing);
};
var $author$project$Api$request = function (_v0) {
	var endpoint = _v0.ac;
	var method = _v0.Z;
	var headers = _v0.U;
	var body = _v0.N;
	var expect = _v0.ad;
	var query = _v0.al;
	return $elm$http$Http$toTask(
		$elm$http$Http$request(
			{
				N: body,
				ad: expect,
				U: headers,
				Z: method,
				hV: $elm$core$Maybe$Nothing,
				h4: A2($author$project$Api$Endpoints$toString, query, endpoint),
				id: false
			}));
};
var $author$project$Message$Effects$requestLoginRedirect = _Platform_outgoingPort('requestLoginRedirect', $elm$json$Json$Encode$string);
var $author$project$Message$Effects$resetPipelineFocus = _Platform_outgoingPort(
	'resetPipelineFocus',
	function ($) {
		return $elm$json$Json$Encode$null;
	});
var $author$project$Message$Storage$saveToLocalStorage = _Platform_outgoingPort(
	'saveToLocalStorage',
	function ($) {
		var a = $.a;
		var b = $.b;
		return A2(
			$elm$json$Json$Encode$list,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					$elm$json$Json$Encode$string(a),
					$elm$core$Basics$identity(b)
				]));
	});
var $author$project$Message$Storage$saveToSessionStorage = _Platform_outgoingPort(
	'saveToSessionStorage',
	function ($) {
		var a = $.a;
		var b = $.b;
		return A2(
			$elm$json$Json$Encode$list,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					$elm$json$Json$Encode$string(a),
					$elm$core$Basics$identity(b)
				]));
	});
var $elm$browser$Browser$Dom$setViewportOf = _Browser_setViewportOf;
var $author$project$Message$Effects$scrollCoords = F3(
	function (id, getX, getY) {
		return A2(
			$elm$core$Task$andThen,
			function (viewport) {
				return A3(
					$elm$browser$Browser$Dom$setViewportOf,
					id,
					getX(viewport),
					getY(viewport));
			},
			$elm$browser$Browser$Dom$getViewportOf(id));
	});
var $author$project$Message$Effects$scrollToId = _Platform_outgoingPort(
	'scrollToId',
	function ($) {
		var a = $.a;
		var b = $.b;
		return A2(
			$elm$json$Json$Encode$list,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					$elm$json$Json$Encode$string(a),
					$elm$json$Json$Encode$string(b)
				]));
	});
var $author$project$Message$Effects$scroll = F2(
	function (direction, id) {
		switch (direction.$) {
			case 0:
				return A2(
					$elm$core$Task$attempt,
					function (_v1) {
						return $author$project$Message$Callback$EmptyCallback;
					},
					A3(
						$author$project$Message$Effects$scrollCoords,
						id,
						$elm$core$Basics$always(0),
						$elm$core$Basics$always(0)));
			case 1:
				return A2(
					$elm$core$Task$attempt,
					function (_v2) {
						return $author$project$Message$Callback$EmptyCallback;
					},
					A3(
						$author$project$Message$Effects$scrollCoords,
						id,
						$elm$core$Basics$always(0),
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.ia;
							},
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.$8;
								},
								$elm$core$Basics$add(60)))));
			case 2:
				return A2(
					$elm$core$Task$attempt,
					function (_v3) {
						return $author$project$Message$Callback$EmptyCallback;
					},
					A3(
						$author$project$Message$Effects$scrollCoords,
						id,
						$elm$core$Basics$always(0),
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.ia;
							},
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.$8;
								},
								$elm$core$Basics$add(-60)))));
			case 3:
				return A2(
					$elm$core$Task$attempt,
					function (_v4) {
						return $author$project$Message$Callback$EmptyCallback;
					},
					A3(
						$author$project$Message$Effects$scrollCoords,
						id,
						$elm$core$Basics$always(0),
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.ho;
							},
							function ($) {
								return $.be;
							})));
			case 4:
				var delta = direction.a;
				return A2(
					$elm$core$Task$attempt,
					function (_v5) {
						return $author$project$Message$Callback$EmptyCallback;
					},
					A3(
						$author$project$Message$Effects$scrollCoords,
						id,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.ia;
							},
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.$7;
								},
								$elm$core$Basics$add(-delta))),
						$elm$core$Basics$always(0)));
			default:
				var toId = direction.a;
				return $author$project$Message$Effects$scrollToId(
					_Utils_Tuple2(id, toId));
		}
	});
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === -2) {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$core$Set$foldl = F3(
	function (func, initialState, _v0) {
		var dict = _v0;
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (key, _v1, state) {
					return A2(func, key, state);
				}),
			initialState,
			dict);
	});
var $elm$json$Json$Encode$set = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$Set$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(0),
				entries));
	});
var $author$project$Message$Effects$setFavicon = _Platform_outgoingPort('setFavicon', $elm$json$Json$Encode$string);
var $author$project$Message$Storage$sideBarStateKey = 'side_bar_state';
var $elm$core$Process$sleep = _Process_sleep;
var $author$project$Message$Effects$syncStickyBuildLogHeaders = _Platform_outgoingPort(
	'syncStickyBuildLogHeaders',
	function ($) {
		return $elm$json$Json$Encode$null;
	});
var $author$project$Message$Effects$syncTextareaHeight = _Platform_outgoingPort('syncTextareaHeight', $elm$json$Json$Encode$string);
var $author$project$Message$Storage$teamsKey = 'teams';
var $elm$core$Bitwise$or = _Bitwise_or;
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $elm$core$Bitwise$and = _Bitwise_and;
var $truqu$elm_base64$Base64$Encode$intToBase64 = function (i) {
	switch (i) {
		case 0:
			return 'A';
		case 1:
			return 'B';
		case 2:
			return 'C';
		case 3:
			return 'D';
		case 4:
			return 'E';
		case 5:
			return 'F';
		case 6:
			return 'G';
		case 7:
			return 'H';
		case 8:
			return 'I';
		case 9:
			return 'J';
		case 10:
			return 'K';
		case 11:
			return 'L';
		case 12:
			return 'M';
		case 13:
			return 'N';
		case 14:
			return 'O';
		case 15:
			return 'P';
		case 16:
			return 'Q';
		case 17:
			return 'R';
		case 18:
			return 'S';
		case 19:
			return 'T';
		case 20:
			return 'U';
		case 21:
			return 'V';
		case 22:
			return 'W';
		case 23:
			return 'X';
		case 24:
			return 'Y';
		case 25:
			return 'Z';
		case 26:
			return 'a';
		case 27:
			return 'b';
		case 28:
			return 'c';
		case 29:
			return 'd';
		case 30:
			return 'e';
		case 31:
			return 'f';
		case 32:
			return 'g';
		case 33:
			return 'h';
		case 34:
			return 'i';
		case 35:
			return 'j';
		case 36:
			return 'k';
		case 37:
			return 'l';
		case 38:
			return 'm';
		case 39:
			return 'n';
		case 40:
			return 'o';
		case 41:
			return 'p';
		case 42:
			return 'q';
		case 43:
			return 'r';
		case 44:
			return 's';
		case 45:
			return 't';
		case 46:
			return 'u';
		case 47:
			return 'v';
		case 48:
			return 'w';
		case 49:
			return 'x';
		case 50:
			return 'y';
		case 51:
			return 'z';
		case 52:
			return '0';
		case 53:
			return '1';
		case 54:
			return '2';
		case 55:
			return '3';
		case 56:
			return '4';
		case 57:
			return '5';
		case 58:
			return '6';
		case 59:
			return '7';
		case 60:
			return '8';
		case 61:
			return '9';
		case 62:
			return '+';
		default:
			return '/';
	}
};
var $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var $truqu$elm_base64$Base64$Encode$toBase64 = function (_int) {
	return _Utils_ap(
		$truqu$elm_base64$Base64$Encode$intToBase64(63 & (_int >>> 18)),
		_Utils_ap(
			$truqu$elm_base64$Base64$Encode$intToBase64(63 & (_int >>> 12)),
			_Utils_ap(
				$truqu$elm_base64$Base64$Encode$intToBase64(63 & (_int >>> 6)),
				$truqu$elm_base64$Base64$Encode$intToBase64(63 & (_int >>> 0)))));
};
var $truqu$elm_base64$Base64$Encode$add = F2(
	function (_char, _v0) {
		var res = _v0.a;
		var count = _v0.b;
		var acc = _v0.c;
		var current = (acc << 8) | _char;
		if (count === 2) {
			return _Utils_Tuple3(
				_Utils_ap(
					res,
					$truqu$elm_base64$Base64$Encode$toBase64(current)),
				0,
				0);
		} else {
			return _Utils_Tuple3(res, count + 1, current);
		}
	});
var $elm$core$Basics$ge = _Utils_ge;
var $truqu$elm_base64$Base64$Encode$chomp = F2(
	function (char_, acc) {
		var _char = $elm$core$Char$toCode(char_);
		return (_char < 128) ? A2($truqu$elm_base64$Base64$Encode$add, _char, acc) : ((_char < 2048) ? A2(
			$truqu$elm_base64$Base64$Encode$add,
			128 | (63 & _char),
			A2($truqu$elm_base64$Base64$Encode$add, 192 | (_char >>> 6), acc)) : (((_char < 55296) || ((_char >= 57344) && (_char <= 65535))) ? A2(
			$truqu$elm_base64$Base64$Encode$add,
			128 | (63 & _char),
			A2(
				$truqu$elm_base64$Base64$Encode$add,
				128 | (63 & (_char >>> 6)),
				A2($truqu$elm_base64$Base64$Encode$add, 224 | (_char >>> 12), acc))) : A2(
			$truqu$elm_base64$Base64$Encode$add,
			128 | (63 & _char),
			A2(
				$truqu$elm_base64$Base64$Encode$add,
				128 | (63 & (_char >>> 6)),
				A2(
					$truqu$elm_base64$Base64$Encode$add,
					128 | (63 & (_char >>> 12)),
					A2($truqu$elm_base64$Base64$Encode$add, 240 | (_char >>> 18), acc))))));
	});
var $elm$core$String$foldl = _String_foldl;
var $truqu$elm_base64$Base64$Encode$initial = _Utils_Tuple3('', 0, 0);
var $truqu$elm_base64$Base64$Encode$wrapUp = function (_v0) {
	var res = _v0.a;
	var cnt = _v0.b;
	var acc = _v0.c;
	switch (cnt) {
		case 1:
			return res + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc >>> 2)) + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc << 4)) + '=='));
		case 2:
			return res + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc >>> 10)) + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc >>> 4)) + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc << 2)) + '=')));
		default:
			return res;
	}
};
var $truqu$elm_base64$Base64$Encode$encode = function (input) {
	return $truqu$elm_base64$Base64$Encode$wrapUp(
		A3($elm$core$String$foldl, $truqu$elm_base64$Base64$Encode$chomp, $truqu$elm_base64$Base64$Encode$initial, input));
};
var $truqu$elm_base64$Base64$encode = $truqu$elm_base64$Base64$Encode$encode;
var $author$project$Message$Effects$pipelinesSectionName = function (section) {
	if (!section) {
		return 'Favorites';
	} else {
		return 'AllPipelines';
	}
};
var $author$project$Message$Effects$toHtmlID = function (domId) {
	switch (domId.$) {
		case 44:
			var section = domId.a;
			var t = domId.b;
			return $author$project$Message$Effects$pipelinesSectionName(section) + ('_' + $truqu$elm_base64$Base64$encode(t));
		case 45:
			var section = domId.a;
			var p = domId.b;
			return $author$project$Message$Effects$pipelinesSectionName(section) + ('_' + ($truqu$elm_base64$Base64$encode(p.dh) + ('_' + $truqu$elm_base64$Base64$encode(p.c_))));
		case 16:
			var section = domId.a;
			var p = domId.b;
			return $author$project$Message$Effects$pipelinesSectionName(section) + ('_' + ($truqu$elm_base64$Base64$encode(p.dh) + ('_' + ($truqu$elm_base64$Base64$encode(p.c_) + '_status'))));
		case 20:
			var section = domId.a;
			var p = domId.b;
			return $author$project$Message$Effects$pipelinesSectionName(section) + ('_' + ($truqu$elm_base64$Base64$encode(p.dh) + ('_' + ($truqu$elm_base64$Base64$encode(p.c_) + '_visibility'))));
		case 10:
			var stepID = domId.a;
			return stepID + '_first_occurrence';
		case 11:
			var stepID = domId.a;
			return stepID + '_state';
		case 47:
			return 'dashboard';
		case 48:
			var teamName = domId.a;
			return teamName;
		case 9:
			return 'resource_comment';
		case 18:
			return 'top-bar-favorited-icon';
		default:
			return '';
	}
};
var $author$project$Assets$toPath = function (asset) {
	var basePath = _List_fromArray(
		['public', 'images']);
	switch (asset.$) {
		case 0:
			var cli = asset.a;
			var imageName = function () {
				switch (cli) {
					case 0:
						return 'apple';
					case 1:
						return 'windows';
					default:
						return 'linux';
				}
			}();
			return _Utils_ap(
				basePath,
				_List_fromArray(
					[imageName + '-logo.svg']));
		case 1:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['baseline-chevron-left.svg']));
		case 2:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['baseline-chevron-right.svg']));
		case 3:
			var on = asset.a;
			var imageName = on ? 'on' : 'off';
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-toggle-' + (imageName + '.svg')]));
		case 4:
			var visible = asset.a;
			var imageName = visible ? '' : '-off';
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['baseline-visibility' + (imageName + '.svg')]));
		case 5:
			var isFavorited = asset.a;
			var imageName = isFavorited ? '-filled' : '-unfilled';
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['star' + (imageName + '.svg')]));
		case 6:
			var maybeStatus = asset.a;
			return _Utils_ap(
				basePath,
				function () {
					if (!maybeStatus.$) {
						var status = maybeStatus.a;
						var imageName = $author$project$Concourse$BuildStatus$show(status);
						return _List_fromArray(
							['favicon-' + (imageName + '.png')]);
					} else {
						return _List_fromArray(
							['favicon.png']);
					}
				}());
		case 7:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['pin-ic-white.svg']));
		case 8:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['pin-ic-grey.svg']));
		case 39:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['pencil-white.svg']));
		case 9:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['checkmark-ic.svg']));
		case 10:
			var component = asset.a;
			var imageName = function () {
				switch (component) {
					case 0:
						return 'pipeline';
					case 1:
						return 'job';
					default:
						return 'resource';
				}
			}();
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-breadcrumb-' + (imageName + '.svg')]));
		case 11:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-archived-pipeline.svg']));
		case 12:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['passport-officer-ic.svg']));
		case 13:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['concourse-logo-white.svg']));
		case 14:
			var icon = asset.a;
			var imageName = function () {
				switch (icon) {
					case 0:
						return 'play';
					case 1:
						return 'pause';
					case 2:
						return 'add';
					default:
						return 'abort';
				}
			}();
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-' + (imageName + '-circle-outline-white.svg')]));
		case 15:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-cogs.svg']));
		case 16:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-running-legend.svg']));
		case 17:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-not-blocking-check.svg']));
		case 18:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-rerun.svg']));
		case 19:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-pending.svg']));
		case 20:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-interrupted.svg']));
		case 21:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-cancelled.svg']));
		case 22:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-success-check.svg']));
		case 23:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-failure-times.svg']));
		case 24:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-exclamation-triangle.svg']));
		case 25:
			var status = asset.a;
			var imageName = function () {
				switch (status.$) {
					case 0:
						return 'ic-pause-blue.svg';
					case 4:
						return 'ic-pending-grey.svg';
					case 5:
						return 'ic-running-green.svg';
					case 3:
						return 'ic-failing-red.svg';
					case 1:
						return 'ic-aborted-brown.svg';
					default:
						return 'ic-error-orange.svg';
				}
			}();
			return _Utils_ap(
				basePath,
				_List_fromArray(
					[imageName]));
		case 26:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-cached-grey.svg']));
		case 27:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-sync.svg']));
		case 28:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['clippy.svg']));
		case 29:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-arrow-upward.svg']));
		case 30:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-arrow-downward.svg']));
		case 31:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['baseline-refresh.svg']));
		case 32:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['baseline-message.svg']));
		case 33:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['baseline-menu.svg']));
		case 34:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['baseline-people.svg']));
		case 35:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-plus.svg']));
		case 36:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-minus.svg']));
		case 37:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-play-white.svg']));
		case 38:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-pause-white.svg']));
		case 40:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-search-white.svg']));
		default:
			return _Utils_ap(
				basePath,
				_List_fromArray(
					['ic-close-white.svg']));
	}
};
var $author$project$Assets$toString = function (asset) {
	return A2(
		$elm$url$Url$Builder$absolute,
		$author$project$Assets$toPath(asset),
		_List_Nil);
};
var $author$project$Message$Storage$tokenKey = 'csrf_token';
var $elm$url$Url$Builder$crossOrigin = F3(
	function (prePath, pathSegments, parameters) {
		return prePath + ('/' + (A2($elm$core$String$join, '/', pathSegments) + $elm$url$Url$Builder$toQuery(parameters)));
	});
var $elm$url$Url$Builder$string = F2(
	function (key, value) {
		return A2(
			$elm$url$Url$Builder$QueryParameter,
			$elm$url$Url$percentEncode(key),
			$elm$url$Url$percentEncode(value));
	});
var $author$project$Routes$tokenToFlyRoute = F2(
	function (authToken, flyPort) {
		return A3(
			$elm$url$Url$Builder$crossOrigin,
			'http://127.0.0.1:' + $elm$core$String$fromInt(flyPort),
			_List_Nil,
			_List_fromArray(
				[
					A2($elm$url$Url$Builder$string, 'token', authToken)
				]));
	});
var $author$project$Message$Effects$tooltip = _Platform_outgoingPort(
	'tooltip',
	function ($) {
		var a = $.a;
		var b = $.b;
		return A2(
			$elm$json$Json$Encode$list,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					$elm$json$Json$Encode$string(a),
					$elm$json$Json$Encode$string(b)
				]));
	});
var $author$project$Message$Effects$tooltipHd = _Platform_outgoingPort(
	'tooltipHd',
	function ($) {
		var a = $.a;
		var b = $.b;
		return A2(
			$elm$json$Json$Encode$list,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					$elm$json$Json$Encode$string(a),
					$elm$json$Json$Encode$string(b)
				]));
	});
var $elm$http$Http$Internal$StringBody = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$http$Http$jsonBody = function (value) {
	return A2(
		$elm$http$Http$Internal$StringBody,
		'application/json',
		A2($elm$json$Json$Encode$encode, 0, value));
};
var $author$project$Api$withJsonBody = F2(
	function (value, r) {
		return _Utils_update(
			r,
			{
				N: $elm$http$Http$jsonBody(value)
			});
	});
var $author$project$Message$Effects$runEffect = F3(
	function (effect, key, csrfToken) {
		switch (effect.$) {
			case 0:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$JobFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeJob,
							$author$project$Api$get(
								A2($author$project$Api$Endpoints$Job, id, 0)))));
			case 1:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$JobsFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$elm$json$Json$Decode$value,
							$author$project$Api$get(
								A2($author$project$Api$Endpoints$Pipeline, id, 5)))));
			case 2:
				var id = effect.a;
				var page = effect.b;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$JobBuildsFetched,
					$author$project$Api$request(
						A3(
							$author$project$Api$paginatedGet,
							A2($author$project$Api$Endpoints$Job, id, 3),
							page,
							$author$project$Concourse$decodeBuild)));
			case 3:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$ResourceFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeResource,
							$author$project$Api$get(
								A2($author$project$Api$Endpoints$Resource, id, 0)))));
			case 4:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$Checked,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeCheck,
							$author$project$Api$get(
								$author$project$Api$Endpoints$Check(id)))));
			case 5:
				var id = effect.a;
				var paging = effect.b;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$VersionedResourcesFetched,
					A2(
						$elm$core$Task$map,
						function (b) {
							return _Utils_Tuple2(paging, b);
						},
						$author$project$Api$request(
							A3(
								$author$project$Api$paginatedGet,
								A2($author$project$Api$Endpoints$Resource, id, 1),
								paging,
								$author$project$Concourse$decodeVersionedResource))));
			case 6:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$ResourcesFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$elm$json$Json$Decode$value,
							$author$project$Api$get(
								A2($author$project$Api$Endpoints$Pipeline, id, 6)))));
			case 7:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildResourcesFetched,
					A2(
						$elm$core$Task$map,
						function (b) {
							return _Utils_Tuple2(id, b);
						},
						$author$project$Api$request(
							A2(
								$author$project$Api$expectJson,
								$author$project$Concourse$decodeBuildResources,
								$author$project$Api$get(
									A2($author$project$Api$Endpoints$Build, id, 4))))));
			case 8:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$PipelineFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodePipeline,
							$author$project$Api$get(
								A2($author$project$Api$Endpoints$Pipeline, id, 0)))));
			case 9:
				var team = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$PipelinesFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$elm$json$Json$Decode$list($author$project$Concourse$decodePipeline),
							$author$project$Api$get(
								A2($author$project$Api$Endpoints$Team, team, 0)))));
			case 23:
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$AllResourcesFetched,
					A2(
						$elm$core$Task$map,
						$elm$core$Maybe$withDefault(_List_Nil),
						$author$project$Api$request(
							A2(
								$author$project$Api$expectJson,
								$elm$json$Json$Decode$nullable(
									$elm$json$Json$Decode$list($author$project$Concourse$decodeResource)),
								$author$project$Api$get($author$project$Api$Endpoints$ResourcesList)))));
			case 24:
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$AllJobsFetched,
					A2(
						$elm$core$Task$map,
						$elm$core$Maybe$withDefault(_List_Nil),
						$author$project$Api$request(
							A2(
								$author$project$Api$expectJson,
								$elm$json$Json$Decode$nullable(
									$elm$json$Json$Decode$list($author$project$Concourse$decodeJob)),
								$author$project$Api$get($author$project$Api$Endpoints$JobsList)))));
			case 10:
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$ClusterInfoFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeInfo,
							$author$project$Api$get($author$project$Api$Endpoints$ClusterInfo))));
			case 11:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$InputToFetched,
					A2(
						$elm$core$Task$map,
						function (b) {
							return _Utils_Tuple2(id, b);
						},
						$author$project$Api$request(
							A2(
								$author$project$Api$expectJson,
								$elm$json$Json$Decode$list($author$project$Concourse$decodeBuild),
								$author$project$Api$get(
									A2($author$project$Api$Endpoints$ResourceVersion, id, 0))))));
			case 12:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$OutputOfFetched,
					A2(
						$elm$core$Task$map,
						function (b) {
							return _Utils_Tuple2(id, b);
						},
						$author$project$Api$request(
							A2(
								$author$project$Api$expectJson,
								$elm$json$Json$Decode$list($author$project$Concourse$decodeBuild),
								$author$project$Api$get(
									A2($author$project$Api$Endpoints$ResourceVersion, id, 1))))));
			case 13:
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$AllTeamsFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$elm$json$Json$Decode$list($author$project$Concourse$decodeTeam),
							$author$project$Api$get($author$project$Api$Endpoints$TeamsList))));
			case 22:
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$AllPipelinesFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$elm$json$Json$Decode$list($author$project$Concourse$decodePipeline),
							$author$project$Api$get($author$project$Api$Endpoints$PipelinesList))));
			case 25:
				return A2($elm$core$Task$perform, $author$project$Message$Callback$GotCurrentTime, $elm$time$Time$now);
			case 26:
				return A2($elm$core$Task$perform, $author$project$Message$Callback$GotCurrentTimeZone, $elm$time$Time$here);
			case 27:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildTriggered,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeBuild,
							A2(
								$author$project$Api$post,
								A2($author$project$Api$Endpoints$Job, id, 3),
								csrfToken))));
			case 28:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildTriggered,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeBuild,
							A2(
								$author$project$Api$post,
								$author$project$Api$Endpoints$JobBuild(id),
								csrfToken))));
			case 30:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$PausedToggled,
					$author$project$Api$request(
						A2(
							$author$project$Api$put,
							A2($author$project$Api$Endpoints$Job, id, 1),
							csrfToken)));
			case 31:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$PausedToggled,
					$author$project$Api$request(
						A2(
							$author$project$Api$put,
							A2($author$project$Api$Endpoints$Job, id, 2),
							csrfToken)));
			case 34:
				return $author$project$Message$Effects$requestLoginRedirect('');
			case 35:
				var url = effect.a;
				return $elm$browser$Browser$Navigation$load(url);
			case 36:
				var url = effect.a;
				return A2($elm$browser$Browser$Navigation$pushUrl, key, url);
			case 37:
				var url = effect.a;
				return A2($elm$browser$Browser$Navigation$replaceUrl, key, url);
			case 32:
				return $author$project$Message$Effects$resetPipelineFocus(0);
			case 33:
				var jobs = effect.a;
				var resources = effect.b;
				return $author$project$Message$Effects$renderPipeline(
					_Utils_Tuple2(jobs, resources));
			case 38:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$VersionPinned,
					$author$project$Api$request(
						A2(
							$author$project$Api$put,
							A2($author$project$Api$Endpoints$ResourceVersion, id, 2),
							csrfToken)));
			case 39:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$VersionUnpinned,
					$author$project$Api$request(
						A2(
							$author$project$Api$put,
							A2($author$project$Api$Endpoints$Resource, id, 2),
							csrfToken)));
			case 40:
				var action = effect.a;
				var id = effect.b;
				var endpoint = A2(
					$author$project$Api$Endpoints$ResourceVersion,
					id,
					function () {
						if (!action) {
							return 3;
						} else {
							return 4;
						}
					}());
				return A2(
					$elm$core$Task$attempt,
					A2($author$project$Message$Callback$VersionToggled, action, id),
					$author$project$Api$request(
						A2($author$project$Api$put, endpoint, csrfToken)));
			case 41:
				var rid = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$Checked,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeCheck,
							A2(
								$author$project$Api$withJsonBody,
								$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2('from', $elm$json$Json$Encode$null)
										])),
								A2(
									$author$project$Api$post,
									A2($author$project$Api$Endpoints$Resource, rid, 3),
									csrfToken)))));
			case 42:
				var rid = effect.a;
				var comment = effect.b;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$CommentSet,
					$author$project$Api$request(
						A2(
							$author$project$Api$withJsonBody,
							$elm$json$Json$Encode$object(
								_List_fromArray(
									[
										_Utils_Tuple2(
										'pin_comment',
										$elm$json$Json$Encode$string(comment))
									])),
							A2(
								$author$project$Api$put,
								A2($author$project$Api$Endpoints$Resource, rid, 4),
								csrfToken))));
			case 43:
				var authToken = effect.a;
				var flyPort = effect.b;
				return $author$project$Message$Effects$rawHttpRequest(
					A2($author$project$Routes$tokenToFlyRoute, authToken, flyPort));
			case 44:
				var id = effect.a;
				var isPaused = effect.b;
				var endpoint = A2(
					$author$project$Api$Endpoints$Pipeline,
					id,
					isPaused ? 2 : 1);
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$PipelineToggled(id),
					$author$project$Api$request(
						A2($author$project$Api$put, endpoint, csrfToken)));
			case 45:
				var _v2 = effect.a;
				var teamName = _v2.a;
				var pipelineName = _v2.b;
				return $author$project$Message$Effects$tooltip(
					_Utils_Tuple2(teamName, pipelineName));
			case 46:
				var _v3 = effect.a;
				var teamName = _v3.a;
				var pipelineName = _v3.b;
				return $author$project$Message$Effects$tooltipHd(
					_Utils_Tuple2(teamName, pipelineName));
			case 47:
				var teamName = effect.a;
				var pipelineNames = effect.b;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$PipelinesOrdered(teamName),
					$author$project$Api$request(
						A2(
							$author$project$Api$withJsonBody,
							A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, pipelineNames),
							A2(
								$author$project$Api$put,
								A2($author$project$Api$Endpoints$Team, teamName, 1),
								csrfToken))));
			case 48:
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$LoggedOut,
					$author$project$Api$request(
						$author$project$Api$get($author$project$Api$Endpoints$Logout)));
			case 49:
				return A2($elm$core$Task$perform, $author$project$Message$Callback$ScreenResized, $elm$browser$Browser$Dom$getViewport);
			case 50:
				var shc = effect.a;
				return $author$project$Message$Effects$pinTeamNames(shc);
			case 15:
				var delay = effect.a;
				var buildId = effect.b;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildFetched,
					A2(
						$elm$core$Task$andThen,
						$elm$core$Basics$always(
							$author$project$Api$request(
								A2(
									$author$project$Api$expectJson,
									$author$project$Concourse$decodeBuild,
									$author$project$Api$get(
										A2($author$project$Api$Endpoints$Build, buildId, 0))))),
						$elm$core$Process$sleep(delay)));
			case 16:
				var jbi = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeBuild,
							$author$project$Api$get(
								$author$project$Api$Endpoints$JobBuild(jbi)))));
			case 17:
				var buildJob = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildJobDetailsFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeJob,
							$author$project$Api$get(
								A2($author$project$Api$Endpoints$Job, buildJob, 0)))));
			case 18:
				var job = effect.a;
				var page = effect.b;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildHistoryFetched,
					$author$project$Api$request(
						A3(
							$author$project$Api$paginatedGet,
							A2($author$project$Api$Endpoints$Job, job, 3),
							page,
							$author$project$Concourse$decodeBuild)));
			case 19:
				var delay = effect.a;
				var buildId = effect.b;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildPrepFetched(buildId),
					A2(
						$elm$core$Task$andThen,
						$elm$core$Basics$always(
							$author$project$Api$request(
								A2(
									$author$project$Api$expectJson,
									$author$project$Concourse$decodeBuildPrep,
									$author$project$Api$get(
										A2($author$project$Api$Endpoints$Build, buildId, 2))))),
						$elm$core$Process$sleep(delay)));
			case 21:
				var buildId = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$PlanAndResourcesFetched(buildId),
					A3(
						$elm$core$Task$map2,
						F2(
							function (a, b) {
								return _Utils_Tuple2(a, b);
							}),
						$author$project$Api$request(
							A2(
								$author$project$Api$expectJson,
								$author$project$Concourse$decodeBuildPlan,
								$author$project$Api$get(
									A2($author$project$Api$Endpoints$Build, buildId, 1)))),
						$author$project$Api$request(
							A2(
								$author$project$Api$expectJson,
								$author$project$Concourse$decodeBuildResources,
								$author$project$Api$get(
									A2($author$project$Api$Endpoints$Build, buildId, 4))))));
			case 20:
				var buildId = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$PlanAndResourcesFetched(buildId),
					A2(
						$elm$core$Task$map,
						function (p) {
							return _Utils_Tuple2(p, $author$project$Concourse$emptyBuildResources);
						},
						$author$project$Api$request(
							A2(
								$author$project$Api$expectJson,
								$author$project$Concourse$decodeBuildPlan,
								$author$project$Api$get(
									A2($author$project$Api$Endpoints$Build, buildId, 1))))));
			case 14:
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$UserFetched,
					$author$project$Api$request(
						A2(
							$author$project$Api$expectJson,
							$author$project$Concourse$decodeUser,
							$author$project$Api$get($author$project$Api$Endpoints$UserInfo))));
			case 52:
				var status = effect.a;
				return $author$project$Message$Effects$setFavicon(
					$author$project$Assets$toString(
						$author$project$Assets$BuildFavicon(status)));
			case 29:
				var buildId = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$BuildAborted,
					$author$project$Api$request(
						A2(
							$author$project$Api$put,
							A2($author$project$Api$Endpoints$Build, buildId, 3),
							csrfToken)));
			case 51:
				var direction = effect.a;
				var id = effect.b;
				return A2($author$project$Message$Effects$scroll, direction, id);
			case 56:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$elm$core$Basics$always($author$project$Message$Callback$EmptyCallback),
					$elm$browser$Browser$Dom$focus(id));
			case 57:
				var id = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$elm$core$Basics$always($author$project$Message$Callback$EmptyCallback),
					$elm$browser$Browser$Dom$blur(id));
			case 53:
				var config = effect.a;
				return $author$project$Message$Effects$openEventStream(config);
			case 54:
				return $author$project$Message$Effects$closeEventStream(0);
			case 55:
				var id = effect.a;
				return $author$project$Message$Effects$checkIsVisible(id);
			case 58:
				var icon = effect.a;
				return $author$project$Message$Effects$renderSvgIcon(icon);
			case 59:
				var action = effect.a;
				var pipelineId = effect.b;
				var endpoint = A2(
					$author$project$Api$Endpoints$Pipeline,
					pipelineId,
					function () {
						if (action === 1) {
							return 4;
						} else {
							return 3;
						}
					}());
				return A2(
					$elm$core$Task$attempt,
					A2($author$project$Message$Callback$VisibilityChanged, action, pipelineId),
					$author$project$Api$request(
						A2($author$project$Api$put, endpoint, csrfToken)));
			case 60:
				var token = effect.a;
				return $author$project$Message$Storage$saveToLocalStorage(
					_Utils_Tuple2(
						$author$project$Message$Storage$tokenKey,
						$elm$json$Json$Encode$string(token)));
			case 61:
				return $author$project$Message$Storage$loadFromLocalStorage($author$project$Message$Storage$tokenKey);
			case 62:
				var state = effect.a;
				return $author$project$Message$Storage$saveToSessionStorage(
					_Utils_Tuple2(
						$author$project$Message$Storage$sideBarStateKey,
						$author$project$SideBar$State$encodeSideBarState(state)));
			case 63:
				return $author$project$Message$Storage$loadFromSessionStorage($author$project$Message$Storage$sideBarStateKey);
			case 64:
				var jobs = effect.a;
				return $author$project$Message$Storage$saveToLocalStorage(
					_Utils_Tuple2(
						$author$project$Message$Storage$jobsKey,
						A2($elm$json$Json$Encode$list, $author$project$Concourse$encodeJob, jobs)));
			case 65:
				return $author$project$Message$Storage$loadFromLocalStorage($author$project$Message$Storage$jobsKey);
			case 66:
				return $author$project$Message$Storage$deleteFromLocalStorage($author$project$Message$Storage$jobsKey);
			case 67:
				var pipelines = effect.a;
				return $author$project$Message$Storage$saveToLocalStorage(
					_Utils_Tuple2(
						$author$project$Message$Storage$pipelinesKey,
						A2($elm$json$Json$Encode$list, $author$project$Concourse$encodePipeline, pipelines)));
			case 68:
				return $author$project$Message$Storage$loadFromLocalStorage($author$project$Message$Storage$pipelinesKey);
			case 69:
				return $author$project$Message$Storage$deleteFromLocalStorage($author$project$Message$Storage$pipelinesKey);
			case 77:
				var pipelineIDs = effect.a;
				return $author$project$Message$Storage$saveToLocalStorage(
					_Utils_Tuple2(
						$author$project$Message$Storage$favoritedPipelinesKey,
						A2($elm$json$Json$Encode$set, $elm$json$Json$Encode$int, pipelineIDs)));
			case 78:
				return $author$project$Message$Storage$loadFromLocalStorage($author$project$Message$Storage$favoritedPipelinesKey);
			case 70:
				var teams = effect.a;
				return $author$project$Message$Storage$saveToLocalStorage(
					_Utils_Tuple2(
						$author$project$Message$Storage$teamsKey,
						A2($elm$json$Json$Encode$list, $author$project$Concourse$encodeTeam, teams)));
			case 71:
				return $author$project$Message$Storage$loadFromLocalStorage($author$project$Message$Storage$teamsKey);
			case 72:
				return $author$project$Message$Storage$deleteFromLocalStorage($author$project$Message$Storage$teamsKey);
			case 73:
				var domID = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$GotViewport(domID),
					$elm$browser$Browser$Dom$getViewportOf(
						$author$project$Message$Effects$toHtmlID(domID)));
			case 74:
				var domID = effect.a;
				return A2(
					$elm$core$Task$attempt,
					$author$project$Message$Callback$GotElement,
					$elm$browser$Browser$Dom$getElement(
						$author$project$Message$Effects$toHtmlID(domID)));
			case 75:
				var domID = effect.a;
				return $author$project$Message$Effects$syncTextareaHeight(
					$author$project$Message$Effects$toHtmlID(domID));
			default:
				return $author$project$Message$Effects$syncStickyBuildLogHeaders(0);
		}
	});
var $author$project$Main$effectToCmd = F3(
	function (csrfToken, key, eff) {
		return A2(
			$elm$core$Platform$Cmd$map,
			$author$project$Message$TopLevelMessage$Callback,
			A3($author$project$Message$Effects$runEffect, eff, key, csrfToken));
	});
var $author$project$Main$effectsToCmd = function (_v0) {
	var model = _v0.a;
	var effs = _v0.b;
	return _Utils_Tuple2(
		model,
		$elm$core$Platform$Cmd$batch(
			A2(
				$elm$core$List$map,
				A2($author$project$Main$effectToCmd, model.ax.e.aI, model.cO),
				effs)));
};
var $author$project$Routes$Dashboard = function (a) {
	return {$: 5, a: a};
};
var $author$project$ScreenSize$Desktop = 1;
var $author$project$Message$Effects$FetchClusterInfo = {$: 10};
var $author$project$Message$Effects$FetchUser = {$: 14};
var $author$project$Message$Effects$GetScreenSize = {$: 49};
var $author$project$Message$Effects$LoadFavoritedPipelines = {$: 78};
var $author$project$Message$Effects$LoadSideBarState = {$: 63};
var $author$project$Message$Effects$LoadToken = {$: 61};
var $author$project$Message$Effects$ModifyUrl = function (a) {
	return {$: 37, a: a};
};
var $author$project$HoverState$NoHover = {$: 0};
var $author$project$Routes$Normal = function (a) {
	return {$: 1, a: a};
};
var $krisajenkins$remotedata$RemoteData$NotAsked = {$: 0};
var $author$project$Message$Effects$SaveToken = function (a) {
	return {$: 60, a: a};
};
var $author$project$UserState$UserStateUnknown = {$: 2};
var $author$project$Routes$ViewNonArchivedPipelines = 0;
var $elm$core$Set$Set_elm_builtin = $elm$core$Basics$identity;
var $elm$core$Set$empty = $elm$core$Dict$empty;
var $author$project$SubPage$SubPage$BuildModel = function (a) {
	return {$: 0, a: a};
};
var $author$project$SubPage$SubPage$DashboardModel = function (a) {
	return {$: 5, a: a};
};
var $author$project$SubPage$SubPage$FlySuccessModel = function (a) {
	return {$: 6, a: a};
};
var $author$project$Build$Header$Models$JobBuildPage = function (a) {
	return {$: 1, a: a};
};
var $author$project$SubPage$SubPage$JobModel = function (a) {
	return {$: 1, a: a};
};
var $author$project$Build$Header$Models$OneOffBuildPage = function (a) {
	return {$: 0, a: a};
};
var $author$project$SubPage$SubPage$PipelineModel = function (a) {
	return {$: 3, a: a};
};
var $author$project$SubPage$SubPage$ResourceModel = function (a) {
	return {$: 2, a: a};
};
var $author$project$Build$Header$Models$Empty = {$: 0};
var $author$project$Message$Effects$FetchAllPipelines = {$: 22};
var $author$project$Message$Effects$GetCurrentTime = {$: 25};
var $author$project$Message$Effects$GetCurrentTimeZone = {$: 26};
var $author$project$Message$Effects$CloseBuildEventStream = {$: 54};
var $author$project$Message$Effects$FetchBuild = F2(
	function (a, b) {
		return {$: 15, a: a, b: b};
	});
var $author$project$Message$Effects$FetchJobBuild = function (a) {
	return {$: 16, a: a};
};
var $author$project$Build$Header$Header$changeToBuild = F2(
	function (pageType, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		if (pageType.$ === 1) {
			var buildID = pageType.a;
			return _Utils_Tuple2(
				A2(
					$elm$core$Maybe$withDefault,
					model,
					A2(
						$elm$core$Maybe$map,
						function (b) {
							return _Utils_update(
								model,
								{cv: b.cv, L: b.L, bX: b.bX, hH: b.hH});
						},
						A2(
							$elm_community$list_extra$List$Extra$find,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.bX;
								},
								$elm$core$Basics$eq(buildID.ff)),
							model.gb))),
				effects);
		} else {
			return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Build$Build$changeToBuild = F2(
	function (_v0, _v1) {
		var highlight = _v0.y;
		var pageType = _v0.b$;
		var fromBuildPage = _v0.dU;
		var model = _v1.a;
		var effects = _v1.b;
		var newModel = _Utils_update(
			model,
			{aX: pageType});
		return A2(
			$author$project$Build$Header$Header$changeToBuild,
			pageType,
			_Utils_eq(
				fromBuildPage,
				$elm$core$Maybe$Just(pageType)) ? _Utils_Tuple2(newModel, effects) : _Utils_Tuple2(
				_Utils_update(
					newModel,
					{a9: true, y: highlight, H: $author$project$Build$Header$Models$Empty, aZ: $elm$core$Maybe$Nothing}),
				function () {
					if (!pageType.$) {
						var buildId = pageType.a;
						return _Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$CloseBuildEventStream,
									A2($author$project$Message$Effects$FetchBuild, 0, buildId)
								]));
					} else {
						var jbi = pageType.a;
						return _Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$CloseBuildEventStream,
									$author$project$Message$Effects$FetchJobBuild(jbi)
								]));
					}
				}()));
	});
var $author$project$Build$Build$init = function (flags) {
	return A2(
		$author$project$Build$Build$changeToBuild,
		flags,
		_Utils_Tuple2(
			{
				a8: true,
				a9: true,
				ct: false,
				cv: {dQ: $elm$core$Maybe$Nothing, eR: $elm$core$Maybe$Nothing},
				fZ: false,
				av: false,
				y: flags.y,
				gb: _List_Nil,
				L: 0,
				bR: false,
				gD: false,
				gE: false,
				gF: $elm$core$Maybe$Nothing,
				bX: function () {
					var _v0 = flags.b$;
					if (!_v0.$) {
						var id = _v0.a;
						return $elm$core$String$fromInt(id);
					} else {
						var buildName = _v0.a.ff;
						return buildName;
					}
				}(),
				bh: $elm$core$Maybe$Nothing,
				cT: false,
				en: $elm$core$Maybe$Nothing,
				H: $author$project$Build$Header$Models$Empty,
				aX: flags.b$,
				aZ: $elm$core$Maybe$Nothing,
				hg: $elm$core$Maybe$Nothing,
				bs: $elm$core$Maybe$Nothing,
				hr: false,
				hx: false,
				eN: false,
				hH: 0
			},
			_List_fromArray(
				[$author$project$Message$Effects$GetCurrentTime, $author$project$Message$Effects$GetCurrentTimeZone, $author$project$Message$Effects$FetchAllPipelines])));
};
var $author$project$Message$Message$Dashboard = {$: 47};
var $author$project$Message$Effects$FetchAllJobs = {$: 24};
var $author$project$Message$Effects$FetchAllResources = {$: 23};
var $author$project$Message$Effects$FetchAllTeams = {$: 13};
var $author$project$Message$Effects$GetViewportOf = function (a) {
	return {$: 73, a: a};
};
var $author$project$Dashboard$Models$Hidden = {$: 0};
var $author$project$Routes$HighDensity = {$: 0};
var $author$project$Message$Effects$LoadCachedJobs = {$: 65};
var $author$project$Message$Effects$LoadCachedPipelines = {$: 68};
var $author$project$Message$Effects$LoadCachedTeams = {$: 71};
var $author$project$FetchResult$None = {$: 0};
var $author$project$Dashboard$Models$NotDragging = {$: 0};
var $author$project$Dashboard$Models$NotDropping = {$: 0};
var $author$project$Message$Effects$PinTeamNames = function (a) {
	return {$: 50, a: a};
};
var $author$project$Routes$extractQuery = function (route) {
	if (route.$ === 1) {
		var q = route.a;
		return q;
	} else {
		return '';
	}
};
var $author$project$Views$Styles$pageHeaderHeight = 54;
var $author$project$Message$Effects$stickyHeaderConfig = {g5: 'dashboard', cY: $author$project$Views$Styles$pageHeaderHeight, hu: 'dashboard-team-pipelines', c5: 'dashboard-team-group', hv: 'dashboard-team-header'};
var $author$project$Dashboard$Dashboard$init = function (f) {
	return _Utils_Tuple2(
		{
			fB: f.fB,
			w: $author$project$Dashboard$Models$NotDragging,
			K: $author$project$Dashboard$Models$NotDropping,
			dK: $author$project$Dashboard$Models$Hidden,
			aL: _List_Nil,
			d_: false,
			f9: 0,
			af: _Utils_eq(f.hs, $author$project$Routes$HighDensity),
			cJ: false,
			cK: false,
			cL: false,
			cM: false,
			gE: false,
			d8: $author$project$FetchResult$None,
			V: $elm$core$Maybe$Nothing,
			en: $elm$core$Maybe$Nothing,
			R: $elm$core$Dict$empty,
			S: $elm$core$Dict$empty,
			he: $elm$core$Maybe$Nothing,
			b1: $elm$core$Maybe$Nothing,
			ak: $elm$core$Set$empty,
			al: $author$project$Routes$extractQuery(f.hs),
			b9: $elm$core$Maybe$Nothing,
			hq: 0,
			eN: false,
			hQ: $author$project$FetchResult$None,
			ci: $elm$core$Maybe$Nothing,
			a5: 0,
			a6: 0
		},
		_List_fromArray(
			[
				$author$project$Message$Effects$FetchAllTeams,
				$author$project$Message$Effects$PinTeamNames($author$project$Message$Effects$stickyHeaderConfig),
				$author$project$Message$Effects$GetScreenSize,
				$author$project$Message$Effects$FetchAllResources,
				$author$project$Message$Effects$FetchAllJobs,
				$author$project$Message$Effects$FetchAllPipelines,
				$author$project$Message$Effects$LoadCachedJobs,
				$author$project$Message$Effects$LoadCachedPipelines,
				$author$project$Message$Effects$LoadCachedTeams,
				$author$project$Message$Effects$GetViewportOf($author$project$Message$Message$Dashboard)
			]));
};
var $author$project$FlySuccess$Models$InputUnhovered = 0;
var $author$project$FlySuccess$Models$NoFlyPort = 4;
var $author$project$FlySuccess$Models$Pending = 0;
var $author$project$Message$Effects$SendTokenToFly = F2(
	function (a, b) {
		return {$: 43, a: a, b: b};
	});
var $author$project$FlySuccess$Models$Success = 1;
var $author$project$FlySuccess$Models$Unhovered = 0;
var $author$project$FlySuccess$FlySuccess$init = function (_v0) {
	var authToken = _v0.cm;
	var flyPort = _v0.cy;
	var noop = _v0.gZ;
	return _Utils_Tuple2(
		{
			cm: authToken,
			as: 0,
			bG: 0,
			cy: flyPort,
			gE: false,
			a0: 0,
			aD: function () {
				var _v1 = _Utils_Tuple2(noop, flyPort);
				if (!_v1.a) {
					if (!_v1.b.$) {
						return 0;
					} else {
						var _v2 = _v1.b;
						return 4;
					}
				} else {
					return 1;
				}
			}()
		},
		function () {
			var _v3 = _Utils_Tuple2(noop, flyPort);
			if ((!_v3.a) && (!_v3.b.$)) {
				var fp = _v3.b.a;
				return _List_fromArray(
					[
						A2($author$project$Message$Effects$SendTokenToFly, authToken, fp)
					]);
			} else {
				return _List_Nil;
			}
		}());
};
var $author$project$Message$Effects$FetchJob = function (a) {
	return {$: 0, a: a};
};
var $author$project$Message$Effects$FetchJobBuilds = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Job$Job$init = function (flags) {
	var model = {
		O: {
			fw: _List_Nil,
			g6: {bh: $elm$core$Maybe$Nothing, br: $elm$core$Maybe$Nothing}
		},
		aJ: flags.bl,
		gE: false,
		gF: $krisajenkins$remotedata$RemoteData$NotAsked,
		gG: flags.bT,
		en: $elm$time$Time$millisToPosix(0),
		cZ: false
	};
	return _Utils_Tuple2(
		model,
		_List_fromArray(
			[
				$author$project$Message$Effects$FetchJob(flags.bT),
				A2($author$project$Message$Effects$FetchJobBuilds, flags.bT, flags.bl),
				$author$project$Message$Effects$GetCurrentTime,
				$author$project$Message$Effects$GetCurrentTimeZone,
				$author$project$Message$Effects$FetchAllPipelines
			]));
};
var $author$project$Message$Effects$FetchPipeline = function (a) {
	return {$: 8, a: a};
};
var $author$project$Message$Effects$ResetPipelineFocus = {$: 32};
var $author$project$Pipeline$Pipeline$init = function (flags) {
	var model = {P: false, bK: $elm$core$Maybe$Nothing, fY: $elm$core$Maybe$Nothing, ga: false, aO: 0, d5: false, gE: false, bp: false, az: $krisajenkins$remotedata$RemoteData$NotAsked, hd: flags.hd, b5: $elm$core$Maybe$Nothing, b6: $elm$core$Maybe$Nothing, D: flags.D, dk: flags.dk};
	return _Utils_Tuple2(
		model,
		_List_fromArray(
			[
				$author$project$Message$Effects$FetchPipeline(flags.hd),
				$author$project$Message$Effects$ResetPipelineFocus,
				$author$project$Message$Effects$FetchAllPipelines
			]));
};
var $author$project$Resource$Models$CheckingSuccessfully = {$: 0};
var $author$project$Resource$Models$Empty = 0;
var $author$project$Message$Effects$FetchResource = function (a) {
	return {$: 3, a: a};
};
var $author$project$Message$Effects$FetchVersionedResources = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Pinned$NotPinned = {$: 0};
var $author$project$Message$Message$ResourceCommentTextarea = {$: 9};
var $author$project$Message$Effects$SyncTextareaHeight = function (a) {
	return {$: 75, a: a};
};
var $author$project$Resource$Resource$init = function (flags) {
	var model = {
		dv: '',
		fm: '',
		J: $author$project$Resource$Models$CheckingSuccessfully,
		aJ: flags.bl,
		gh: $elm$core$Maybe$Nothing,
		bQ: false,
		gE: false,
		gI: $elm$core$Maybe$Nothing,
		en: $elm$core$Maybe$Nothing,
		bk: $elm$core$Result$Err(0),
		bo: false,
		hc: $author$project$Pinned$NotPinned,
		hj: flags.b8,
		cj: false,
		r: {
			fw: _List_Nil,
			g6: {bh: $elm$core$Maybe$Nothing, br: $elm$core$Maybe$Nothing}
		}
	};
	return _Utils_Tuple2(
		model,
		_List_fromArray(
			[
				$author$project$Message$Effects$FetchResource(flags.b8),
				A2($author$project$Message$Effects$FetchVersionedResources, flags.b8, flags.bl),
				$author$project$Message$Effects$GetCurrentTimeZone,
				$author$project$Message$Effects$FetchAllPipelines,
				$author$project$Message$Effects$SyncTextareaHeight($author$project$Message$Message$ResourceCommentTextarea)
			]));
};
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $author$project$SubPage$SubPage$init = F2(
	function (session, route) {
		switch (route.$) {
			case 0:
				var id = route.a.L;
				var highlight = route.a.y;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$BuildModel,
					$author$project$Build$Build$init(
						{
							dU: $elm$core$Maybe$Nothing,
							y: highlight,
							b$: $author$project$Build$Header$Models$JobBuildPage(id)
						}));
			case 3:
				var id = route.a.L;
				var highlight = route.a.y;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$BuildModel,
					$author$project$Build$Build$init(
						{
							dU: $elm$core$Maybe$Nothing,
							y: highlight,
							b$: $author$project$Build$Header$Models$OneOffBuildPage(id)
						}));
			case 1:
				var id = route.a.L;
				var page = route.a.aX;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$ResourceModel,
					$author$project$Resource$Resource$init(
						{bl: page, b8: id}));
			case 2:
				var id = route.a.L;
				var page = route.a.aX;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$JobModel,
					$author$project$Job$Job$init(
						{bT: id, bl: page}));
			case 4:
				var id = route.a.L;
				var groups = route.a.bP;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$PipelineModel,
					$author$project$Pipeline$Pipeline$init(
						{hd: id, D: groups, dk: session.dk}));
			case 5:
				var searchType = route.a.hs;
				var dashboardView = route.a.fB;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$DashboardModel,
					$author$project$Dashboard$Dashboard$init(
						{fB: dashboardView, hs: searchType}));
			default:
				var noop = route.a;
				var flyPort = route.b;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$FlySuccessModel,
					$author$project$FlySuccess$FlySuccess$init(
						{cm: session.cm, cy: flyPort, gZ: noop}));
		}
	});
var $author$project$Routes$Build = function (a) {
	return {$: 0, a: a};
};
var $elm$url$Url$Parser$fragment = function (toFrag) {
	return function (_v0) {
		var visited = _v0.aF;
		var unvisited = _v0.ao;
		var params = _v0.ay;
		var frag = _v0.au;
		var value = _v0.h6;
		return _List_fromArray(
			[
				A5(
				$elm$url$Url$Parser$State,
				visited,
				unvisited,
				params,
				frag,
				value(
					toFrag(frag)))
			]);
	};
};
var $elm$url$Url$Parser$mapState = F2(
	function (func, _v0) {
		var visited = _v0.aF;
		var unvisited = _v0.ao;
		var params = _v0.ay;
		var frag = _v0.au;
		var value = _v0.h6;
		return A5(
			$elm$url$Url$Parser$State,
			visited,
			unvisited,
			params,
			frag,
			func(value));
	});
var $elm$url$Url$Parser$map = F2(
	function (subValue, _v0) {
		var parseArg = _v0;
		return function (_v1) {
			var visited = _v1.aF;
			var unvisited = _v1.ao;
			var params = _v1.ay;
			var frag = _v1.au;
			var value = _v1.h6;
			return A2(
				$elm$core$List$map,
				$elm$url$Url$Parser$mapState(value),
				parseArg(
					A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));
		};
	});
var $author$project$Routes$HighlightLine = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Routes$HighlightNothing = {$: 0};
var $author$project$Routes$HighlightRange = F3(
	function (a, b, c) {
		return {$: 2, a: a, b: b, c: c};
	});
var $author$project$Routes$parseHighlight = function (hash) {
	if (!hash.$) {
		var h = hash.a;
		var _v1 = $elm$core$String$uncons(h);
		if ((!_v1.$) && ('L' === _v1.a.a)) {
			var _v2 = _v1.a;
			var selector = _v2.b;
			var _v3 = A2($elm$core$String$split, ':', selector);
			_v3$2:
			while (true) {
				if (_v3.b && _v3.b.b) {
					if (_v3.b.b.b) {
						if (!_v3.b.b.b.b) {
							var stepID = _v3.a;
							var _v4 = _v3.b;
							var line1str = _v4.a;
							var _v5 = _v4.b;
							var line2str = _v5.a;
							var _v6 = _Utils_Tuple2(
								$elm$core$String$toInt(line1str),
								$elm$core$String$toInt(line2str));
							if ((!_v6.a.$) && (!_v6.b.$)) {
								var line1 = _v6.a.a;
								var line2 = _v6.b.a;
								return A3($author$project$Routes$HighlightRange, stepID, line1, line2);
							} else {
								return $author$project$Routes$HighlightNothing;
							}
						} else {
							break _v3$2;
						}
					} else {
						var stepID = _v3.a;
						var _v7 = _v3.b;
						var linestr = _v7.a;
						var _v8 = $elm$core$String$toInt(linestr);
						if (!_v8.$) {
							var line = _v8.a;
							return A2($author$project$Routes$HighlightLine, stepID, line);
						} else {
							return $author$project$Routes$HighlightNothing;
						}
					}
				} else {
					break _v3$2;
				}
			}
			return $author$project$Routes$HighlightNothing;
		} else {
			return $author$project$Routes$HighlightNothing;
		}
	} else {
		return $author$project$Routes$HighlightNothing;
	}
};
var $elm$url$Url$Parser$s = function (str) {
	return function (_v0) {
		var visited = _v0.aF;
		var unvisited = _v0.ao;
		var params = _v0.ay;
		var frag = _v0.au;
		var value = _v0.h6;
		if (!unvisited.b) {
			return _List_Nil;
		} else {
			var next = unvisited.a;
			var rest = unvisited.b;
			return _Utils_eq(next, str) ? _List_fromArray(
				[
					A5(
					$elm$url$Url$Parser$State,
					A2($elm$core$List$cons, next, visited),
					rest,
					params,
					frag,
					value)
				]) : _List_Nil;
		}
	};
};
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $elm$url$Url$Parser$slash = F2(
	function (_v0, _v1) {
		var parseBefore = _v0;
		var parseAfter = _v1;
		return function (state) {
			return A2(
				$elm$core$List$concatMap,
				parseAfter,
				parseBefore(state));
		};
	});
var $elm$url$Url$Parser$custom = F2(
	function (tipe, stringToSomething) {
		return function (_v0) {
			var visited = _v0.aF;
			var unvisited = _v0.ao;
			var params = _v0.ay;
			var frag = _v0.au;
			var value = _v0.h6;
			if (!unvisited.b) {
				return _List_Nil;
			} else {
				var next = unvisited.a;
				var rest = unvisited.b;
				var _v2 = stringToSomething(next);
				if (!_v2.$) {
					var nextValue = _v2.a;
					return _List_fromArray(
						[
							A5(
							$elm$url$Url$Parser$State,
							A2($elm$core$List$cons, next, visited),
							rest,
							params,
							frag,
							value(nextValue))
						]);
				} else {
					return _List_Nil;
				}
			}
		};
	});
var $elm$url$Url$Parser$string = A2($elm$url$Url$Parser$custom, 'STRING', $elm$core$Maybe$Just);
var $author$project$Routes$build = function () {
	var buildHelper = F5(
		function (teamName, pipelineName, jobName, buildName, h) {
			return $author$project$Routes$Build(
				{
					y: h,
					L: {ff: buildName, d7: jobName, c_: pipelineName, dh: teamName}
				});
		});
	return A2(
		$elm$url$Url$Parser$map,
		buildHelper,
		A2(
			$elm$url$Url$Parser$slash,
			$elm$url$Url$Parser$s('teams'),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$string,
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('pipelines'),
					A2(
						$elm$url$Url$Parser$slash,
						$elm$url$Url$Parser$string,
						A2(
							$elm$url$Url$Parser$slash,
							$elm$url$Url$Parser$s('jobs'),
							A2(
								$elm$url$Url$Parser$slash,
								$elm$url$Url$Parser$string,
								A2(
									$elm$url$Url$Parser$slash,
									$elm$url$Url$Parser$s('builds'),
									A2(
										$elm$url$Url$Parser$slash,
										$elm$url$Url$Parser$string,
										$elm$url$Url$Parser$fragment($author$project$Routes$parseHighlight))))))))));
}();
var $author$project$Routes$dashboardViewName = function (view) {
	if (view === 1) {
		return 'all';
	} else {
		return 'non_archived';
	}
};
var $author$project$Routes$ViewAllPipelines = 1;
var $author$project$Routes$dashboardViews = _List_fromArray(
	[0, 1]);
var $elm$url$Url$Parser$Query$enum = F2(
	function (key, dict) {
		return A2(
			$elm$url$Url$Parser$Query$custom,
			key,
			function (stringList) {
				if (stringList.b && (!stringList.b.b)) {
					var str = stringList.a;
					return A2($elm$core$Dict$get, str, dict);
				} else {
					return $elm$core$Maybe$Nothing;
				}
			});
	});
var $elm$url$Url$Parser$Query$map = F2(
	function (func, _v0) {
		var a = _v0;
		return function (dict) {
			return func(
				a(dict));
		};
	});
var $author$project$Routes$dashboardViewQuery = A2(
	$elm$url$Url$Parser$Query$map,
	$elm$core$Maybe$withDefault(0),
	A2(
		$elm$url$Url$Parser$Query$enum,
		'view',
		$elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (v) {
					return _Utils_Tuple2(
						$author$project$Routes$dashboardViewName(v),
						v);
				},
				$author$project$Routes$dashboardViews))));
var $elm$url$Url$Parser$oneOf = function (parsers) {
	return function (state) {
		return A2(
			$elm$core$List$concatMap,
			function (_v0) {
				var parser = _v0;
				return parser(state);
			},
			parsers);
	};
};
var $elm$url$Url$Parser$questionMark = F2(
	function (parser, queryParser) {
		return A2(
			$elm$url$Url$Parser$slash,
			parser,
			$elm$url$Url$Parser$query(queryParser));
	});
var $elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			$elm$core$String$join,
			after,
			A2($elm$core$String$split, before, string));
	});
var $elm$url$Url$Parser$Query$string = function (key) {
	return A2(
		$elm$url$Url$Parser$Query$custom,
		key,
		function (stringList) {
			if (stringList.b && (!stringList.b.b)) {
				var str = stringList.a;
				return $elm$core$Maybe$Just(str);
			} else {
				return $elm$core$Maybe$Nothing;
			}
		});
};
var $elm$url$Url$Parser$top = function (state) {
	return _List_fromArray(
		[state]);
};
var $author$project$Routes$dashboard = A2(
	$elm$url$Url$Parser$map,
	F2(
		function (st, view) {
			return $author$project$Routes$Dashboard(
				{fB: view, hs: st});
		}),
	A2(
		$elm$url$Url$Parser$questionMark,
		$elm$url$Url$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$url$Url$Parser$map,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Maybe$map(
							A2($elm$core$String$replace, '+', ' ')),
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Maybe$withDefault(''),
							$author$project$Routes$Normal)),
					A2(
						$elm$url$Url$Parser$questionMark,
						$elm$url$Url$Parser$top,
						$elm$url$Url$Parser$Query$string('search'))),
					A2(
					$elm$url$Url$Parser$map,
					$author$project$Routes$HighDensity,
					$elm$url$Url$Parser$s('hd'))
				])),
		$author$project$Routes$dashboardViewQuery));
var $author$project$Routes$FlySuccess = F2(
	function (a, b) {
		return {$: 6, a: a, b: b};
	});
var $author$project$Routes$flySuccess = A2(
	$elm$url$Url$Parser$map,
	function (s) {
		return $author$project$Routes$FlySuccess(
			_Utils_eq(
				s,
				$elm$core$Maybe$Just('true')));
	},
	A2(
		$elm$url$Url$Parser$questionMark,
		A2(
			$elm$url$Url$Parser$questionMark,
			$elm$url$Url$Parser$s('fly_success'),
			$elm$url$Url$Parser$Query$string('noop')),
		$elm$url$Url$Parser$Query$int('fly_port')));
var $author$project$Routes$Job = function (a) {
	return {$: 2, a: a};
};
var $author$project$Routes$parsePage = F3(
	function (since, until, limit) {
		var _v0 = _Utils_Tuple3(since, until, limit);
		_v0$2:
		while (true) {
			if (_v0.a.$ === 1) {
				if ((!_v0.b.$) && (!_v0.c.$)) {
					var _v1 = _v0.a;
					var u = _v0.b.a;
					var l = _v0.c.a;
					return $elm$core$Maybe$Just(
						{
							dH: $author$project$Concourse$Pagination$Until(u),
							ec: l
						});
				} else {
					break _v0$2;
				}
			} else {
				if ((_v0.b.$ === 1) && (!_v0.c.$)) {
					var s = _v0.a.a;
					var _v2 = _v0.b;
					var l = _v0.c.a;
					return $elm$core$Maybe$Just(
						{
							dH: $author$project$Concourse$Pagination$Since(s),
							ec: l
						});
				} else {
					break _v0$2;
				}
			}
		}
		return $elm$core$Maybe$Nothing;
	});
var $author$project$Routes$job = function () {
	var jobHelper = F6(
		function (teamName, pipelineName, jobName, since, until, limit) {
			return $author$project$Routes$Job(
				{
					L: {d7: jobName, c_: pipelineName, dh: teamName},
					aX: A3($author$project$Routes$parsePage, since, until, limit)
				});
		});
	return A2(
		$elm$url$Url$Parser$map,
		jobHelper,
		A2(
			$elm$url$Url$Parser$slash,
			$elm$url$Url$Parser$s('teams'),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$string,
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('pipelines'),
					A2(
						$elm$url$Url$Parser$slash,
						$elm$url$Url$Parser$string,
						A2(
							$elm$url$Url$Parser$slash,
							$elm$url$Url$Parser$s('jobs'),
							A2(
								$elm$url$Url$Parser$questionMark,
								A2(
									$elm$url$Url$Parser$questionMark,
									A2(
										$elm$url$Url$Parser$questionMark,
										$elm$url$Url$Parser$string,
										$elm$url$Url$Parser$Query$int('since')),
									$elm$url$Url$Parser$Query$int('until')),
								$elm$url$Url$Parser$Query$int('limit'))))))));
}();
var $author$project$Routes$OneOffBuild = function (a) {
	return {$: 3, a: a};
};
var $elm$url$Url$Parser$int = A2($elm$url$Url$Parser$custom, 'NUMBER', $elm$core$String$toInt);
var $author$project$Routes$oneOffBuild = A2(
	$elm$url$Url$Parser$map,
	F2(
		function (b, h) {
			return $author$project$Routes$OneOffBuild(
				{y: h, L: b});
		}),
	A2(
		$elm$url$Url$Parser$slash,
		$elm$url$Url$Parser$s('builds'),
		A2(
			$elm$url$Url$Parser$slash,
			$elm$url$Url$Parser$int,
			$elm$url$Url$Parser$fragment($author$project$Routes$parseHighlight))));
var $author$project$Routes$Pipeline = function (a) {
	return {$: 4, a: a};
};
var $author$project$Routes$pipeline = A2(
	$elm$url$Url$Parser$map,
	F3(
		function (t, p, g) {
			return $author$project$Routes$Pipeline(
				{
					bP: g,
					L: {c_: p, dh: t}
				});
		}),
	A2(
		$elm$url$Url$Parser$slash,
		$elm$url$Url$Parser$s('teams'),
		A2(
			$elm$url$Url$Parser$slash,
			$elm$url$Url$Parser$string,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('pipelines'),
				A2(
					$elm$url$Url$Parser$questionMark,
					$elm$url$Url$Parser$string,
					A2($elm$url$Url$Parser$Query$custom, 'group', $elm$core$Basics$identity))))));
var $author$project$Routes$Resource = function (a) {
	return {$: 1, a: a};
};
var $author$project$Routes$resource = function () {
	var resourceHelper = F6(
		function (teamName, pipelineName, resourceName, since, until, limit) {
			return $author$project$Routes$Resource(
				{
					L: {c_: pipelineName, hk: resourceName, dh: teamName},
					aX: A3($author$project$Routes$parsePage, since, until, limit)
				});
		});
	return A2(
		$elm$url$Url$Parser$map,
		resourceHelper,
		A2(
			$elm$url$Url$Parser$slash,
			$elm$url$Url$Parser$s('teams'),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$string,
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('pipelines'),
					A2(
						$elm$url$Url$Parser$slash,
						$elm$url$Url$Parser$string,
						A2(
							$elm$url$Url$Parser$slash,
							$elm$url$Url$Parser$s('resources'),
							A2(
								$elm$url$Url$Parser$questionMark,
								A2(
									$elm$url$Url$Parser$questionMark,
									A2(
										$elm$url$Url$Parser$questionMark,
										$elm$url$Url$Parser$string,
										$elm$url$Url$Parser$Query$int('since')),
									$elm$url$Url$Parser$Query$int('until')),
								$elm$url$Url$Parser$Query$int('limit'))))))));
}();
var $author$project$Routes$sitemap = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[$author$project$Routes$resource, $author$project$Routes$job, $author$project$Routes$dashboard, $author$project$Routes$pipeline, $author$project$Routes$build, $author$project$Routes$oneOffBuild, $author$project$Routes$flySuccess]));
var $author$project$Routes$parsePath = $elm$url$Url$Parser$parse($author$project$Routes$sitemap);
var $author$project$Routes$pageToQueryParams = function (page) {
	if (page.$ === 1) {
		return _List_Nil;
	} else {
		var direction = page.a.dH;
		var limit = page.a.ec;
		return _List_fromArray(
			[
				function () {
				switch (direction.$) {
					case 0:
						var id = direction.a;
						return A2($elm$url$Url$Builder$int, 'since', id);
					case 1:
						var id = direction.a;
						return A2($elm$url$Url$Builder$int, 'until', id);
					case 2:
						var id = direction.a;
						return A2($elm$url$Url$Builder$int, 'from', id);
					default:
						var id = direction.a;
						return A2($elm$url$Url$Builder$int, 'to', id);
				}
			}(),
				A2($elm$url$Url$Builder$int, 'limit', limit)
			]);
	}
};
var $author$project$Routes$showHighlight = function (hl) {
	switch (hl.$) {
		case 0:
			return '';
		case 1:
			var id = hl.a;
			var line = hl.b;
			return '#L' + (id + (':' + $elm$core$String$fromInt(line)));
		default:
			var id = hl.a;
			var line1 = hl.b;
			var line2 = hl.c;
			return '#L' + (id + (':' + ($elm$core$String$fromInt(line1) + (':' + $elm$core$String$fromInt(line2)))));
	}
};
var $elm_community$maybe_extra$Maybe$Extra$toList = function (m) {
	if (m.$ === 1) {
		return _List_Nil;
	} else {
		var x = m.a;
		return _List_fromArray(
			[x]);
	}
};
var $author$project$Routes$toString = function (route) {
	switch (route.$) {
		case 0:
			var id = route.a.L;
			var highlight = route.a.y;
			return _Utils_ap(
				A2(
					$elm$url$Url$Builder$absolute,
					_List_fromArray(
						['teams', id.dh, 'pipelines', id.c_, 'jobs', id.d7, 'builds', id.ff]),
					_List_Nil),
				$author$project$Routes$showHighlight(highlight));
		case 2:
			var id = route.a.L;
			var page = route.a.aX;
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['teams', id.dh, 'pipelines', id.c_, 'jobs', id.d7]),
				$author$project$Routes$pageToQueryParams(page));
		case 1:
			var id = route.a.L;
			var page = route.a.aX;
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['teams', id.dh, 'pipelines', id.c_, 'resources', id.hk]),
				$author$project$Routes$pageToQueryParams(page));
		case 3:
			var id = route.a.L;
			var highlight = route.a.y;
			return _Utils_ap(
				A2(
					$elm$url$Url$Builder$absolute,
					_List_fromArray(
						[
							'builds',
							$elm$core$String$fromInt(id)
						]),
					_List_Nil),
				$author$project$Routes$showHighlight(highlight));
		case 4:
			var id = route.a.L;
			var groups = route.a.bP;
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['teams', id.dh, 'pipelines', id.c_]),
				A2(
					$elm$core$List$map,
					$elm$url$Url$Builder$string('group'),
					groups));
		case 5:
			var searchType = route.a.hs;
			var dashboardView = route.a.fB;
			var queryParams = _Utils_ap(
				function () {
					if (searchType.$ === 1) {
						if (searchType.a === '') {
							return _List_Nil;
						} else {
							var query = searchType.a;
							return _List_fromArray(
								[
									A2($elm$url$Url$Builder$string, 'search', query)
								]);
						}
					} else {
						return _List_Nil;
					}
				}(),
				function () {
					if (!dashboardView) {
						return _List_Nil;
					} else {
						return _List_fromArray(
							[
								A2(
								$elm$url$Url$Builder$string,
								'view',
								$author$project$Routes$dashboardViewName(dashboardView))
							]);
					}
				}());
			var path = function () {
				if (searchType.$ === 1) {
					return _List_Nil;
				} else {
					return _List_fromArray(
						['hd']);
				}
			}();
			return A2($elm$url$Url$Builder$absolute, path, queryParams);
		default:
			var noop = route.a;
			var flyPort = route.b;
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['fly_success']),
				_Utils_ap(
					$elm_community$maybe_extra$Maybe$Extra$toList(
						A2(
							$elm$core$Maybe$map,
							$elm$url$Url$Builder$int('fly_port'),
							flyPort)),
					noop ? _List_fromArray(
						[
							A2($elm$url$Url$Builder$string, 'noop', 'true')
						]) : _List_Nil));
	}
};
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $author$project$Application$Application$init = F2(
	function (flags, url) {
		var session = {
			cm: flags.cm,
			cq: '',
			fs: $elm$core$Set$empty,
			aI: flags.aI,
			cu: false,
			fR: $elm$core$Set$empty,
			fX: $elm$core$Set$empty,
			d0: $author$project$HoverState$NoHover,
			aU: flags.aU,
			c$: flags.c$,
			he: $krisajenkins$remotedata$RemoteData$NotAsked,
			c4: 1,
			hz: {gy: false, e$: 275},
			eW: $elm$time$Time$utc,
			dk: flags.dk,
			bB: $author$project$UserState$UserStateUnknown,
			dn: ''
		};
		var route = A2(
			$elm$core$Maybe$withDefault,
			$author$project$Routes$Dashboard(
				{
					fB: 0,
					hs: $author$project$Routes$Normal('')
				}),
			$author$project$Routes$parsePath(url));
		var handleTokenEffect = (flags.aI === '') ? _List_fromArray(
			[$author$project$Message$Effects$LoadToken]) : _List_fromArray(
			[
				$author$project$Message$Effects$SaveToken(flags.aI),
				$author$project$Message$Effects$ModifyUrl(
				$author$project$Routes$toString(route))
			]);
		var _v0 = A2($author$project$SubPage$SubPage$init, session, route);
		var subModel = _v0.a;
		var subEffects = _v0.b;
		var model = {am: route, e: session, o: subModel};
		return _Utils_Tuple2(
			model,
			_Utils_ap(
				_List_fromArray(
					[$author$project$Message$Effects$FetchUser, $author$project$Message$Effects$GetScreenSize, $author$project$Message$Effects$LoadSideBarState, $author$project$Message$Effects$LoadFavoritedPipelines, $author$project$Message$Effects$FetchClusterInfo]),
				_Utils_ap(handleTokenEffect, subEffects)));
	});
var $author$project$Main$init = F3(
	function (flags, url, key) {
		var _v0 = A2($author$project$Application$Application$init, flags, url);
		var model = _v0.a;
		var effects = _v0.b;
		return $author$project$Main$effectsToCmd(
			_Utils_Tuple2(
				{cO: key, ax: model},
				effects));
	});
var $author$project$Message$Subscription$RouteChanged = function (a) {
	return {$: 8, a: a};
};
var $author$project$Application$Application$locationMsg = function (url) {
	var _v0 = $author$project$Routes$parsePath(url);
	if (!_v0.$) {
		var route = _v0.a;
		return $author$project$Message$TopLevelMessage$DeliveryReceived(
			$author$project$Message$Subscription$RouteChanged(route));
	} else {
		return $author$project$Message$TopLevelMessage$Callback($author$project$Message$Callback$EmptyCallback);
	}
};
var $author$project$Message$Subscription$OnFavoritedPipelinesReceived = {$: 15};
var $author$project$Message$Subscription$OnMouse = {$: 1};
var $author$project$Message$Subscription$OnMouseUp = {$: 2};
var $author$project$Message$Subscription$OnNonHrefLinkClicked = {$: 7};
var $author$project$Message$Subscription$OnSideBarStateReceived = {$: 11};
var $author$project$Message$Subscription$OnTokenReceived = {$: 10};
var $author$project$Message$Subscription$OnWindowResize = {$: 5};
var $author$project$Message$Subscription$FiveSeconds = 1;
var $author$project$Message$Subscription$FromEventSource = function (a) {
	return {$: 6, a: a};
};
var $author$project$Message$Subscription$OnClockTick = function (a) {
	return {$: 0, a: a};
};
var $author$project$Message$Subscription$OnElementVisible = {$: 8};
var $author$project$Message$Subscription$OnKeyDown = {$: 3};
var $author$project$Message$Subscription$OnKeyUp = {$: 4};
var $author$project$Message$Subscription$OnScrolledToId = {$: 16};
var $author$project$Message$Subscription$OneSecond = 0;
var $author$project$Build$Models$toMaybe = function (currentOutput) {
	switch (currentOutput.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			return $elm$core$Maybe$Nothing;
		default:
			var outputModel = currentOutput.a;
			return $elm$core$Maybe$Just(outputModel);
	}
};
var $author$project$Build$Build$subscriptions = function (model) {
	var buildEventsUrl = A2(
		$elm$core$Maybe$andThen,
		function ($) {
			return $.fN;
		},
		$author$project$Build$Models$toMaybe(model.H));
	return _Utils_ap(
		_List_fromArray(
			[
				$author$project$Message$Subscription$OnClockTick(0),
				$author$project$Message$Subscription$OnClockTick(1),
				$author$project$Message$Subscription$OnKeyDown,
				$author$project$Message$Subscription$OnKeyUp,
				$author$project$Message$Subscription$OnElementVisible,
				$author$project$Message$Subscription$OnScrolledToId
			]),
		function () {
			if (buildEventsUrl.$ === 1) {
				return _List_Nil;
			} else {
				var url = buildEventsUrl.a;
				return _List_fromArray(
					[
						$author$project$Message$Subscription$FromEventSource(
						_Utils_Tuple2(
							url,
							_List_fromArray(
								['end', 'event'])))
					]);
			}
		}());
};
var $author$project$Message$Subscription$OnCachedJobsReceived = {$: 12};
var $author$project$Message$Subscription$OnCachedPipelinesReceived = {$: 13};
var $author$project$Message$Subscription$OnCachedTeamsReceived = {$: 14};
var $author$project$Dashboard$Dashboard$subscriptions = _List_fromArray(
	[
		$author$project$Message$Subscription$OnClockTick(0),
		$author$project$Message$Subscription$OnClockTick(1),
		$author$project$Message$Subscription$OnMouse,
		$author$project$Message$Subscription$OnKeyDown,
		$author$project$Message$Subscription$OnKeyUp,
		$author$project$Message$Subscription$OnWindowResize,
		$author$project$Message$Subscription$OnCachedJobsReceived,
		$author$project$Message$Subscription$OnCachedPipelinesReceived,
		$author$project$Message$Subscription$OnCachedTeamsReceived
	]);
var $author$project$Message$Subscription$OnTokenSentToFly = {$: 9};
var $author$project$FlySuccess$FlySuccess$subscriptions = _List_fromArray(
	[$author$project$Message$Subscription$OnTokenSentToFly]);
var $author$project$Job$Job$subscriptions = _List_fromArray(
	[
		$author$project$Message$Subscription$OnClockTick(1),
		$author$project$Message$Subscription$OnClockTick(0)
	]);
var $author$project$NotFound$NotFound$subscriptions = _List_fromArray(
	[
		$author$project$Message$Subscription$OnClockTick(1)
	]);
var $author$project$Message$Subscription$OneMinute = 2;
var $author$project$Pipeline$Pipeline$subscriptions = _List_fromArray(
	[
		$author$project$Message$Subscription$OnClockTick(2),
		$author$project$Message$Subscription$OnClockTick(1),
		$author$project$Message$Subscription$OnClockTick(0),
		$author$project$Message$Subscription$OnMouse,
		$author$project$Message$Subscription$OnKeyDown,
		$author$project$Message$Subscription$OnWindowResize
	]);
var $author$project$Resource$Resource$subscriptions = _List_fromArray(
	[
		$author$project$Message$Subscription$OnClockTick(1),
		$author$project$Message$Subscription$OnClockTick(0),
		$author$project$Message$Subscription$OnKeyDown,
		$author$project$Message$Subscription$OnKeyUp,
		$author$project$Message$Subscription$OnWindowResize
	]);
var $author$project$SubPage$SubPage$subscriptions = function (mdl) {
	switch (mdl.$) {
		case 0:
			var model = mdl.a;
			return $author$project$Build$Build$subscriptions(model);
		case 1:
			return $author$project$Job$Job$subscriptions;
		case 3:
			return $author$project$Pipeline$Pipeline$subscriptions;
		case 2:
			return $author$project$Resource$Resource$subscriptions;
		case 5:
			return $author$project$Dashboard$Dashboard$subscriptions;
		case 4:
			return $author$project$NotFound$NotFound$subscriptions;
		default:
			return $author$project$FlySuccess$FlySuccess$subscriptions;
	}
};
var $author$project$Application$Application$subscriptions = function (model) {
	return _Utils_ap(
		_List_fromArray(
			[$author$project$Message$Subscription$OnNonHrefLinkClicked, $author$project$Message$Subscription$OnTokenReceived, $author$project$Message$Subscription$OnSideBarStateReceived, $author$project$Message$Subscription$OnFavoritedPipelinesReceived, $author$project$Message$Subscription$OnWindowResize]),
		_Utils_ap(
			model.e.cu ? _List_fromArray(
				[$author$project$Message$Subscription$OnMouse, $author$project$Message$Subscription$OnMouseUp]) : _List_Nil,
			$author$project$SubPage$SubPage$subscriptions(model.o)));
};
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $elm$core$Platform$Sub$map = _Platform_map;
var $author$project$Message$Subscription$CachedJobsReceived = function (a) {
	return {$: 14, a: a};
};
var $author$project$Message$Subscription$CachedPipelinesReceived = function (a) {
	return {$: 15, a: a};
};
var $author$project$Message$Subscription$CachedTeamsReceived = function (a) {
	return {$: 16, a: a};
};
var $author$project$Message$Subscription$ClockTicked = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Message$Subscription$ElementVisible = function (a) {
	return {$: 10, a: a};
};
var $author$project$Message$Subscription$EventsReceived = function (a) {
	return {$: 7, a: a};
};
var $author$project$Message$Subscription$FavoritedPipelinesReceived = function (a) {
	return {$: 17, a: a};
};
var $author$project$Message$Subscription$KeyDown = function (a) {
	return {$: 0, a: a};
};
var $author$project$Message$Subscription$KeyUp = function (a) {
	return {$: 1, a: a};
};
var $author$project$Message$Subscription$MouseUp = {$: 3};
var $author$project$Message$Subscription$Moused = function (a) {
	return {$: 2, a: a};
};
var $author$project$Message$Subscription$ScrolledToId = function (a) {
	return {$: 18, a: a};
};
var $author$project$Message$Subscription$SideBarStateReceived = function (a) {
	return {$: 13, a: a};
};
var $author$project$Message$Subscription$TokenReceived = function (a) {
	return {$: 12, a: a};
};
var $author$project$Message$Subscription$TokenSentToFly = function (a) {
	return {$: 11, a: a};
};
var $author$project$Message$Subscription$WindowResized = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$BuildEventEnvelope = F2(
	function (data, url) {
		return {dz: data, h4: url};
	});
var $author$project$Build$StepTree$Models$End = {$: 16};
var $author$project$Build$StepTree$Models$NetworkError = {$: 18};
var $author$project$Build$StepTree$Models$Opened = {$: 17};
var $author$project$Build$StepTree$Models$BuildStatus = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$Finish = F3(
	function (a, b, c) {
		return {$: 6, a: a, b: b, c: c};
	});
var $author$project$Build$StepTree$Models$FinishGet = F5(
	function (a, b, c, d, e) {
		return {$: 9, a: a, b: b, c: c, d: d, e: e};
	});
var $author$project$Build$StepTree$Models$FinishPut = F5(
	function (a, b, c, d, e) {
		return {$: 12, a: a, b: b, c: c, d: d, e: e};
	});
var $author$project$Build$StepTree$Models$FinishTask = F3(
	function (a, b, c) {
		return {$: 3, a: a, b: b, c: c};
	});
var $author$project$Build$StepTree$Models$Initialize = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$InitializeGet = F2(
	function (a, b) {
		return {$: 7, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$InitializePut = F2(
	function (a, b) {
		return {$: 10, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$InitializeTask = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$Log = F3(
	function (a, b, c) {
		return {$: 13, a: a, b: b, c: c};
	});
var $author$project$Build$StepTree$Models$SelectedWorker = F3(
	function (a, b, c) {
		return {$: 14, a: a, b: b, c: c};
	});
var $author$project$Build$StepTree$Models$Start = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$StartGet = F2(
	function (a, b) {
		return {$: 8, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$StartPut = F2(
	function (a, b) {
		return {$: 11, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$StartTask = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Concourse$BuildEvents$dateFromSeconds = A2(
	$elm$core$Basics$composeL,
	$elm$time$Time$millisToPosix,
	$elm$core$Basics$mul(1000));
var $author$project$Build$StepTree$Models$Error = F3(
	function (a, b, c) {
		return {$: 15, a: a, b: b, c: c};
	});
var $author$project$Build$StepTree$Models$Origin = F2(
	function (source, id) {
		return {L: id, hB: source};
	});
var $author$project$Concourse$BuildEvents$decodeOrigin = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Build$StepTree$Models$Origin,
	A3(
		$elm$core$Basics$composeL,
		$elm$json$Json$Decode$map(
			$elm$core$Maybe$withDefault('')),
		$elm$json$Json$Decode$maybe,
		A2($elm$json$Json$Decode$field, 'source', $elm$json$Json$Decode$string)),
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string));
var $elm$json$Json$Decode$map3 = _Json_map3;
var $author$project$Concourse$BuildEvents$decodeErrorEvent = A4(
	$elm$json$Json$Decode$map3,
	$author$project$Build$StepTree$Models$Error,
	A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
	A2($elm$json$Json$Decode$field, 'message', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'time',
		A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int)));
var $elm$json$Json$Decode$map5 = _Json_map5;
var $author$project$Concourse$BuildEvents$decodeFinishResource = function (cons) {
	return A6(
		$elm$json$Json$Decode$map5,
		cons,
		A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
		A2($elm$json$Json$Decode$field, 'exit_status', $elm$json$Json$Decode$int),
		A3(
			$elm$core$Basics$composeL,
			$elm$json$Json$Decode$map(
				$elm$core$Maybe$withDefault($elm$core$Dict$empty)),
			$elm$json$Json$Decode$maybe,
			A2($elm$json$Json$Decode$field, 'version', $author$project$Concourse$decodeVersion)),
		A3(
			$elm$core$Basics$composeL,
			$elm$json$Json$Decode$map(
				$elm$core$Maybe$withDefault(_List_Nil)),
			$elm$json$Json$Decode$maybe,
			A2($elm$json$Json$Decode$field, 'metadata', $author$project$Concourse$decodeMetadata)),
		$elm$json$Json$Decode$maybe(
			A2(
				$elm$json$Json$Decode$field,
				'time',
				A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
};
var $elm$json$Json$Decode$lazy = function (thunk) {
	return A2(
		$elm$json$Json$Decode$andThen,
		thunk,
		$elm$json$Json$Decode$succeed(0));
};
var $author$project$Concourse$BuildEvents$decodeBuildEvent = A2(
	$elm$json$Json$Decode$andThen,
	function (eventType) {
		switch (eventType) {
			case 'status':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$BuildStatus,
						A2($elm$json$Json$Decode$field, 'status', $author$project$Concourse$BuildStatus$decodeBuildStatus),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'log':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A4(
						$elm$json$Json$Decode$map3,
						$author$project$Build$StepTree$Models$Log,
						A2(
							$elm$json$Json$Decode$field,
							'origin',
							$elm$json$Json$Decode$lazy(
								function (_v1) {
									return $author$project$Concourse$BuildEvents$decodeOrigin;
								})),
						A2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$string),
						$elm$json$Json$Decode$maybe(
							A2(
								$elm$json$Json$Decode$field,
								'time',
								A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int)))));
			case 'selected-worker':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A4(
						$elm$json$Json$Decode$map3,
						$author$project$Build$StepTree$Models$SelectedWorker,
						A2(
							$elm$json$Json$Decode$field,
							'origin',
							$elm$json$Json$Decode$lazy(
								function (_v2) {
									return $author$project$Concourse$BuildEvents$decodeOrigin;
								})),
						A2($elm$json$Json$Decode$field, 'selected_worker', $elm$json$Json$Decode$string),
						$elm$json$Json$Decode$maybe(
							A2(
								$elm$json$Json$Decode$field,
								'time',
								A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int)))));
			case 'error':
				return A2($elm$json$Json$Decode$field, 'data', $author$project$Concourse$BuildEvents$decodeErrorEvent);
			case 'initialize-task':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$InitializeTask,
						A2(
							$elm$json$Json$Decode$field,
							'origin',
							$elm$json$Json$Decode$lazy(
								function (_v3) {
									return $author$project$Concourse$BuildEvents$decodeOrigin;
								})),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'start-task':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$StartTask,
						A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'finish-task':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A4(
						$elm$json$Json$Decode$map3,
						$author$project$Build$StepTree$Models$FinishTask,
						A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
						A2($elm$json$Json$Decode$field, 'exit_status', $elm$json$Json$Decode$int),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'initialize':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$Initialize,
						A2(
							$elm$json$Json$Decode$field,
							'origin',
							$elm$json$Json$Decode$lazy(
								function (_v4) {
									return $author$project$Concourse$BuildEvents$decodeOrigin;
								})),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'start':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$Start,
						A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'finish':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A4(
						$elm$json$Json$Decode$map3,
						$author$project$Build$StepTree$Models$Finish,
						A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int)),
						A2($elm$json$Json$Decode$field, 'succeeded', $elm$json$Json$Decode$bool)));
			case 'initialize-get':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$InitializeGet,
						A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'start-get':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$StartGet,
						A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'finish-get':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					$author$project$Concourse$BuildEvents$decodeFinishResource($author$project$Build$StepTree$Models$FinishGet));
			case 'initialize-put':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$InitializePut,
						A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'start-put':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					A3(
						$elm$json$Json$Decode$map2,
						$author$project$Build$StepTree$Models$StartPut,
						A2($elm$json$Json$Decode$field, 'origin', $author$project$Concourse$BuildEvents$decodeOrigin),
						A2(
							$elm$json$Json$Decode$field,
							'time',
							A2($elm$json$Json$Decode$map, $author$project$Concourse$BuildEvents$dateFromSeconds, $elm$json$Json$Decode$int))));
			case 'finish-put':
				return A2(
					$elm$json$Json$Decode$field,
					'data',
					$author$project$Concourse$BuildEvents$decodeFinishResource($author$project$Build$StepTree$Models$FinishPut));
			default:
				var unknown = eventType;
				return $elm$json$Json$Decode$fail('unknown event type: ' + unknown);
		}
	},
	A2($elm$json$Json$Decode$field, 'event', $elm$json$Json$Decode$string));
var $author$project$Concourse$BuildEvents$decodeBuildEventEnvelope = function () {
	var urlDecoder = A2(
		$elm$json$Json$Decode$at,
		_List_fromArray(
			['target', 'url']),
		$elm$json$Json$Decode$string);
	var typeDecoder = A2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string);
	var dataDecoder = A2(
		$elm$json$Json$Decode$andThen,
		function (t) {
			switch (t) {
				case 'end':
					return $elm$json$Json$Decode$succeed($author$project$Build$StepTree$Models$End);
				case 'open':
					return $elm$json$Json$Decode$succeed($author$project$Build$StepTree$Models$Opened);
				case 'error':
					return $elm$json$Json$Decode$succeed($author$project$Build$StepTree$Models$NetworkError);
				default:
					return A2(
						$elm$json$Json$Decode$andThen,
						function (rawEvent) {
							var _v1 = A2($elm$json$Json$Decode$decodeString, $author$project$Concourse$BuildEvents$decodeBuildEvent, rawEvent);
							if (!_v1.$) {
								var event = _v1.a;
								return $elm$json$Json$Decode$succeed(event);
							} else {
								var err = _v1.a;
								return $elm$json$Json$Decode$fail(
									$elm$json$Json$Decode$errorToString(err));
							}
						},
						A2($elm$json$Json$Decode$field, 'data', $elm$json$Json$Decode$string));
			}
		},
		typeDecoder);
	return A3($elm$json$Json$Decode$map2, $author$project$Build$StepTree$Models$BuildEventEnvelope, dataDecoder, urlDecoder);
}();
var $author$project$Message$Subscription$BrowserError = 3;
var $author$project$Message$Subscription$NetworkError = 2;
var $author$project$Message$Subscription$Success = 0;
var $author$project$Message$Subscription$Timeout = 1;
var $author$project$Message$Subscription$decodeHttpResponse = function (value) {
	switch (value) {
		case 'networkError':
			return 2;
		case 'browserError':
			return 3;
		case 'timeout':
			return 1;
		default:
			return 0;
	}
};
var $author$project$Keyboard$KeyEvent = F4(
	function (ctrlKey, shiftKey, metaKey, code) {
		return {fq: code, dy: ctrlKey, eg: metaKey, eM: shiftKey};
	});
var $author$project$Keyboard$A = 0;
var $author$project$Keyboard$ArrowDown = 11;
var $author$project$Keyboard$ArrowUp = 10;
var $author$project$Keyboard$Enter = 12;
var $author$project$Keyboard$Escape = 13;
var $author$project$Keyboard$F = 8;
var $author$project$Keyboard$G = 3;
var $author$project$Keyboard$H = 4;
var $author$project$Keyboard$J = 5;
var $author$project$Keyboard$K = 6;
var $author$project$Keyboard$L = 7;
var $author$project$Keyboard$R = 2;
var $author$project$Keyboard$Slash = 9;
var $author$project$Keyboard$T = 1;
var $author$project$Keyboard$decodeKeyCode = A2(
	$author$project$Concourse$customDecoder,
	$elm$json$Json$Decode$string,
	function (code) {
		switch (code) {
			case 'KeyA':
				return $elm$core$Result$Ok(0);
			case 'KeyT':
				return $elm$core$Result$Ok(1);
			case 'KeyR':
				return $elm$core$Result$Ok(2);
			case 'KeyG':
				return $elm$core$Result$Ok(3);
			case 'KeyH':
				return $elm$core$Result$Ok(4);
			case 'KeyJ':
				return $elm$core$Result$Ok(5);
			case 'KeyK':
				return $elm$core$Result$Ok(6);
			case 'KeyL':
				return $elm$core$Result$Ok(7);
			case 'KeyF':
				return $elm$core$Result$Ok(8);
			case 'Slash':
				return $elm$core$Result$Ok(9);
			case 'ArrowUp':
				return $elm$core$Result$Ok(10);
			case 'ArrowDown':
				return $elm$core$Result$Ok(11);
			case 'Enter':
				return $elm$core$Result$Ok(12);
			case 'Escape':
				return $elm$core$Result$Ok(13);
			default:
				var unknown = code;
				return $elm$core$Result$Err(
					A2(
						$elm$json$Json$Decode$Failure,
						'unknown keycode',
						$elm$json$Json$Encode$string(unknown)));
		}
	});
var $elm$json$Json$Decode$map4 = _Json_map4;
var $author$project$Keyboard$decodeKeyEvent = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Keyboard$KeyEvent,
	A2($elm$json$Json$Decode$field, 'ctrlKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'metaKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'code', $author$project$Keyboard$decodeKeyCode));
var $author$project$Message$Subscription$Position = F2(
	function (x, y) {
		return {$7: x, $8: y};
	});
var $author$project$Message$Subscription$decodePosition = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Message$Subscription$Position,
	A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$float));
var $author$project$SideBar$State$SideBarState = F2(
	function (isOpen, width) {
		return {gy: isOpen, e$: width};
	});
var $author$project$SideBar$State$decodeSideBarState = A2(
	$elm_community$json_extra$Json$Decode$Extra$andMap,
	A2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$float),
	A2(
		$elm_community$json_extra$Json$Decode$Extra$andMap,
		A2($elm$json$Json$Decode$field, 'is_open', $elm$json$Json$Decode$bool),
		$elm$json$Json$Decode$succeed($author$project$SideBar$State$SideBarState)));
var $author$project$Message$Subscription$Noop = {$: 19};
var $author$project$Message$Subscription$decodeStorageResponse = F4(
	function (expectedKey, decoder, toDelivery, _v0) {
		var key = _v0.a;
		var value = _v0.b;
		return (!_Utils_eq(key, expectedKey)) ? $author$project$Message$Subscription$Noop : toDelivery(
			A2($elm$json$Json$Decode$decodeString, decoder, value));
	});
var $author$project$Message$Subscription$eventSource = _Platform_incomingPort('eventSource', $elm$json$Json$Decode$value);
var $elm$time$Time$Every = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$time$Time$State = F2(
	function (taggers, processes) {
		return {eA: processes, eV: taggers};
	});
var $elm$time$Time$init = $elm$core$Task$succeed(
	A2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));
var $elm$time$Time$addMySub = F2(
	function (_v0, state) {
		var interval = _v0.a;
		var tagger = _v0.b;
		var _v1 = A2($elm$core$Dict$get, interval, state);
		if (_v1.$ === 1) {
			return A3(
				$elm$core$Dict$insert,
				interval,
				_List_fromArray(
					[tagger]),
				state);
		} else {
			var taggers = _v1.a;
			return A3(
				$elm$core$Dict$insert,
				interval,
				A2($elm$core$List$cons, tagger, taggers),
				state);
		}
	});
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$time$Time$setInterval = _Time_setInterval;
var $elm$core$Process$spawn = _Scheduler_spawn;
var $elm$time$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		if (!intervals.b) {
			return $elm$core$Task$succeed(processes);
		} else {
			var interval = intervals.a;
			var rest = intervals.b;
			var spawnTimer = $elm$core$Process$spawn(
				A2(
					$elm$time$Time$setInterval,
					interval,
					A2($elm$core$Platform$sendToSelf, router, interval)));
			var spawnRest = function (id) {
				return A3(
					$elm$time$Time$spawnHelp,
					router,
					rest,
					A3($elm$core$Dict$insert, interval, id, processes));
			};
			return A2($elm$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var $elm$time$Time$onEffects = F3(
	function (router, subs, _v0) {
		var processes = _v0.eA;
		var rightStep = F3(
			function (_v6, id, _v7) {
				var spawns = _v7.a;
				var existing = _v7.b;
				var kills = _v7.c;
				return _Utils_Tuple3(
					spawns,
					existing,
					A2(
						$elm$core$Task$andThen,
						function (_v5) {
							return kills;
						},
						$elm$core$Process$kill(id)));
			});
		var newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);
		var leftStep = F3(
			function (interval, taggers, _v4) {
				var spawns = _v4.a;
				var existing = _v4.b;
				var kills = _v4.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, interval, spawns),
					existing,
					kills);
			});
		var bothStep = F4(
			function (interval, taggers, id, _v3) {
				var spawns = _v3.a;
				var existing = _v3.b;
				var kills = _v3.c;
				return _Utils_Tuple3(
					spawns,
					A3($elm$core$Dict$insert, interval, id, existing),
					kills);
			});
		var _v1 = A6(
			$elm$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			processes,
			_Utils_Tuple3(
				_List_Nil,
				$elm$core$Dict$empty,
				$elm$core$Task$succeed(0)));
		var spawnList = _v1.a;
		var existingDict = _v1.b;
		var killTask = _v1.c;
		return A2(
			$elm$core$Task$andThen,
			function (newProcesses) {
				return $elm$core$Task$succeed(
					A2($elm$time$Time$State, newTaggers, newProcesses));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v2) {
					return A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var $elm$time$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _v0 = A2($elm$core$Dict$get, interval, state.eV);
		if (_v0.$ === 1) {
			return $elm$core$Task$succeed(state);
		} else {
			var taggers = _v0.a;
			var tellTaggers = function (time) {
				return $elm$core$Task$sequence(
					A2(
						$elm$core$List$map,
						function (tagger) {
							return A2(
								$elm$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						taggers));
			};
			return A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$succeed(state);
				},
				A2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));
		}
	});
var $elm$time$Time$subMap = F2(
	function (f, _v0) {
		var interval = _v0.a;
		var tagger = _v0.b;
		return A2(
			$elm$time$Time$Every,
			interval,
			A2($elm$core$Basics$composeL, f, tagger));
	});
_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);
var $elm$time$Time$subscription = _Platform_leaf('Time');
var $elm$time$Time$every = F2(
	function (interval, tagger) {
		return $elm$time$Time$subscription(
			A2($elm$time$Time$Every, interval, tagger));
	});
var $elm$core$Set$insert = F2(
	function (key, _v0) {
		var dict = _v0;
		return A3($elm$core$Dict$insert, key, 0, dict);
	});
var $elm$core$Set$fromList = function (list) {
	return A3($elm$core$List$foldl, $elm$core$Set$insert, $elm$core$Set$empty, list);
};
var $author$project$Message$Subscription$intervalToTime = function (t) {
	switch (t) {
		case 0:
			return 1000;
		case 1:
			return 5 * 1000;
		default:
			return 60 * 1000;
	}
};
var $author$project$Message$Subscription$newUrl = _Platform_incomingPort('newUrl', $elm$json$Json$Decode$string);
var $elm$browser$Browser$Events$Document = 0;
var $elm$browser$Browser$Events$MySub = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $elm$browser$Browser$Events$State = F2(
	function (subs, pids) {
		return {et: pids, eT: subs};
	});
var $elm$browser$Browser$Events$init = $elm$core$Task$succeed(
	A2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));
var $elm$browser$Browser$Events$nodeToKey = function (node) {
	if (!node) {
		return 'd_';
	} else {
		return 'w_';
	}
};
var $elm$browser$Browser$Events$addKey = function (sub) {
	var node = sub.a;
	var name = sub.b;
	return _Utils_Tuple2(
		_Utils_ap(
			$elm$browser$Browser$Events$nodeToKey(node),
			name),
		sub);
};
var $elm$browser$Browser$Events$Event = F2(
	function (key, event) {
		return {dM: event, cO: key};
	});
var $elm$browser$Browser$Events$spawn = F3(
	function (router, key, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var actualNode = function () {
			if (!node) {
				return _Browser_doc;
			} else {
				return _Browser_window;
			}
		}();
		return A2(
			$elm$core$Task$map,
			function (value) {
				return _Utils_Tuple2(key, value);
			},
			A3(
				_Browser_on,
				actualNode,
				name,
				function (event) {
					return A2(
						$elm$core$Platform$sendToSelf,
						router,
						A2($elm$browser$Browser$Events$Event, key, event));
				}));
	});
var $elm$core$Dict$union = F2(
	function (t1, t2) {
		return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
	});
var $elm$browser$Browser$Events$onEffects = F3(
	function (router, subs, state) {
		var stepRight = F3(
			function (key, sub, _v6) {
				var deads = _v6.a;
				var lives = _v6.b;
				var news = _v6.c;
				return _Utils_Tuple3(
					deads,
					lives,
					A2(
						$elm$core$List$cons,
						A3($elm$browser$Browser$Events$spawn, router, key, sub),
						news));
			});
		var stepLeft = F3(
			function (_v4, pid, _v5) {
				var deads = _v5.a;
				var lives = _v5.b;
				var news = _v5.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, pid, deads),
					lives,
					news);
			});
		var stepBoth = F4(
			function (key, pid, _v2, _v3) {
				var deads = _v3.a;
				var lives = _v3.b;
				var news = _v3.c;
				return _Utils_Tuple3(
					deads,
					A3($elm$core$Dict$insert, key, pid, lives),
					news);
			});
		var newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);
		var _v0 = A6(
			$elm$core$Dict$merge,
			stepLeft,
			stepBoth,
			stepRight,
			state.et,
			$elm$core$Dict$fromList(newSubs),
			_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));
		var deadPids = _v0.a;
		var livePids = _v0.b;
		var makeNewPids = _v0.c;
		return A2(
			$elm$core$Task$andThen,
			function (pids) {
				return $elm$core$Task$succeed(
					A2(
						$elm$browser$Browser$Events$State,
						newSubs,
						A2(
							$elm$core$Dict$union,
							livePids,
							$elm$core$Dict$fromList(pids))));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$sequence(makeNewPids);
				},
				$elm$core$Task$sequence(
					A2($elm$core$List$map, $elm$core$Process$kill, deadPids))));
	});
var $elm$browser$Browser$Events$onSelfMsg = F3(
	function (router, _v0, state) {
		var key = _v0.cO;
		var event = _v0.dM;
		var toMessage = function (_v2) {
			var subKey = _v2.a;
			var _v3 = _v2.b;
			var node = _v3.a;
			var name = _v3.b;
			var decoder = _v3.c;
			return _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;
		};
		var messages = A2($elm$core$List$filterMap, toMessage, state.eT);
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Platform$sendToApp(router),
					messages)));
	});
var $elm$browser$Browser$Events$subMap = F2(
	function (func, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var decoder = _v0.c;
		return A3(
			$elm$browser$Browser$Events$MySub,
			node,
			name,
			A2($elm$json$Json$Decode$map, func, decoder));
	});
_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);
var $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');
var $elm$browser$Browser$Events$on = F3(
	function (node, name, decoder) {
		return $elm$browser$Browser$Events$subscription(
			A3($elm$browser$Browser$Events$MySub, node, name, decoder));
	});
var $elm$browser$Browser$Events$onClick = A2($elm$browser$Browser$Events$on, 0, 'click');
var $elm$browser$Browser$Events$onKeyDown = A2($elm$browser$Browser$Events$on, 0, 'keydown');
var $elm$browser$Browser$Events$onKeyUp = A2($elm$browser$Browser$Events$on, 0, 'keyup');
var $elm$browser$Browser$Events$onMouseMove = A2($elm$browser$Browser$Events$on, 0, 'mousemove');
var $elm$browser$Browser$Events$onMouseUp = A2($elm$browser$Browser$Events$on, 0, 'mouseup');
var $elm$browser$Browser$Events$Window = 1;
var $elm$browser$Browser$Events$onResize = function (func) {
	return A3(
		$elm$browser$Browser$Events$on,
		1,
		'resize',
		A2(
			$elm$json$Json$Decode$field,
			'target',
			A3(
				$elm$json$Json$Decode$map2,
				func,
				A2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int),
				A2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));
};
var $author$project$Message$Subscription$rawHttpResponse = _Platform_incomingPort('rawHttpResponse', $elm$json$Json$Decode$string);
var $elm$json$Json$Decode$index = _Json_decodeIndex;
var $author$project$Message$Storage$receivedFromLocalStorage = _Platform_incomingPort(
	'receivedFromLocalStorage',
	A2(
		$elm$json$Json$Decode$andThen,
		function (_v0) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (_v1) {
					return $elm$json$Json$Decode$succeed(
						_Utils_Tuple2(_v0, _v1));
				},
				A2($elm$json$Json$Decode$index, 1, $elm$json$Json$Decode$string));
		},
		A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string)));
var $author$project$Message$Storage$receivedFromSessionStorage = _Platform_incomingPort(
	'receivedFromSessionStorage',
	A2(
		$elm$json$Json$Decode$andThen,
		function (_v0) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (_v1) {
					return $elm$json$Json$Decode$succeed(
						_Utils_Tuple2(_v0, _v1));
				},
				A2($elm$json$Json$Decode$index, 1, $elm$json$Json$Decode$string));
		},
		A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string)));
var $author$project$Message$Subscription$reportIsVisible = _Platform_incomingPort(
	'reportIsVisible',
	A2(
		$elm$json$Json$Decode$andThen,
		function (_v0) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (_v1) {
					return $elm$json$Json$Decode$succeed(
						_Utils_Tuple2(_v0, _v1));
				},
				A2($elm$json$Json$Decode$index, 1, $elm$json$Json$Decode$bool));
		},
		A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string)));
var $author$project$Message$Subscription$scrolledToId = _Platform_incomingPort(
	'scrolledToId',
	A2(
		$elm$json$Json$Decode$andThen,
		function (_v0) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (_v1) {
					return $elm$json$Json$Decode$succeed(
						_Utils_Tuple2(_v0, _v1));
				},
				A2($elm$json$Json$Decode$index, 1, $elm$json$Json$Decode$string));
		},
		A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string)));
var $author$project$Message$Subscription$runSubscription = function (s) {
	switch (s.$) {
		case 0:
			var t = s.a;
			return A2(
				$elm$time$Time$every,
				$author$project$Message$Subscription$intervalToTime(t),
				$author$project$Message$Subscription$ClockTicked(t));
		case 1:
			return $elm$core$Platform$Sub$batch(
				_List_fromArray(
					[
						$elm$browser$Browser$Events$onMouseMove(
						A2($elm$json$Json$Decode$map, $author$project$Message$Subscription$Moused, $author$project$Message$Subscription$decodePosition)),
						$elm$browser$Browser$Events$onClick(
						A2($elm$json$Json$Decode$map, $author$project$Message$Subscription$Moused, $author$project$Message$Subscription$decodePosition))
					]));
		case 2:
			return $elm$browser$Browser$Events$onMouseUp(
				$elm$json$Json$Decode$succeed($author$project$Message$Subscription$MouseUp));
		case 3:
			return $elm$browser$Browser$Events$onKeyDown(
				A2($elm$json$Json$Decode$map, $author$project$Message$Subscription$KeyDown, $author$project$Keyboard$decodeKeyEvent));
		case 4:
			return $elm$browser$Browser$Events$onKeyUp(
				A2($elm$json$Json$Decode$map, $author$project$Message$Subscription$KeyUp, $author$project$Keyboard$decodeKeyEvent));
		case 5:
			return $elm$browser$Browser$Events$onResize(
				F2(
					function (width, height) {
						return A2($author$project$Message$Subscription$WindowResized, width, height);
					}));
		case 6:
			return $author$project$Message$Subscription$eventSource(
				A2(
					$elm$core$Basics$composeR,
					$elm$json$Json$Decode$decodeValue(
						$elm$json$Json$Decode$list($author$project$Concourse$BuildEvents$decodeBuildEventEnvelope)),
					$author$project$Message$Subscription$EventsReceived));
		case 7:
			return $author$project$Message$Subscription$newUrl(
				function (path) {
					var url = {f3: $elm$core$Maybe$Nothing, gc: '', g7: path, hf: $elm$core$Maybe$Nothing, hh: 0, al: $elm$core$Maybe$Nothing};
					var _v1 = $author$project$Routes$parsePath(url);
					if (!_v1.$) {
						return $author$project$Message$Subscription$UrlRequest(
							$elm$browser$Browser$Internal(url));
					} else {
						return $author$project$Message$Subscription$UrlRequest(
							$elm$browser$Browser$External(path));
					}
				});
		case 10:
			return $author$project$Message$Storage$receivedFromLocalStorage(
				A3($author$project$Message$Subscription$decodeStorageResponse, $author$project$Message$Storage$tokenKey, $elm$json$Json$Decode$string, $author$project$Message$Subscription$TokenReceived));
		case 11:
			return $author$project$Message$Storage$receivedFromSessionStorage(
				A3($author$project$Message$Subscription$decodeStorageResponse, $author$project$Message$Storage$sideBarStateKey, $author$project$SideBar$State$decodeSideBarState, $author$project$Message$Subscription$SideBarStateReceived));
		case 12:
			return $author$project$Message$Storage$receivedFromLocalStorage(
				A3(
					$author$project$Message$Subscription$decodeStorageResponse,
					$author$project$Message$Storage$jobsKey,
					$elm$json$Json$Decode$list($author$project$Concourse$decodeJob),
					$author$project$Message$Subscription$CachedJobsReceived));
		case 13:
			return $author$project$Message$Storage$receivedFromLocalStorage(
				A3(
					$author$project$Message$Subscription$decodeStorageResponse,
					$author$project$Message$Storage$pipelinesKey,
					$elm$json$Json$Decode$list($author$project$Concourse$decodePipeline),
					$author$project$Message$Subscription$CachedPipelinesReceived));
		case 14:
			return $author$project$Message$Storage$receivedFromLocalStorage(
				A3(
					$author$project$Message$Subscription$decodeStorageResponse,
					$author$project$Message$Storage$teamsKey,
					$elm$json$Json$Decode$list($author$project$Concourse$decodeTeam),
					$author$project$Message$Subscription$CachedTeamsReceived));
		case 15:
			return $author$project$Message$Storage$receivedFromLocalStorage(
				A3(
					$author$project$Message$Subscription$decodeStorageResponse,
					$author$project$Message$Storage$favoritedPipelinesKey,
					A2(
						$elm$json$Json$Decode$map,
						$elm$core$Set$fromList,
						$elm$json$Json$Decode$list($elm$json$Json$Decode$int)),
					$author$project$Message$Subscription$FavoritedPipelinesReceived));
		case 8:
			return $author$project$Message$Subscription$reportIsVisible($author$project$Message$Subscription$ElementVisible);
		case 9:
			return $author$project$Message$Subscription$rawHttpResponse(
				A2($elm$core$Basics$composeR, $author$project$Message$Subscription$decodeHttpResponse, $author$project$Message$Subscription$TokenSentToFly));
		default:
			return $author$project$Message$Subscription$scrolledToId($author$project$Message$Subscription$ScrolledToId);
	}
};
var $author$project$Main$subscriptionsToSub = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$map($author$project$Message$Subscription$runSubscription),
	A2(
		$elm$core$Basics$composeR,
		$elm$core$Platform$Sub$batch,
		$elm$core$Platform$Sub$map($author$project$Message$TopLevelMessage$DeliveryReceived)));
var $author$project$Message$Message$Hover = function (a) {
	return {$: 17, a: a};
};
var $author$project$HoverState$Hovered = function (a) {
	return {$: 1, a: a};
};
var $author$project$UserState$UserStateLoggedIn = function (a) {
	return {$: 0, a: a};
};
var $author$project$UserState$UserStateLoggedOut = {$: 1};
var $author$project$ScreenSize$BigDesktop = 2;
var $author$project$ScreenSize$Mobile = 0;
var $author$project$ScreenSize$fromWindowSize = function (width) {
	return (width < 812) ? 0 : ((width < 1230) ? 1 : 2);
};
var $author$project$Message$Effects$RedirectToLogin = {$: 34};
var $author$project$Application$Application$redirectToLoginIfNecessary = F2(
	function (err, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		if (err.$ === 3) {
			var status = err.a.hH;
			return (status.fq === 401) ? _Utils_Tuple2(
				model,
				_Utils_ap(
					effects,
					_List_fromArray(
						[$author$project$Message$Effects$RedirectToLogin]))) : _Utils_Tuple2(model, effects);
		} else {
			return _Utils_Tuple2(model, effects);
		}
	});
var $krisajenkins$remotedata$RemoteData$Success = function (a) {
	return {$: 3, a: a};
};
var $author$project$SideBar$SideBar$handleCallback = F3(
	function (callback, currentPipeline, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$2:
		while (true) {
			switch (callback.$) {
				case 37:
					if (!callback.a.$) {
						var pipelines = callback.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									fR: function () {
										var _v2 = _Utils_Tuple2(model.he, currentPipeline);
										if ((!_v2.a.$) && (_v2.b.$ === 3)) {
											var _v3 = _v2.a;
											var teamName = _v2.b.a.dh;
											return A2($elm$core$Set$insert, teamName, model.fR);
										} else {
											return model.fR;
										}
									}(),
									he: $krisajenkins$remotedata$RemoteData$Success(pipelines)
								}),
							effects);
					} else {
						break _v1$2;
					}
				case 31:
					if (!callback.a.$) {
						var build = callback.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									fR: function () {
										var _v4 = _Utils_Tuple2(currentPipeline, build.gF);
										if ((!_v4.a.$) && (!_v4.b.$)) {
											var _v5 = _v4.a;
											var teamName = _v4.b.a.dh;
											return A2($elm$core$Set$insert, teamName, model.fR);
										} else {
											return model.fR;
										}
									}()
								}),
							effects);
					} else {
						break _v1$2;
					}
				default:
					break _v1$2;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Message$Effects$GetElement = function (a) {
	return {$: 74, a: a};
};
var $author$project$Tooltip$OnlyShowWhenOverflowing = 1;
var $author$project$HoverState$Tooltip = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $author$project$HoverState$TooltipPending = function (a) {
	return {$: 2, a: a};
};
var $author$project$Tooltip$AlwaysShow = 0;
var $author$project$Tooltip$policy = function (domID) {
	switch (domID.$) {
		case 45:
			return 1;
		case 44:
			return 1;
		default:
			return 0;
	}
};
var $author$project$Tooltip$handleCallback = F2(
	function (callback, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$2:
		while (true) {
			switch (callback.$) {
				case 38:
					if (!callback.b.$) {
						var scene = callback.b.a.ho;
						var viewport = callback.b.a.ia;
						var _v2 = model.d0;
						if (_v2.$ === 1) {
							var domID = _v2.a;
							return (($author$project$Tooltip$policy(domID) === 1) && (_Utils_cmp(viewport.e$, scene.e$) > -1)) ? _Utils_Tuple2(model, effects) : _Utils_Tuple2(
								_Utils_update(
									model,
									{
										d0: $author$project$HoverState$TooltipPending(domID)
									}),
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$GetElement(domID)
										])));
						} else {
							return _Utils_Tuple2(model, effects);
						}
					} else {
						break _v1$2;
					}
				case 39:
					if (!callback.a.$) {
						var element = callback.a.a;
						var _v3 = model.d0;
						if (_v3.$ === 2) {
							var domID = _v3.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										d0: A2($author$project$HoverState$Tooltip, domID, element)
									}),
								effects);
						} else {
							return _Utils_Tuple2(model, effects);
						}
					} else {
						break _v1$2;
					}
				default:
					break _v1$2;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Application$Application$sideBarHandleCallback = F2(
	function (callback, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var _v1 = A2(
			$author$project$Tooltip$handleCallback,
			callback,
			function () {
				var _v2 = model.o;
				switch (_v2.$) {
					case 2:
						var resourceIdentifier = _v2.a.hj;
						return A2(
							$author$project$SideBar$SideBar$handleCallback,
							callback,
							$krisajenkins$remotedata$RemoteData$Success(resourceIdentifier));
					case 3:
						var pipelineLocator = _v2.a.hd;
						return A2(
							$author$project$SideBar$SideBar$handleCallback,
							callback,
							$krisajenkins$remotedata$RemoteData$Success(pipelineLocator));
					case 1:
						var jobIdentifier = _v2.a.gG;
						return A2(
							$author$project$SideBar$SideBar$handleCallback,
							callback,
							$krisajenkins$remotedata$RemoteData$Success(jobIdentifier));
					case 0:
						var buildModel = _v2.a;
						return A2(
							$author$project$SideBar$SideBar$handleCallback,
							callback,
							function () {
								var _v3 = buildModel.gF;
								if (!_v3.$) {
									var j = _v3.a;
									return $krisajenkins$remotedata$RemoteData$Success(j);
								} else {
									return $krisajenkins$remotedata$RemoteData$NotAsked;
								}
							}());
					default:
						return A2($author$project$SideBar$SideBar$handleCallback, callback, $krisajenkins$remotedata$RemoteData$NotAsked);
				}
			}()(
				_Utils_Tuple2(model.e, effects)));
		var session = _v1.a;
		var newEffects = _v1.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{e: session}),
			newEffects);
	});
var $author$project$SubPage$SubPage$NotFoundModel = function (a) {
	return {$: 4, a: a};
};
var $author$project$SubPage$SubPage$genericUpdate = F8(
	function (fBuild, fJob, fRes, fPipe, fDash, fNF, fFS, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		switch (model.$) {
			case 0:
				var buildModel = model.a;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$BuildModel,
					fBuild(
						_Utils_Tuple2(buildModel, effects)));
			case 1:
				var jobModel = model.a;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$JobModel,
					fJob(
						_Utils_Tuple2(jobModel, effects)));
			case 3:
				var pipelineModel = model.a;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$PipelineModel,
					fPipe(
						_Utils_Tuple2(pipelineModel, effects)));
			case 2:
				var resourceModel = model.a;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$ResourceModel,
					fRes(
						_Utils_Tuple2(resourceModel, effects)));
			case 5:
				var dashboardModel = model.a;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$DashboardModel,
					fDash(
						_Utils_Tuple2(dashboardModel, effects)));
			case 6:
				var flySuccessModel = model.a;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$FlySuccessModel,
					fFS(
						_Utils_Tuple2(flySuccessModel, effects)));
			default:
				var notFoundModel = model.a;
				return A2(
					$elm$core$Tuple$mapFirst,
					$author$project$SubPage$SubPage$NotFoundModel,
					fNF(
						_Utils_Tuple2(notFoundModel, effects)));
		}
	});
var $author$project$Api$Endpoints$BuildEventStream = 5;
var $author$project$Build$Header$Models$Cancelled = {$: 1};
var $author$project$Message$Effects$OpenBuildEventStream = function (a) {
	return {$: 53, a: a};
};
var $author$project$Message$Effects$SyncStickyBuildLogHeaders = {$: 76};
var $author$project$Message$Effects$FetchBuildHistory = F2(
	function (a, b) {
		return {$: 18, a: a, b: b};
	});
var $author$project$Message$Effects$FetchBuildJobDetails = function (a) {
	return {$: 17, a: a};
};
var $author$project$Message$Effects$FetchBuildPrep = F2(
	function (a, b) {
		return {$: 19, a: a, b: b};
	});
var $author$project$Message$Effects$Focus = function (a) {
	return {$: 56, a: a};
};
var $author$project$Message$Effects$SetFavIcon = function (a) {
	return {$: 52, a: a};
};
var $author$project$Build$Build$bodyId = 'build-body';
var $author$project$Build$Header$Models$Output = function (a) {
	return {$: 2, a: a};
};
var $author$project$Message$Effects$FetchBuildPlan = function (a) {
	return {$: 20, a: a};
};
var $author$project$Message$Effects$FetchBuildPlanAndResources = function (a) {
	return {$: 21, a: a};
};
var $author$project$Build$Output$Models$StepsLiveUpdating = 1;
var $author$project$Build$Output$Models$StepsLoading = 0;
var $author$project$Concourse$BuildStatus$isRunning = function (status) {
	switch (status) {
		case 0:
			return true;
		case 1:
			return true;
		default:
			return false;
	}
};
var $author$project$Build$Output$Output$init = F2(
	function (highlight, build) {
		var outputState = $author$project$Concourse$BuildStatus$isRunning(build.hH) ? 1 : 0;
		var model = {fM: false, fN: $elm$core$Maybe$Nothing, y: highlight, hG: outputState, hI: $elm$core$Maybe$Nothing};
		var fetch = (!_Utils_eq(build.gF, $elm$core$Maybe$Nothing)) ? _List_fromArray(
			[
				$author$project$Message$Effects$FetchBuildPlanAndResources(build.L)
			]) : _List_fromArray(
			[
				$author$project$Message$Effects$FetchBuildPlan(build.L)
			]);
		return _Utils_Tuple2(model, fetch);
	});
var $author$project$Build$Build$initBuildOutput = F2(
	function (build, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var _v1 = A2($author$project$Build$Output$Output$init, model.y, build);
		var output = _v1.a;
		var outputCmd = _v1.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					H: $author$project$Build$Header$Models$Output(output)
				}),
			_Utils_ap(effects, outputCmd));
	});
var $author$project$Build$Build$pollUntilStarted = function (buildId) {
	return _List_fromArray(
		[
			A2($author$project$Message$Effects$FetchBuild, 1000, buildId),
			A2($author$project$Message$Effects$FetchBuildPrep, 1000, buildId)
		]);
};
var $author$project$Build$Build$handleBuildFetched = F2(
	function (build, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var withBuild = _Utils_update(
			model,
			{
				H: model.av ? model.H : $author$project$Build$Header$Models$Empty,
				bs: build.bs
			});
		var fetchJobAndHistory = function () {
			var _v4 = _Utils_Tuple2(model.gF, build.gF);
			if ((_v4.a.$ === 1) && (!_v4.b.$)) {
				var _v5 = _v4.a;
				var buildJob = _v4.b.a;
				return _List_fromArray(
					[
						$author$project$Message$Effects$FetchBuildJobDetails(buildJob),
						A2($author$project$Message$Effects$FetchBuildHistory, buildJob, $elm$core$Maybe$Nothing)
					]);
			} else {
				return _List_Nil;
			}
		}();
		var _v1 = function () {
			if (!build.hH) {
				return _Utils_Tuple2(
					withBuild,
					_Utils_ap(
						effects,
						$author$project$Build$Build$pollUntilStarted(build.L)));
			} else {
				if (_Utils_eq(build.bs, $elm$core$Maybe$Nothing)) {
					var _v2 = model.aZ;
					if (_v2.$ === 1) {
						return A2(
							$author$project$Build$Build$initBuildOutput,
							build,
							_Utils_Tuple2(withBuild, effects));
					} else {
						var _v3 = A2(
							$author$project$Build$Build$initBuildOutput,
							build,
							_Utils_Tuple2(withBuild, effects));
						var newNewModel = _v3.a;
						var newEffects = _v3.b;
						return _Utils_Tuple2(
							newNewModel,
							_Utils_ap(
								newEffects,
								_List_fromArray(
									[
										A2($author$project$Message$Effects$FetchBuildPrep, 1000, build.L)
									])));
					}
				} else {
					return _Utils_Tuple2(withBuild, effects);
				}
			}
		}();
		var newModel = _v1.a;
		var cmd = _v1.b;
		return ((!model.av) || _Utils_eq(build.L, model.L)) ? _Utils_Tuple2(
			newModel,
			_Utils_ap(
				cmd,
				_Utils_ap(
					fetchJobAndHistory,
					_List_fromArray(
						[
							$author$project$Message$Effects$SetFavIcon(
							$elm$core$Maybe$Just(build.hH)),
							$author$project$Message$Effects$Focus($author$project$Build$Build$bodyId)
						])))) : _Utils_Tuple2(model, effects);
	});
var $author$project$Build$Build$handleBuildPrepFetched = F2(
	function (buildPrep, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					aZ: $elm$core$Maybe$Just(buildPrep)
				}),
			effects);
	});
var $author$project$Message$Effects$NavigateTo = function (a) {
	return {$: 36, a: a};
};
var $author$project$Build$Header$Header$buildName = function (s) {
	var _v0 = A2(
		$elm$core$List$map,
		$elm$core$String$toInt,
		A2($elm$core$String$split, '.', s));
	_v0$2:
	while (true) {
		if (_v0.b && (!_v0.a.$)) {
			if (!_v0.b.b) {
				var n = _v0.a.a;
				return $elm$core$Maybe$Just(
					_Utils_Tuple2(n, 0));
			} else {
				if ((!_v0.b.a.$) && (!_v0.b.b.b)) {
					var n = _v0.a.a;
					var _v1 = _v0.b;
					var m = _v1.a.a;
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(n, m));
				} else {
					break _v0$2;
				}
			}
		} else {
			break _v0$2;
		}
	}
	return $elm$core$Maybe$Nothing;
};
var $author$project$Routes$buildRoute = F3(
	function (id, name, jobId) {
		if (!jobId.$) {
			var j = jobId.a;
			return $author$project$Routes$Build(
				{
					y: $author$project$Routes$HighlightNothing,
					L: {ff: name, d7: j.d7, c_: j.c_, dh: j.dh}
				});
		} else {
			return $author$project$Routes$OneOffBuild(
				{y: $author$project$Routes$HighlightNothing, L: id});
		}
	});
var $elm_community$list_extra$List$Extra$updateIf = F3(
	function (predicate, update, list) {
		return A2(
			$elm$core$List$map,
			function (item) {
				return predicate(item) ? update(item) : item;
			},
			list);
	});
var $elm_community$list_extra$List$Extra$setIf = F3(
	function (predicate, replacement, list) {
		return A3(
			$elm_community$list_extra$List$Extra$updateIf,
			predicate,
			$elm$core$Basics$always(replacement),
			list);
	});
var $author$project$Build$Header$Header$handleBuildFetched = F2(
	function (b, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return ((!model.av) || _Utils_eq(model.L, b.L)) ? _Utils_Tuple2(
			_Utils_update(
				model,
				{
					cv: b.cv,
					fZ: true,
					av: true,
					gb: A3(
						$elm_community$list_extra$List$Extra$setIf,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.L;
							},
							$elm$core$Basics$eq(b.L)),
						{cv: b.cv, L: b.L, bX: b.bX, hH: b.hH},
						model.gb),
					L: b.L,
					gF: b.gF,
					bX: b.bX,
					hH: b.hH
				}),
			effects) : _Utils_Tuple2(model, effects);
	});
var $author$project$Message$Effects$CheckIsVisible = function (a) {
	return {$: 55, a: a};
};
var $author$project$Build$Header$Header$historyItem = function (model) {
	return {cv: model.cv, L: model.L, bX: model.bX, hH: model.hH};
};
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $author$project$Build$Header$Header$handleHistoryFetched = F2(
	function (history, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var newModel = _Utils_update(
			model,
			{
				fZ: false,
				gb: _Utils_ap(
					model.gb,
					A2(
						$elm$core$List$map,
						function (b) {
							return {cv: b.cv, L: b.L, bX: b.bX, hH: b.hH};
						},
						history.fw)),
				bh: history.g6.bh
			});
		var _v1 = model.gF;
		if (!_v1.$) {
			var job = _v1.a;
			return A2(
				$elm$core$List$member,
				$author$project$Build$Header$Header$historyItem(model),
				newModel.gb) ? _Utils_Tuple2(
				newModel,
				_Utils_ap(
					effects,
					_List_fromArray(
						[
							$author$project$Message$Effects$CheckIsVisible(
							$elm$core$String$fromInt(model.L))
						]))) : _Utils_Tuple2(
				_Utils_update(
					newModel,
					{fZ: true}),
				_Utils_ap(
					effects,
					_List_fromArray(
						[
							A2($author$project$Message$Effects$FetchBuildHistory, job, history.g6.bh)
						])));
		} else {
			return _Utils_Tuple2(newModel, effects);
		}
	});
var $elm$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		if (ma.$ === 1) {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 1) {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				return $elm$core$Maybe$Just(
					A2(func, a, b));
			}
		}
	});
var $elm$core$List$sortWith = _List_sortWith;
var $author$project$Build$Header$Header$handleCallback = F2(
	function (callback, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$4:
		while (true) {
			switch (callback.$) {
				case 31:
					if (!callback.a.$) {
						var b = callback.a.a;
						return A2(
							$author$project$Build$Header$Header$handleBuildFetched,
							b,
							_Utils_Tuple2(model, effects));
					} else {
						break _v1$4;
					}
				case 3:
					if (!callback.a.$) {
						var b = callback.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									gb: $elm$core$List$reverse(
										A2(
											$elm$core$List$sortWith,
											F2(
												function (n, m) {
													return A2(
														$elm$core$Maybe$withDefault,
														1,
														A3(
															$elm$core$Maybe$map2,
															F2(
																function (_v2, _v3) {
																	var i = _v2.a;
																	var j = _v2.b;
																	var k = _v3.a;
																	var l = _v3.b;
																	var _v4 = A2($elm$core$Basics$compare, i, k);
																	if (_v4 === 1) {
																		return A2($elm$core$Basics$compare, j, l);
																	} else {
																		var x = _v4;
																		return x;
																	}
																}),
															$author$project$Build$Header$Header$buildName(n.bX),
															$author$project$Build$Header$Header$buildName(m.bX)));
												}),
											A2(
												$elm$core$List$cons,
												{cv: b.cv, L: b.L, bX: b.bX, hH: b.hH},
												model.gb)))
								}),
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$NavigateTo(
										$author$project$Routes$toString(
											A3($author$project$Routes$buildRoute, b.L, b.bX, model.gF)))
									])));
					} else {
						break _v1$4;
					}
				case 33:
					if (!callback.a.$) {
						var history = callback.a.a;
						return A2(
							$author$project$Build$Header$Header$handleHistoryFetched,
							history,
							_Utils_Tuple2(model, effects));
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{fZ: false}),
							effects);
					}
				default:
					break _v1$4;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Build$StepTree$Models$Across = F5(
	function (a, b, c, d, e) {
		return {$: 9, a: a, b: b, c: c, d: d, e: e};
	});
var $author$project$Build$StepTree$Models$Aggregate = function (a) {
	return {$: 7, a: a};
};
var $author$project$Build$StepTree$Models$ArtifactInput = function (a) {
	return {$: 3, a: a};
};
var $author$project$Build$StepTree$Models$ArtifactOutput = function (a) {
	return {$: 5, a: a};
};
var $author$project$Build$StepTree$Models$Do = function (a) {
	return {$: 10, a: a};
};
var $author$project$Build$StepTree$Models$Ensure = function (a) {
	return {$: 15, a: a};
};
var $author$project$Build$StepTree$Models$Get = function (a) {
	return {$: 4, a: a};
};
var $author$project$Build$StepTree$Models$InParallel = function (a) {
	return {$: 8, a: a};
};
var $author$project$Build$StepTree$Models$LoadVar = function (a) {
	return {$: 2, a: a};
};
var $author$project$Build$StepTree$Models$OnAbort = function (a) {
	return {$: 13, a: a};
};
var $author$project$Build$StepTree$Models$OnError = function (a) {
	return {$: 14, a: a};
};
var $author$project$Build$StepTree$Models$OnFailure = function (a) {
	return {$: 12, a: a};
};
var $author$project$Build$StepTree$Models$OnSuccess = function (a) {
	return {$: 11, a: a};
};
var $author$project$Build$StepTree$Models$Put = function (a) {
	return {$: 6, a: a};
};
var $author$project$Build$StepTree$Models$Retry = F2(
	function (a, b) {
		return {$: 17, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$SetPipeline = function (a) {
	return {$: 1, a: a};
};
var $author$project$Build$StepTree$Models$StepStateSucceeded = 4;
var $author$project$Build$StepTree$Models$Task = function (a) {
	return {$: 0, a: a};
};
var $author$project$Build$StepTree$Models$Timeout = function (a) {
	return {$: 18, a: a};
};
var $author$project$Build$StepTree$Models$Try = function (a) {
	return {$: 16, a: a};
};
var $vito$elm_ansi$Ansi$Log$Cooked = 1;
var $author$project$Build$StepTree$Models$StepStatePending = 0;
var $vito$elm_ansi$Ansi$Log$init = function (ldisc) {
	return {
		cQ: ldisc,
		ee: $elm$core$Array$empty,
		b3: {aq: 0, aA: 0},
		bt: '',
		cb: $elm$core$Maybe$Nothing,
		d: {fb: $elm$core$Maybe$Nothing, bE: false, aG: false, bJ: false, bc: $elm$core$Maybe$Nothing, bM: false, bN: false, bf: false, bS: false, cl: false}
	};
};
var $author$project$Concourse$mapBuildPlan = F2(
	function (fn, plan) {
		return A2(
			$elm$core$List$cons,
			fn(plan),
			function () {
				var _v0 = plan.A;
				switch (_v0.$) {
					case 0:
						return _List_Nil;
					case 1:
						return _List_Nil;
					case 2:
						return _List_Nil;
					case 3:
						return _List_Nil;
					case 6:
						return _List_Nil;
					case 4:
						return _List_Nil;
					case 5:
						return _List_Nil;
					case 7:
						var plans = _v0.a;
						return A2(
							$elm$core$List$concatMap,
							$author$project$Concourse$mapBuildPlan(fn),
							$elm$core$Array$toList(plans));
					case 8:
						var plans = _v0.a;
						return A2(
							$elm$core$List$concatMap,
							$author$project$Concourse$mapBuildPlan(fn),
							$elm$core$Array$toList(plans));
					case 9:
						var steps = _v0.a.hI;
						return A2(
							$elm$core$List$concatMap,
							$author$project$Concourse$mapBuildPlan(fn),
							A2($elm$core$List$map, $elm$core$Tuple$second, steps));
					case 10:
						var plans = _v0.a;
						return A2(
							$elm$core$List$concatMap,
							$author$project$Concourse$mapBuildPlan(fn),
							$elm$core$Array$toList(plans));
					case 11:
						var step = _v0.a.A;
						var hook = _v0.a.z;
						return _Utils_ap(
							A2($author$project$Concourse$mapBuildPlan, fn, step),
							A2($author$project$Concourse$mapBuildPlan, fn, hook));
					case 12:
						var step = _v0.a.A;
						var hook = _v0.a.z;
						return _Utils_ap(
							A2($author$project$Concourse$mapBuildPlan, fn, step),
							A2($author$project$Concourse$mapBuildPlan, fn, hook));
					case 13:
						var step = _v0.a.A;
						var hook = _v0.a.z;
						return _Utils_ap(
							A2($author$project$Concourse$mapBuildPlan, fn, step),
							A2($author$project$Concourse$mapBuildPlan, fn, hook));
					case 14:
						var step = _v0.a.A;
						var hook = _v0.a.z;
						return _Utils_ap(
							A2($author$project$Concourse$mapBuildPlan, fn, step),
							A2($author$project$Concourse$mapBuildPlan, fn, hook));
					case 15:
						var step = _v0.a.A;
						var hook = _v0.a.z;
						return _Utils_ap(
							A2($author$project$Concourse$mapBuildPlan, fn, step),
							A2($author$project$Concourse$mapBuildPlan, fn, hook));
					case 16:
						var step = _v0.a;
						return A2($author$project$Concourse$mapBuildPlan, fn, step);
					case 17:
						var plans = _v0.a;
						return A2(
							$elm$core$List$concatMap,
							$author$project$Concourse$mapBuildPlan(fn),
							$elm$core$Array$toList(plans));
					default:
						var step = _v0.a;
						return A2($author$project$Concourse$mapBuildPlan, fn, step);
				}
			}());
	});
var $author$project$Build$StepTree$StepTree$constructStep = F3(
	function (hl, plan, name) {
		return {
			fL: $elm$core$Maybe$Nothing,
			fQ: function () {
				switch (hl.$) {
					case 0:
						return false;
					case 1:
						var stepID = hl.a;
						return A2(
							$elm$core$List$member,
							stepID,
							A2(
								$author$project$Concourse$mapBuildPlan,
								function ($) {
									return $.L;
								},
								plan));
					default:
						var stepID = hl.a;
						return A2(
							$elm$core$List$member,
							stepID,
							A2(
								$author$project$Concourse$mapBuildPlan,
								function ($) {
									return $.L;
								},
								plan));
				}
			}(),
			dP: $elm$core$Maybe$Nothing,
			f2: false,
			L: plan.L,
			gl: $elm$core$Maybe$Nothing,
			cR: $vito$elm_ansi$Ansi$Log$init(1),
			gN: _List_Nil,
			bX: name,
			hD: $elm$core$Maybe$Nothing,
			hG: 0,
			eX: $elm$core$Dict$empty,
			dn: $elm$core$Maybe$Nothing
		};
	});
var $elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);
			var jsArray = _v0.a;
			var remainingItems = _v0.b;
			if (_Utils_cmp(
				$elm$core$Elm$JsArray$length(jsArray),
				$elm$core$Array$branchFactor) < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					true,
					{q: nodeList, n: nodeListSize, p: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					$elm$core$List$cons,
					$elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var $elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return $elm$core$Array$empty;
	} else {
		return A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var $elm$core$Elm$JsArray$foldl = _JsArray_foldl;
var $elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;
var $elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var $elm$core$Array$indexedMap = F2(
	function (func, _v0) {
		var len = _v0.a;
		var tree = _v0.c;
		var tail = _v0.d;
		var initialBuilder = {
			q: _List_Nil,
			n: 0,
			p: A3(
				$elm$core$Elm$JsArray$indexedMap,
				func,
				$elm$core$Array$tailIndex(len),
				tail)
		};
		var helper = F2(
			function (node, builder) {
				if (!node.$) {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldl, helper, builder, subTree);
				} else {
					var leaf = node.a;
					var offset = builder.n * $elm$core$Array$branchFactor;
					var mappedLeaf = $elm$core$Array$Leaf(
						A3($elm$core$Elm$JsArray$indexedMap, func, offset, leaf));
					return {
						q: A2($elm$core$List$cons, mappedLeaf, builder.q),
						n: builder.n + 1,
						p: builder.p
					};
				}
			});
		return A2(
			$elm$core$Array$builderToArray,
			true,
			A3($elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));
	});
var $elm$core$Dict$singleton = F2(
	function (key, value) {
		return A5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
	});
var $author$project$Build$StepTree$StepTree$initBottom = F4(
	function (hl, create, plan, name) {
		return {
			dS: A2($elm$core$Dict$singleton, plan.L, $elm$core$Basics$identity),
			y: hl,
			dj: create(
				A3($author$project$Build$StepTree$StepTree$constructStep, hl, plan, name))
		};
	});
var $elm$core$Elm$JsArray$map = _JsArray_map;
var $elm$core$Array$map = F2(
	function (func, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = function (node) {
			if (!node.$) {
				var subTree = node.a;
				return $elm$core$Array$SubTree(
					A2($elm$core$Elm$JsArray$map, helper, subTree));
			} else {
				var values = node.a;
				return $elm$core$Array$Leaf(
					A2($elm$core$Elm$JsArray$map, func, values));
			}
		};
		return A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A2($elm$core$Elm$JsArray$map, helper, tree),
			A2($elm$core$Elm$JsArray$map, func, tail));
	});
var $author$project$Build$StepTree$Models$map = F2(
	function (f, tree) {
		switch (tree.$) {
			case 0:
				var step = tree.a;
				return $author$project$Build$StepTree$Models$Task(
					f(step));
			case 4:
				var step = tree.a;
				return $author$project$Build$StepTree$Models$Get(
					f(step));
			case 6:
				var step = tree.a;
				return $author$project$Build$StepTree$Models$Put(
					f(step));
			case 1:
				var step = tree.a;
				return $author$project$Build$StepTree$Models$SetPipeline(
					f(step));
			case 2:
				var step = tree.a;
				return $author$project$Build$StepTree$Models$LoadVar(
					f(step));
			case 9:
				var vars = tree.a;
				var vals = tree.b;
				var expanded = tree.c;
				var step = tree.d;
				var substeps = tree.e;
				return A5(
					$author$project$Build$StepTree$Models$Across,
					vars,
					vals,
					expanded,
					f(step),
					substeps);
			default:
				return tree;
		}
	});
var $elm$core$Dict$map = F2(
	function (func, dict) {
		if (dict.$ === -2) {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				A2(func, key, value),
				A2($elm$core$Dict$map, func, left),
				A2($elm$core$Dict$map, func, right));
		}
	});
var $author$project$Build$StepTree$StepTree$planContainsID = F2(
	function (stepID, plan) {
		return A2(
			$elm$core$List$member,
			stepID,
			A2(
				$author$project$Concourse$mapBuildPlan,
				function ($) {
					return $.L;
				},
				plan));
	});
var $author$project$Build$StepTree$StepTree$planIsHighlighted = F2(
	function (hl, plan) {
		switch (hl.$) {
			case 0:
				return false;
			case 1:
				var stepID = hl.a;
				return A2($author$project$Build$StepTree$StepTree$planContainsID, stepID, plan);
			default:
				var stepID = hl.a;
				return A2($author$project$Build$StepTree$StepTree$planContainsID, stepID, plan);
		}
	});
var $author$project$Build$StepTree$StepTree$isFirstOccurrence = F2(
	function (resources, step) {
		isFirstOccurrence:
		while (true) {
			if (!resources.b) {
				return false;
			} else {
				var name = resources.a.bX;
				var firstOccurrence = resources.a.f2;
				var rest = resources.b;
				if (_Utils_eq(name, step)) {
					return firstOccurrence;
				} else {
					var $temp$resources = rest,
						$temp$step = step;
					resources = $temp$resources;
					step = $temp$step;
					continue isFirstOccurrence;
				}
			}
		}
	});
var $author$project$Build$StepTree$StepTree$setupGetStep = F4(
	function (resources, name, version, step) {
		return _Utils_update(
			step,
			{
				f2: A2($author$project$Build$StepTree$StepTree$isFirstOccurrence, resources.go, name),
				dn: version
			});
	});
var $author$project$Build$StepTree$Models$Auto = 0;
var $author$project$Build$StepTree$Models$User = 1;
var $elm_community$list_extra$List$Extra$findIndexHelp = F3(
	function (index, predicate, list) {
		findIndexHelp:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					return $elm$core$Maybe$Just(index);
				} else {
					var $temp$index = index + 1,
						$temp$predicate = predicate,
						$temp$list = xs;
					index = $temp$index;
					predicate = $temp$predicate;
					list = $temp$list;
					continue findIndexHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$findIndex = $elm_community$list_extra$List$Extra$findIndexHelp(0);
var $author$project$Build$StepTree$StepTree$startingTab = F3(
	function (hl, planID, plans) {
		var idx = function () {
			switch (hl.$) {
				case 0:
					return $elm$core$Maybe$Nothing;
				case 1:
					var stepID = hl.a;
					return A2(
						$elm_community$list_extra$List$Extra$findIndex,
						$author$project$Build$StepTree$StepTree$planContainsID(stepID),
						plans);
				default:
					var stepID = hl.a;
					return A2(
						$elm_community$list_extra$List$Extra$findIndex,
						$author$project$Build$StepTree$StepTree$planContainsID(stepID),
						plans);
			}
		}();
		if (idx.$ === 1) {
			return {cz: 0, L: planID, de: 0};
		} else {
			var tab = idx.a;
			return {cz: 1, L: planID, de: tab};
		}
	});
var $elm$core$List$unzip = function (pairs) {
	var step = F2(
		function (_v0, _v1) {
			var x = _v0.a;
			var y = _v0.b;
			var xs = _v1.a;
			var ys = _v1.b;
			return _Utils_Tuple2(
				A2($elm$core$List$cons, x, xs),
				A2($elm$core$List$cons, y, ys));
		});
	return A3(
		$elm$core$List$foldr,
		step,
		_Utils_Tuple2(_List_Nil, _List_Nil),
		pairs);
};
var $author$project$Build$StepTree$Models$updateHook = F2(
	function (update, tree) {
		switch (tree.$) {
			case 11:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$OnSuccess(
					_Utils_update(
						hookedStep,
						{
							z: update(hookedStep.z)
						}));
			case 12:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$OnFailure(
					_Utils_update(
						hookedStep,
						{
							z: update(hookedStep.z)
						}));
			case 13:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$OnAbort(
					_Utils_update(
						hookedStep,
						{
							z: update(hookedStep.z)
						}));
			case 14:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$OnError(
					_Utils_update(
						hookedStep,
						{
							z: update(hookedStep.z)
						}));
			case 15:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$Ensure(
					_Utils_update(
						hookedStep,
						{
							z: update(hookedStep.z)
						}));
			default:
				return tree;
		}
	});
var $author$project$Build$StepTree$Models$wrapHook = function (subFocus) {
	return A2($elm$core$Basics$composeR, subFocus, $author$project$Build$StepTree$Models$updateHook);
};
var $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);
var $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var $elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = $elm$core$Array$bitMask & (index >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (!_v0.$) {
				var subTree = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _v0.a;
				return A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);
			}
		}
	});
var $elm$core$Array$get = F2(
	function (index, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(
			A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(
			A3($elm$core$Array$getHelp, startShift, index, tree)));
	});
var $author$project$Build$StepTree$Models$getMultiStepIndex = F2(
	function (idx, tree) {
		var steps = function () {
			switch (tree.$) {
				case 7:
					var trees = tree.a;
					return trees;
				case 8:
					var trees = tree.a;
					return trees;
				case 10:
					var trees = tree.a;
					return trees;
				case 17:
					var trees = tree.b;
					return trees;
				case 9:
					var trees = tree.e;
					return trees;
				default:
					return $elm$core$Array$fromList(_List_Nil);
			}
		}();
		var _v0 = A2($elm$core$Array$get, idx, steps);
		if (!_v0.$) {
			var sub = _v0.a;
			return sub;
		} else {
			return tree;
		}
	});
var $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;
var $elm$core$Array$setHelp = F4(
	function (shift, index, value, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
		if (!_v0.$) {
			var subTree = _v0.a;
			var newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$SubTree(newSub),
				tree);
		} else {
			var values = _v0.a;
			var newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$Leaf(newLeaf),
				tree);
		}
	});
var $elm$core$Array$set = F3(
	function (index, value, array) {
		var len = array.a;
		var startShift = array.b;
		var tree = array.c;
		var tail = array.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			tree,
			A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A4($elm$core$Array$setHelp, startShift, index, value, tree),
			tail));
	});
var $author$project$Build$StepTree$Models$setMultiStepIndex = F3(
	function (idx, update, tree) {
		switch (tree.$) {
			case 7:
				var trees = tree.a;
				return $author$project$Build$StepTree$Models$Aggregate(
					A3(
						$elm$core$Array$set,
						idx,
						update(
							A2($author$project$Build$StepTree$Models$getMultiStepIndex, idx, tree)),
						trees));
			case 8:
				var trees = tree.a;
				return $author$project$Build$StepTree$Models$InParallel(
					A3(
						$elm$core$Array$set,
						idx,
						update(
							A2($author$project$Build$StepTree$Models$getMultiStepIndex, idx, tree)),
						trees));
			case 10:
				var trees = tree.a;
				return $author$project$Build$StepTree$Models$Do(
					A3(
						$elm$core$Array$set,
						idx,
						update(
							A2($author$project$Build$StepTree$Models$getMultiStepIndex, idx, tree)),
						trees));
			case 17:
				var tabInfo = tree.a;
				var trees = tree.b;
				var updatedSteps = A3(
					$elm$core$Array$set,
					idx,
					update(
						A2($author$project$Build$StepTree$Models$getMultiStepIndex, idx, tree)),
					trees);
				var _v1 = tabInfo.cz;
				if (!_v1) {
					return A2(
						$author$project$Build$StepTree$Models$Retry,
						_Utils_update(
							tabInfo,
							{de: idx}),
						updatedSteps);
				} else {
					return A2($author$project$Build$StepTree$Models$Retry, tabInfo, updatedSteps);
				}
			case 9:
				var vars = tree.a;
				var vals = tree.b;
				var expanded = tree.c;
				var step = tree.d;
				var trees = tree.e;
				var updatedSteps = A3(
					$elm$core$Array$set,
					idx,
					update(
						A2($author$project$Build$StepTree$Models$getMultiStepIndex, idx, tree)),
					trees);
				return A5($author$project$Build$StepTree$Models$Across, vars, vals, expanded, step, updatedSteps);
			default:
				return tree;
		}
	});
var $author$project$Build$StepTree$Models$wrapMultiStep = function (i) {
	return $elm$core$Dict$map(
		F2(
			function (_v0, subFocus) {
				return A2(
					$elm$core$Basics$composeR,
					subFocus,
					$author$project$Build$StepTree$Models$setMultiStepIndex(i));
			}));
};
var $author$project$Build$StepTree$Models$updateStep = F2(
	function (update, tree) {
		switch (tree.$) {
			case 11:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$OnSuccess(
					_Utils_update(
						hookedStep,
						{
							A: update(hookedStep.A)
						}));
			case 12:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$OnFailure(
					_Utils_update(
						hookedStep,
						{
							A: update(hookedStep.A)
						}));
			case 13:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$OnAbort(
					_Utils_update(
						hookedStep,
						{
							A: update(hookedStep.A)
						}));
			case 14:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$OnError(
					_Utils_update(
						hookedStep,
						{
							A: update(hookedStep.A)
						}));
			case 15:
				var hookedStep = tree.a;
				return $author$project$Build$StepTree$Models$Ensure(
					_Utils_update(
						hookedStep,
						{
							A: update(hookedStep.A)
						}));
			case 16:
				var step = tree.a;
				return $author$project$Build$StepTree$Models$Try(
					update(step));
			case 18:
				var step = tree.a;
				return $author$project$Build$StepTree$Models$Timeout(
					update(step));
			default:
				return tree;
		}
	});
var $author$project$Build$StepTree$Models$wrapStep = function (subFocus) {
	return A2($elm$core$Basics$composeR, subFocus, $author$project$Build$StepTree$Models$updateStep);
};
var $author$project$Build$StepTree$StepTree$init = F3(
	function (hl, resources, buildPlan) {
		var _v1 = buildPlan.A;
		switch (_v1.$) {
			case 0:
				var name = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initBottom, hl, $author$project$Build$StepTree$Models$Task, buildPlan, name);
			case 3:
				var name = _v1.a;
				return A4(
					$author$project$Build$StepTree$StepTree$initBottom,
					hl,
					function (s) {
						return $author$project$Build$StepTree$Models$ArtifactInput(
							_Utils_update(
								s,
								{hG: 4}));
					},
					buildPlan,
					name);
			case 4:
				var name = _v1.a;
				var version = _v1.b;
				return A4(
					$author$project$Build$StepTree$StepTree$initBottom,
					hl,
					A2(
						$elm$core$Basics$composeL,
						$author$project$Build$StepTree$Models$Get,
						A3($author$project$Build$StepTree$StepTree$setupGetStep, resources, name, version)),
					buildPlan,
					name);
			case 5:
				var name = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initBottom, hl, $author$project$Build$StepTree$Models$ArtifactOutput, buildPlan, name);
			case 6:
				var name = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initBottom, hl, $author$project$Build$StepTree$Models$Put, buildPlan, name);
			case 1:
				var name = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initBottom, hl, $author$project$Build$StepTree$Models$SetPipeline, buildPlan, name);
			case 2:
				var name = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initBottom, hl, $author$project$Build$StepTree$Models$LoadVar, buildPlan, name);
			case 7:
				var plans = _v1.a;
				return A5($author$project$Build$StepTree$StepTree$initMultiStep, hl, resources, buildPlan.L, $author$project$Build$StepTree$Models$Aggregate, plans);
			case 8:
				var plans = _v1.a;
				return A5($author$project$Build$StepTree$StepTree$initMultiStep, hl, resources, buildPlan.L, $author$project$Build$StepTree$Models$InParallel, plans);
			case 10:
				var plans = _v1.a;
				return A5($author$project$Build$StepTree$StepTree$initMultiStep, hl, resources, buildPlan.L, $author$project$Build$StepTree$Models$Do, plans);
			case 9:
				var plan = _v1.a;
				var _v2 = $elm$core$List$unzip(plan.hI);
				var values = _v2.a;
				var plans = _v2.b;
				return A6(
					$author$project$Build$StepTree$StepTree$initRootedMultiStep,
					hl,
					resources,
					buildPlan,
					A2($elm$core$String$join, ', ', plan.e_),
					F2(
						function (step, substeps) {
							return A5(
								$author$project$Build$StepTree$Models$Across,
								plan.e_,
								values,
								A2(
									$elm$core$List$map,
									$author$project$Build$StepTree$StepTree$planIsHighlighted(hl),
									plans),
								step,
								A2(
									$elm$core$Array$map,
									$author$project$Build$StepTree$Models$map(
										function (s) {
											return _Utils_update(
												s,
												{fQ: true});
										}),
									substeps));
						}),
					$elm$core$Array$fromList(plans));
			case 17:
				var plans = _v1.a;
				return A5(
					$author$project$Build$StepTree$StepTree$initMultiStep,
					hl,
					resources,
					buildPlan.L,
					$author$project$Build$StepTree$Models$Retry(
						A3(
							$author$project$Build$StepTree$StepTree$startingTab,
							hl,
							buildPlan.L,
							$elm$core$Array$toList(plans))),
					plans);
			case 11:
				var hookedPlan = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initHookedStep, hl, resources, $author$project$Build$StepTree$Models$OnSuccess, hookedPlan);
			case 12:
				var hookedPlan = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initHookedStep, hl, resources, $author$project$Build$StepTree$Models$OnFailure, hookedPlan);
			case 13:
				var hookedPlan = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initHookedStep, hl, resources, $author$project$Build$StepTree$Models$OnAbort, hookedPlan);
			case 14:
				var hookedPlan = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initHookedStep, hl, resources, $author$project$Build$StepTree$Models$OnError, hookedPlan);
			case 15:
				var hookedPlan = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initHookedStep, hl, resources, $author$project$Build$StepTree$Models$Ensure, hookedPlan);
			case 16:
				var plan = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initWrappedStep, hl, resources, $author$project$Build$StepTree$Models$Try, plan);
			default:
				var plan = _v1.a;
				return A4($author$project$Build$StepTree$StepTree$initWrappedStep, hl, resources, $author$project$Build$StepTree$Models$Timeout, plan);
		}
	});
var $author$project$Build$StepTree$StepTree$initHookedStep = F4(
	function (hl, resources, create, hookedPlan) {
		var stepModel = A3($author$project$Build$StepTree$StepTree$init, hl, resources, hookedPlan.A);
		var hookModel = A3($author$project$Build$StepTree$StepTree$init, hl, resources, hookedPlan.z);
		return {
			dS: A2(
				$elm$core$Dict$union,
				A2(
					$elm$core$Dict$map,
					$elm$core$Basics$always($author$project$Build$StepTree$Models$wrapStep),
					stepModel.dS),
				A2(
					$elm$core$Dict$map,
					$elm$core$Basics$always($author$project$Build$StepTree$Models$wrapHook),
					hookModel.dS)),
			y: hl,
			dj: create(
				{z: hookModel.dj, A: stepModel.dj})
		};
	});
var $author$project$Build$StepTree$StepTree$initMultiStep = F5(
	function (hl, resources, planId, constructor, plans) {
		var selfFoci = A2($elm$core$Dict$singleton, planId, $elm$core$Basics$identity);
		var inited = A2(
			$elm$core$Array$map,
			A2($author$project$Build$StepTree$StepTree$init, hl, resources),
			plans);
		var trees = A2(
			$elm$core$Array$map,
			function ($) {
				return $.dj;
			},
			inited);
		return {
			dS: A3(
				$elm$core$Array$foldr,
				$elm$core$Dict$union,
				selfFoci,
				A2(
					$elm$core$Array$indexedMap,
					$author$project$Build$StepTree$Models$wrapMultiStep,
					A2(
						$elm$core$Array$map,
						function ($) {
							return $.dS;
						},
						inited))),
			y: hl,
			dj: constructor(trees)
		};
	});
var $author$project$Build$StepTree$StepTree$initRootedMultiStep = F6(
	function (hl, resources, plan, stepName, constructor, plans) {
		return A5(
			$author$project$Build$StepTree$StepTree$initMultiStep,
			hl,
			resources,
			plan.L,
			constructor(
				A3($author$project$Build$StepTree$StepTree$constructStep, hl, plan, stepName)),
			plans);
	});
var $author$project$Build$StepTree$StepTree$initWrappedStep = F4(
	function (hl, resources, create, plan) {
		var _v0 = A3($author$project$Build$StepTree$StepTree$init, hl, resources, plan);
		var tree = _v0.dj;
		var foci = _v0.dS;
		return {
			dS: A2(
				$elm$core$Dict$map,
				$elm$core$Basics$always($author$project$Build$StepTree$Models$wrapStep),
				foci),
			y: hl,
			dj: create(tree)
		};
	});
var $author$project$Build$Output$Output$planAndResourcesFetched = F3(
	function (buildId, _v0, model) {
		var plan = _v0.a;
		var resources = _v0.b;
		var url = A2(
			$author$project$Api$Endpoints$toString,
			_List_Nil,
			A2($author$project$Api$Endpoints$Build, buildId, 5));
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					fN: $elm$core$Maybe$Just(url),
					hI: $elm$core$Maybe$Just(
						A3($author$project$Build$StepTree$StepTree$init, model.y, resources, plan))
				}),
			_List_Nil);
	});
var $author$project$Build$Build$updateOutput = F2(
	function (updater, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var _v1 = model.H;
		if (_v1.$ === 2) {
			var output = _v1.a;
			var _v2 = updater(output);
			var newOutput = _v2.a;
			var outputEffects = _v2.b;
			var newModel = _Utils_update(
				model,
				{
					H: (!_Utils_eq(newOutput, output)) ? $author$project$Build$Header$Models$Output(newOutput) : model.H
				});
			return _Utils_Tuple2(
				newModel,
				_Utils_ap(effects, outputEffects));
		} else {
			return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Build$Build$handleCallback = F2(
	function (action, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return A2(
			$author$project$Build$Header$Header$handleCallback,
			action,
			function () {
				_v1$9:
				while (true) {
					switch (action.$) {
						case 31:
							if (!action.a.$) {
								var build = action.a.a;
								return A2(
									$author$project$Build$Build$handleBuildFetched,
									build,
									_Utils_Tuple2(model, effects));
							} else {
								var err = action.a.a;
								if (err.$ === 3) {
									var status = err.a.hH;
									return (status.fq === 401) ? _Utils_Tuple2(
										model,
										_Utils_ap(
											effects,
											_List_fromArray(
												[$author$project$Message$Effects$RedirectToLogin]))) : ((status.fq === 404) ? _Utils_Tuple2(
										_Utils_update(
											model,
											{cT: true, aZ: $elm$core$Maybe$Nothing}),
										effects) : _Utils_Tuple2(model, effects));
								} else {
									return _Utils_Tuple2(model, effects);
								}
							}
						case 35:
							if (!action.a.$) {
								return _Utils_Tuple2(model, effects);
							} else {
								break _v1$9;
							}
						case 32:
							if (!action.b.$) {
								var buildId = action.a;
								var buildPrep = action.b.a;
								return _Utils_eq(buildId, model.L) ? A2(
									$author$project$Build$Build$handleBuildPrepFetched,
									buildPrep,
									_Utils_Tuple2(model, effects)) : _Utils_Tuple2(model, effects);
							} else {
								var err = action.b.a;
								if (err.$ === 3) {
									var status = err.a.hH;
									return (status.fq === 401) ? _Utils_Tuple2(
										_Utils_update(
											model,
											{a8: false}),
										effects) : _Utils_Tuple2(model, effects);
								} else {
									return _Utils_Tuple2(model, effects);
								}
							}
						case 34:
							if (!action.b.$) {
								var buildId = action.a;
								var planAndResources = action.b.a;
								return A2(
									$author$project$Build$Build$updateOutput,
									A2($author$project$Build$Output$Output$planAndResourcesFetched, buildId, planAndResources),
									_Utils_Tuple2(
										model,
										_Utils_ap(
											effects,
											_List_fromArray(
												[
													$author$project$Message$Effects$OpenBuildEventStream(
													{
														fO: _List_fromArray(
															['end', 'event']),
														h4: A2(
															$author$project$Api$Endpoints$toString,
															_List_Nil,
															A2($author$project$Api$Endpoints$Build, buildId, 5))
													}),
													$author$project$Message$Effects$SyncStickyBuildLogHeaders
												]))));
							} else {
								var err = action.b.a;
								if (err.$ === 3) {
									var status = err.a.hH;
									var isAborted = model.hH === 5;
									return ((status.fq === 404) && isAborted) ? _Utils_Tuple2(
										_Utils_update(
											model,
											{H: $author$project$Build$Header$Models$Cancelled}),
										effects) : ((status.fq === 401) ? _Utils_Tuple2(
										_Utils_update(
											model,
											{a8: false}),
										effects) : _Utils_Tuple2(model, effects));
								} else {
									return _Utils_Tuple2(model, effects);
								}
							}
						case 30:
							if (!action.a.$) {
								var job = action.a.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{ct: job.ct}),
									effects);
							} else {
								return _Utils_Tuple2(model, effects);
							}
						default:
							break _v1$9;
					}
				}
				return _Utils_Tuple2(model, effects);
			}());
	});
var $author$project$Message$Effects$DeleteCachedJobs = {$: 66};
var $author$project$Message$Effects$DeleteCachedPipelines = {$: 69};
var $author$project$Message$Effects$DeleteCachedTeams = {$: 72};
var $author$project$Dashboard$Models$Disabled = 1;
var $author$project$Dashboard$Models$Failed = 0;
var $author$project$Message$Effects$FetchPipelines = function (a) {
	return {$: 9, a: a};
};
var $author$project$FetchResult$Fetched = function (a) {
	return {$: 2, a: a};
};
var $author$project$Message$Effects$SaveCachedJobs = function (a) {
	return {$: 64, a: a};
};
var $author$project$Message$Effects$SaveCachedPipelines = function (a) {
	return {$: 67, a: a};
};
var $author$project$Message$Effects$SaveCachedTeams = function (a) {
	return {$: 70, a: a};
};
var $author$project$Dashboard$RequestBuffer$Buffer = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $author$project$Dashboard$Dashboard$buffers = _List_fromArray(
	[
		A4(
		$author$project$Dashboard$RequestBuffer$Buffer,
		$author$project$Message$Effects$FetchAllTeams,
		function (c) {
			if (c.$ === 25) {
				return true;
			} else {
				return false;
			}
		},
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.w;
			},
			$elm$core$Basics$neq($author$project$Dashboard$Models$NotDragging)),
		{
			bO: function (m) {
				return m.cM;
			},
			cd: F2(
				function (f, m) {
					return _Utils_update(
						m,
						{cM: f});
				})
		}),
		A4(
		$author$project$Dashboard$RequestBuffer$Buffer,
		$author$project$Message$Effects$FetchAllResources,
		function (c) {
			if (c.$ === 27) {
				return true;
			} else {
				return false;
			}
		},
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.w;
			},
			$elm$core$Basics$neq($author$project$Dashboard$Models$NotDragging)),
		{
			bO: function (m) {
				return m.cL;
			},
			cd: F2(
				function (f, m) {
					return _Utils_update(
						m,
						{cL: f});
				})
		}),
		A4(
		$author$project$Dashboard$RequestBuffer$Buffer,
		$author$project$Message$Effects$FetchAllJobs,
		function (c) {
			if (c.$ === 26) {
				return true;
			} else {
				return false;
			}
		},
		function (model) {
			return (!_Utils_eq(model.w, $author$project$Dashboard$Models$NotDragging)) || _Utils_eq(
				model.V,
				$elm$core$Maybe$Just(1));
		},
		{
			bO: function (m) {
				return m.cJ;
			},
			cd: F2(
				function (f, m) {
					return _Utils_update(
						m,
						{cJ: f});
				})
		}),
		A4(
		$author$project$Dashboard$RequestBuffer$Buffer,
		$author$project$Message$Effects$FetchAllPipelines,
		function (c) {
			if (c.$ === 37) {
				return true;
			} else {
				return false;
			}
		},
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.w;
			},
			$elm$core$Basics$neq($author$project$Dashboard$Models$NotDragging)),
		{
			bO: function (m) {
				return m.cK;
			},
			cd: F2(
				function (f, m) {
					return _Utils_update(
						m,
						{cK: f});
				})
		})
	]);
var $author$project$FetchResult$changedFrom = F2(
	function (oldResult, newResult) {
		var _v0 = _Utils_Tuple2(oldResult, newResult);
		_v0$5:
		while (true) {
			switch (_v0.a.$) {
				case 2:
					if (_v0.b.$ === 2) {
						var old = _v0.a.a;
						var _new = _v0.b.a;
						return !_Utils_eq(old, _new);
					} else {
						break _v0$5;
					}
				case 1:
					switch (_v0.b.$) {
						case 1:
							var old = _v0.a.a;
							var _new = _v0.b.a;
							return !_Utils_eq(old, _new);
						case 2:
							var old = _v0.a.a;
							var _new = _v0.b.a;
							return !_Utils_eq(old, _new);
						default:
							break _v0$5;
					}
				default:
					switch (_v0.b.$) {
						case 1:
							var _v1 = _v0.a;
							return true;
						case 2:
							var _v2 = _v0.a;
							return true;
						default:
							break _v0$5;
					}
			}
		}
		return false;
	});
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $author$project$Dashboard$Dashboard$groupBy = F2(
	function (keyfn, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A3(
						$elm$core$Dict$update,
						keyfn(x),
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Maybe$map(
								$elm$core$List$cons(x)),
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Maybe$withDefault(
									_List_fromArray(
										[x])),
								$elm$core$Maybe$Just)),
						acc);
				}),
			$elm$core$Dict$empty,
			list);
	});
var $author$project$Dashboard$RequestBuffer$handleCallbackSingle = F3(
	function (callback, _v0, _v1) {
		var callbackMatcher = _v0.b;
		var shouldFire = _v0.d;
		var model = _v1.a;
		var effects = _v1.b;
		return _Utils_Tuple2(
			callbackMatcher(callback) ? A2(shouldFire.cd, true, model) : model,
			effects);
	});
var $author$project$Dashboard$RequestBuffer$handleCallback = function (callback) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(
			$author$project$Dashboard$RequestBuffer$handleCallbackSingle(callback)),
		A2($elm$core$List$foldl, $elm$core$Basics$composeR, $elm$core$Basics$identity));
};
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $author$project$FetchResult$Cached = function (a) {
	return {$: 1, a: a};
};
var $author$project$FetchResult$map = F2(
	function (fn, result) {
		switch (result.$) {
			case 0:
				return $author$project$FetchResult$None;
			case 1:
				var cachedValue = result.a;
				return $author$project$FetchResult$Cached(
					fn(cachedValue));
			default:
				var fetchedValue = result.a;
				return $author$project$FetchResult$Fetched(
					fn(fetchedValue));
		}
	});
var $elm$core$Dict$values = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $author$project$Dashboard$Dashboard$pipelinesChangedFrom = F2(
	function (ps, qs) {
		var project = $elm$core$Maybe$map(
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Dict$values,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$List$concat,
					$elm$core$List$map(
						function (x) {
							return _Utils_update(
								x,
								{eQ: true});
						}))));
		return !_Utils_eq(
			project(ps),
			project(qs));
	});
var $elm$core$List$maximum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Dashboard$DashboardPreview$jobDepths = F3(
	function (calculations, depths, jobs) {
		jobDepths:
		while (true) {
			if (!jobs.b) {
				return depths;
			} else {
				var job = jobs.a;
				var otherJobs = jobs.b;
				var dependencies = A2(
					$elm$core$List$concatMap,
					function ($) {
						return $.er;
					},
					job.go);
				var values = A2(
					$elm$core$List$filterMap,
					function (jobName) {
						return A2($elm$core$Dict$get, jobName, depths);
					},
					dependencies);
				var _new = {
					dm: $elm$core$List$length(otherJobs),
					h6: A2(
						$elm$core$Maybe$withDefault,
						0,
						A2(
							$elm$core$Maybe$map,
							$elm$core$Basics$add(1),
							$elm$core$List$maximum(values)))
				};
				var neverGonnaGetBetter = A2(
					$elm$core$Maybe$withDefault,
					false,
					A2(
						$elm$core$Maybe$map,
						function (oldCalc) {
							return _Utils_cmp(oldCalc.dm, _new.dm) < 1;
						},
						A2($elm$core$Dict$get, job.bX, calculations)));
				var totalConfidence = _Utils_eq(
					$elm$core$List$length(values),
					$elm$core$List$length(dependencies));
				if (totalConfidence || neverGonnaGetBetter) {
					var $temp$calculations = A2($elm$core$Dict$remove, job.bX, calculations),
						$temp$depths = A3($elm$core$Dict$insert, job.bX, _new.h6, depths),
						$temp$jobs = otherJobs;
					calculations = $temp$calculations;
					depths = $temp$depths;
					jobs = $temp$jobs;
					continue jobDepths;
				} else {
					var $temp$calculations = A3($elm$core$Dict$insert, job.bX, _new, calculations),
						$temp$depths = depths,
						$temp$jobs = _Utils_ap(
						otherJobs,
						_List_fromArray(
							[job]));
					calculations = $temp$calculations;
					depths = $temp$depths;
					jobs = $temp$jobs;
					continue jobDepths;
				}
			}
		}
	});
var $elm$core$List$sortBy = _List_sortBy;
var $elm$core$List$sort = function (xs) {
	return A2($elm$core$List$sortBy, $elm$core$Basics$identity, xs);
};
var $elm$core$Dict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$get, key, dict);
		if (!_v0.$) {
			return true;
		} else {
			return false;
		}
	});
var $elm$core$Set$member = F2(
	function (key, _v0) {
		var dict = _v0;
		return A2($elm$core$Dict$member, key, dict);
	});
var $elm_community$list_extra$List$Extra$uniqueHelp = F4(
	function (f, existing, remaining, accumulator) {
		uniqueHelp:
		while (true) {
			if (!remaining.b) {
				return $elm$core$List$reverse(accumulator);
			} else {
				var first = remaining.a;
				var rest = remaining.b;
				var computedFirst = f(first);
				if (A2($elm$core$Set$member, computedFirst, existing)) {
					var $temp$f = f,
						$temp$existing = existing,
						$temp$remaining = rest,
						$temp$accumulator = accumulator;
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueHelp;
				} else {
					var $temp$f = f,
						$temp$existing = A2($elm$core$Set$insert, computedFirst, existing),
						$temp$remaining = rest,
						$temp$accumulator = A2($elm$core$List$cons, first, accumulator);
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$unique = function (list) {
	return A4($elm_community$list_extra$List$Extra$uniqueHelp, $elm$core$Basics$identity, $elm$core$Set$empty, list, _List_Nil);
};
var $author$project$Dashboard$DashboardPreview$groupByRank = function (jobs) {
	var depths = A3($author$project$Dashboard$DashboardPreview$jobDepths, $elm$core$Dict$empty, $elm$core$Dict$empty, jobs);
	return A2(
		$elm$core$List$map,
		function (d) {
			return A2(
				$elm$core$List$filter,
				function (j) {
					return _Utils_eq(
						A2($elm$core$Dict$get, j.bX, depths),
						$elm$core$Maybe$Just(d));
				},
				jobs);
		},
		$elm_community$list_extra$List$Extra$unique(
			$elm$core$List$sort(
				$elm$core$Dict$values(depths))));
};
var $author$project$FetchResult$value = function (result) {
	switch (result.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			var cachedValue = result.a;
			return $elm$core$Maybe$Just(cachedValue);
		default:
			var fetchedValue = result.a;
			return $elm$core$Maybe$Just(fetchedValue);
	}
};
var $author$project$FetchResult$withDefault = function (_default) {
	return A2(
		$elm$core$Basics$composeR,
		$author$project$FetchResult$value,
		$elm$core$Maybe$withDefault(_default));
};
var $author$project$Dashboard$Dashboard$precomputeJobMetadata = function (model) {
	var jobToId = function (job) {
		return {d7: job.bX, c_: job.c_, dh: job.dh};
	};
	var allJobs = $elm$core$Dict$values(
		A2($author$project$FetchResult$withDefault, $elm$core$Dict$empty, model.d8));
	var pipelineJobs = A2(
		$author$project$Dashboard$Dashboard$groupBy,
		function (j) {
			return _Utils_Tuple2(j.dh, j.c_);
		},
		allJobs);
	return _Utils_update(
		model,
		{
			R: A2(
				$elm$core$Dict$map,
				F2(
					function (_v0, jobs) {
						return A2($elm$core$List$map, jobToId, jobs);
					}),
				pipelineJobs),
			S: A2(
				$elm$core$Dict$map,
				F2(
					function (_v1, jobs) {
						return A2(
							$elm$core$List$map,
							$elm$core$List$map(jobToId),
							$author$project$Dashboard$DashboardPreview$groupByRank(jobs));
					}),
				pipelineJobs)
		});
};
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $author$project$Dashboard$Dashboard$toDashboardPipeline = F3(
	function (isStale, jobsDisabled, p) {
		return {e5: p.e5, L: p.L, d5: false, aR: false, d9: jobsDisabled, bX: p.bX, bn: p.bn, eB: p.eB, eQ: isStale, dh: p.dh};
	});
var $author$project$Dashboard$Dashboard$updatePipeline = F3(
	function (updater, pipelineId, model) {
		return _Utils_update(
			model,
			{
				he: A2(
					$elm$core$Maybe$map,
					A2(
						$elm$core$Dict$update,
						pipelineId.dh,
						$elm$core$Maybe$map(
							A2(
								$elm_community$list_extra$List$Extra$updateIf,
								function (p) {
									return _Utils_eq(p.bX, pipelineId.c_);
								},
								updater))),
					model.he)
			});
	});
var $author$project$Dashboard$Dashboard$handleCallback = F2(
	function (callback, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return A3(
			$author$project$Dashboard$RequestBuffer$handleCallback,
			callback,
			$author$project$Dashboard$Dashboard$buffers,
			function () {
				_v1$17:
				while (true) {
					switch (callback.$) {
						case 25:
							if (callback.a.$ === 1) {
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											ci: $elm$core$Maybe$Just(0)
										}),
									effects);
							} else {
								var teams = callback.a.a;
								var newTeams = $author$project$FetchResult$Fetched(teams);
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{hQ: newTeams, ci: $elm$core$Maybe$Nothing}),
									_Utils_ap(
										effects,
										A2($author$project$FetchResult$changedFrom, model.hQ, newTeams) ? _List_fromArray(
											[
												$author$project$Message$Effects$SaveCachedTeams(teams)
											]) : _List_Nil));
							}
						case 26:
							if (!callback.a.$) {
								var allJobsInEntireCluster = callback.a.a;
								var removeBuild = function (job) {
									return _Utils_update(
										job,
										{cx: $elm$core$Maybe$Nothing, el: $elm$core$Maybe$Nothing, h2: $elm$core$Maybe$Nothing});
								};
								var newJobs = $author$project$FetchResult$Fetched(
									$elm$core$Dict$fromList(
										A2(
											$elm$core$List$map,
											function (job) {
												return _Utils_Tuple2(
													_Utils_Tuple3(job.dh, job.c_, job.bX),
													job);
											},
											allJobsInEntireCluster)));
								var newModel = _Utils_update(
									model,
									{d8: newJobs, V: $elm$core$Maybe$Nothing});
								var maxJobsInCache = 1000;
								var mapToJobIds = function (jobsResult) {
									return A2(
										$author$project$FetchResult$map,
										A2(
											$elm$core$Basics$composeR,
											$elm$core$Dict$toList,
											$elm$core$List$map($elm$core$Tuple$first)),
										jobsResult);
								};
								return A2(
									$author$project$FetchResult$changedFrom,
									mapToJobIds(model.d8),
									mapToJobIds(newJobs)) ? _Utils_Tuple2(
									$author$project$Dashboard$Dashboard$precomputeJobMetadata(newModel),
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												$author$project$Message$Effects$SaveCachedJobs(
												A2(
													$elm$core$List$map,
													removeBuild,
													A2($elm$core$List$take, maxJobsInCache, allJobsInEntireCluster)))
											]))) : _Utils_Tuple2(newModel, effects);
							} else {
								var err = callback.a.a;
								if (err.$ === 3) {
									var status = err.a.hH;
									var _v3 = status.fq;
									switch (_v3) {
										case 501:
											return _Utils_Tuple2(
												_Utils_update(
													model,
													{
														d8: $author$project$FetchResult$Fetched($elm$core$Dict$empty),
														V: $elm$core$Maybe$Just(1),
														he: A2(
															$elm$core$Maybe$map,
															$elm$core$Dict$map(
																F2(
																	function (_v4, l) {
																		return A2(
																			$elm$core$List$map,
																			function (p) {
																				return _Utils_update(
																					p,
																					{d9: true});
																			},
																			l);
																	})),
															model.he)
													}),
												_Utils_ap(
													effects,
													_List_fromArray(
														[$author$project$Message$Effects$DeleteCachedJobs])));
										case 503:
											return _Utils_Tuple2(
												_Utils_update(
													model,
													{
														aL: _Utils_ap(
															model.aL,
															A2($elm$core$List$member, $author$project$Message$Effects$FetchAllJobs, model.aL) ? _List_Nil : _List_fromArray(
																[$author$project$Message$Effects$FetchAllJobs]))
													}),
												effects);
										default:
											return _Utils_Tuple2(
												_Utils_update(
													model,
													{
														V: $elm$core$Maybe$Just(0)
													}),
												effects);
									}
								} else {
									return _Utils_Tuple2(
										_Utils_update(
											model,
											{
												V: $elm$core$Maybe$Just(0)
											}),
										effects);
								}
							}
						case 27:
							if (!callback.a.$) {
								var resources = callback.a.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											ak: $elm$core$Set$fromList(
												A2(
													$elm$core$List$map,
													function (r) {
														return _Utils_Tuple2(r.dh, r.c_);
													},
													A2(
														$elm$core$List$filter,
														function ($) {
															return $.fW;
														},
														resources))),
											b9: $elm$core$Maybe$Nothing
										}),
									effects);
							} else {
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											b9: $elm$core$Maybe$Just(0)
										}),
									effects);
							}
						case 37:
							if (!callback.a.$) {
								var allPipelinesInEntireCluster = callback.a.a;
								var newPipelines = $elm$core$Maybe$Just(
									A2(
										$author$project$Dashboard$Dashboard$groupBy,
										function ($) {
											return $.dh;
										},
										A2(
											$elm$core$List$map,
											A2(
												$author$project$Dashboard$Dashboard$toDashboardPipeline,
												false,
												_Utils_eq(
													model.V,
													$elm$core$Maybe$Just(1))),
											allPipelinesInEntireCluster)));
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{he: newPipelines, b1: $elm$core$Maybe$Nothing}),
									_Utils_ap(
										effects,
										_Utils_ap(
											$elm$core$List$isEmpty(allPipelinesInEntireCluster) ? _List_fromArray(
												[
													$author$project$Message$Effects$ModifyUrl('/')
												]) : _List_Nil,
											A2($author$project$Dashboard$Dashboard$pipelinesChangedFrom, model.he, newPipelines) ? _List_fromArray(
												[
													$author$project$Message$Effects$SaveCachedPipelines(allPipelinesInEntireCluster)
												]) : _List_Nil)));
							} else {
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											b1: $elm$core$Maybe$Just(0)
										}),
									effects);
							}
						case 10:
							var teamName = callback.a;
							return _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$FetchPipelines(teamName)
										])));
						case 8:
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{K: $author$project$Dashboard$Models$NotDropping}),
								effects);
						case 28:
							if (!callback.a.$) {
								return _Utils_Tuple2(
									model,
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												$author$project$Message$Effects$NavigateTo(
												$author$project$Routes$toString(
													$author$project$Routes$Dashboard(
														{
															fB: model.fB,
															hs: model.af ? $author$project$Routes$HighDensity : $author$project$Routes$Normal(model.al)
														}))),
												$author$project$Message$Effects$FetchAllTeams,
												$author$project$Message$Effects$FetchAllResources,
												$author$project$Message$Effects$FetchAllJobs,
												$author$project$Message$Effects$FetchAllPipelines,
												$author$project$Message$Effects$DeleteCachedPipelines,
												$author$project$Message$Effects$DeleteCachedJobs,
												$author$project$Message$Effects$DeleteCachedTeams
											])));
							} else {
								break _v1$17;
							}
						case 9:
							if (!callback.b.$) {
								return _Utils_Tuple2(
									model,
									_Utils_ap(
										effects,
										_List_fromArray(
											[$author$project$Message$Effects$FetchAllPipelines])));
							} else {
								break _v1$17;
							}
						case 36:
							if (callback.a === 1) {
								if (!callback.c.$) {
									var _v5 = callback.a;
									var pipelineId = callback.b;
									return _Utils_Tuple2(
										A3(
											$author$project$Dashboard$Dashboard$updatePipeline,
											function (p) {
												return _Utils_update(
													p,
													{aR: false, eB: false});
											},
											pipelineId,
											model),
										effects);
								} else {
									var _v6 = callback.a;
									var pipelineId = callback.b;
									return _Utils_Tuple2(
										A3(
											$author$project$Dashboard$Dashboard$updatePipeline,
											function (p) {
												return _Utils_update(
													p,
													{aR: false, eB: true});
											},
											pipelineId,
											model),
										effects);
								}
							} else {
								if (!callback.c.$) {
									var _v7 = callback.a;
									var pipelineId = callback.b;
									return _Utils_Tuple2(
										A3(
											$author$project$Dashboard$Dashboard$updatePipeline,
											function (p) {
												return _Utils_update(
													p,
													{aR: false, eB: true});
											},
											pipelineId,
											model),
										effects);
								} else {
									var _v8 = callback.a;
									var pipelineId = callback.b;
									return _Utils_Tuple2(
										A3(
											$author$project$Dashboard$Dashboard$updatePipeline,
											function (p) {
												return _Utils_update(
													p,
													{aR: false, eB: false});
											},
											pipelineId,
											model),
										effects);
								}
							}
						case 38:
							if ((callback.a.$ === 47) && (!callback.b.$)) {
								var _v9 = callback.a;
								var viewport = callback.b.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{hq: viewport.ia.$8, a5: viewport.ia.be, a6: viewport.ia.e$}),
									effects);
							} else {
								break _v1$17;
							}
						default:
							break _v1$17;
					}
				}
				return _Utils_Tuple2(model, effects);
			}());
	});
var $krisajenkins$remotedata$RemoteData$Failure = function (a) {
	return {$: 2, a: a};
};
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Job$Job$jobBuildsPerPage = 100;
var $author$project$Job$Job$permalink = function (builds) {
	var _v0 = $elm$core$List$head(builds);
	if (_v0.$ === 1) {
		return {
			dH: $author$project$Concourse$Pagination$Since(0),
			ec: $author$project$Job$Job$jobBuildsPerPage
		};
	} else {
		var build = _v0.a;
		return {
			dH: $author$project$Concourse$Pagination$Since(build.L + 1),
			ec: $elm$core$List$length(builds)
		};
	}
};
var $author$project$Job$Job$paginatedMap = F2(
	function (promoter, pagA) {
		return {
			fw: A2($elm$core$List$map, promoter, pagA.fw),
			g6: pagA.g6
		};
	});
var $author$project$Job$Job$existingBuild = F2(
	function (build, buildWithResources) {
		return _Utils_eq(build, buildWithResources.ab);
	});
var $author$project$Job$Job$setResourcesToOld = F2(
	function (existingBuildWithResource, newBwr) {
		if (existingBuildWithResource.$ === 1) {
			return newBwr;
		} else {
			var buildWithResources = existingBuildWithResource.a;
			return _Utils_update(
				newBwr,
				{eH: buildWithResources.eH});
		}
	});
var $author$project$Job$Job$promoteBuild = F2(
	function (model, build) {
		var newBwr = {ab: build, eH: $elm$core$Maybe$Nothing};
		var existingBuildWithResource = $elm$core$List$head(
			A2(
				$elm$core$List$filter,
				$author$project$Job$Job$existingBuild(build),
				model.O.fw));
		return A2($author$project$Job$Job$setResourcesToOld, existingBuildWithResource, newBwr);
	});
var $author$project$Job$Job$setExistingResources = F2(
	function (paginatedBuilds, model) {
		return A2(
			$author$project$Job$Job$paginatedMap,
			$author$project$Job$Job$promoteBuild(model),
			paginatedBuilds);
	});
var $author$project$Message$Effects$FetchBuildResources = function (a) {
	return {$: 7, a: a};
};
var $author$project$Job$Job$isRunning = function (build) {
	return $author$project$Concourse$BuildStatus$isRunning(build.hH);
};
var $author$project$Job$Job$updateResourcesIfNeeded = function (bwr) {
	var _v0 = _Utils_Tuple2(
		bwr.eH,
		$author$project$Job$Job$isRunning(bwr.ab));
	if ((!_v0.a.$) && (!_v0.b)) {
		return $elm$core$Maybe$Nothing;
	} else {
		return $elm$core$Maybe$Just(
			$author$project$Message$Effects$FetchBuildResources(bwr.ab.L));
	}
};
var $author$project$Job$Job$handleJobBuildsFetched = F2(
	function (paginatedBuilds, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var newPage = $author$project$Job$Job$permalink(paginatedBuilds.fw);
		var newBWRs = A2($author$project$Job$Job$setExistingResources, paginatedBuilds, model);
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					O: newBWRs,
					aJ: $elm$core$Maybe$Just(newPage)
				}),
			_Utils_ap(
				effects,
				A2($elm$core$List$filterMap, $author$project$Job$Job$updateResourcesIfNeeded, newBWRs.fw)));
	});
var $author$project$Job$Job$redirectToLoginIfNecessary = function (err) {
	if (err.$ === 3) {
		var status = err.a.hH;
		return (status.fq === 401) ? _List_fromArray(
			[$author$project$Message$Effects$RedirectToLogin]) : _List_Nil;
	} else {
		return _List_Nil;
	}
};
var $author$project$Job$Job$handleCallback = F2(
	function (callback, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$8:
		while (true) {
			switch (callback.$) {
				case 3:
					if (!callback.a.$) {
						var build = callback.a.a;
						return _Utils_Tuple2(
							model,
							function () {
								var _v2 = build.gF;
								if (_v2.$ === 1) {
									return effects;
								} else {
									var job = _v2.a;
									return _Utils_ap(
										effects,
										_List_fromArray(
											[
												$author$project$Message$Effects$NavigateTo(
												$author$project$Routes$toString(
													$author$project$Routes$Build(
														{
															y: $author$project$Routes$HighlightNothing,
															L: {ff: build.bX, d7: job.d7, c_: job.c_, dh: job.dh}
														})))
											]));
								}
							}());
					} else {
						break _v1$8;
					}
				case 4:
					if (!callback.a.$) {
						var builds = callback.a.a;
						return A2(
							$author$project$Job$Job$handleJobBuildsFetched,
							builds,
							_Utils_Tuple2(model, effects));
					} else {
						break _v1$8;
					}
				case 5:
					if (!callback.a.$) {
						var job = callback.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									gF: $krisajenkins$remotedata$RemoteData$Success(job)
								}),
							effects);
					} else {
						var err = callback.a.a;
						if (err.$ === 3) {
							var status = err.a.hH;
							return (status.fq === 404) ? _Utils_Tuple2(
								_Utils_update(
									model,
									{
										gF: $krisajenkins$remotedata$RemoteData$Failure(err)
									}),
								effects) : _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									$author$project$Job$Job$redirectToLoginIfNecessary(err)));
						} else {
							return _Utils_Tuple2(model, effects);
						}
					}
				case 13:
					if (!callback.a.$) {
						var _v4 = callback.a.a;
						var id = _v4.a;
						var buildResources = _v4.b;
						var _v5 = model.O.fw;
						if (!_v5.b) {
							return _Utils_Tuple2(model, effects);
						} else {
							var anyList = _v5;
							var transformer = function (bwr) {
								return _Utils_eq(bwr.ab.L, id) ? _Utils_update(
									bwr,
									{
										eH: $elm$core$Maybe$Just(buildResources)
									}) : bwr;
							};
							var bwrs = model.O;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										O: _Utils_update(
											bwrs,
											{
												fw: A2($elm$core$List$map, transformer, anyList)
											})
									}),
								effects);
						}
					} else {
						return _Utils_Tuple2(model, effects);
					}
				case 17:
					if (!callback.a.$) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{cZ: false}),
							effects);
					} else {
						break _v1$8;
					}
				case 1:
					var now = callback.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{en: now}),
						effects);
				default:
					break _v1$8;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Message$Effects$FetchJobs = function (a) {
	return {$: 1, a: a};
};
var $author$project$Message$Effects$FetchResources = function (a) {
	return {$: 6, a: a};
};
var $krisajenkins$remotedata$RemoteData$Loading = {$: 1};
var $krisajenkins$remotedata$RemoteData$map = F2(
	function (f, data) {
		switch (data.$) {
			case 3:
				var value = data.a;
				return $krisajenkins$remotedata$RemoteData$Success(
					f(value));
			case 1:
				return $krisajenkins$remotedata$RemoteData$Loading;
			case 0:
				return $krisajenkins$remotedata$RemoteData$NotAsked;
			default:
				var error = data.a;
				return $krisajenkins$remotedata$RemoteData$Failure(error);
		}
	});
var $author$project$Message$Effects$RenderPipeline = F2(
	function (a, b) {
		return {$: 33, a: a, b: b};
	});
var $krisajenkins$remotedata$RemoteData$withDefault = F2(
	function (_default, data) {
		if (data.$ === 3) {
			var x = data.a;
			return x;
		} else {
			return _default;
		}
	});
var $krisajenkins$remotedata$RemoteData$toMaybe = A2(
	$elm$core$Basics$composeR,
	$krisajenkins$remotedata$RemoteData$map($elm$core$Maybe$Just),
	$krisajenkins$remotedata$RemoteData$withDefault($elm$core$Maybe$Nothing));
var $author$project$Pipeline$Pipeline$activeGroups = function (model) {
	var _v0 = _Utils_Tuple2(
		model.D,
		A2(
			$elm$core$Maybe$andThen,
			A2(
				$elm$core$Basics$composeL,
				$elm$core$List$head,
				function ($) {
					return $.bP;
				}),
			$krisajenkins$remotedata$RemoteData$toMaybe(model.az)));
	if ((!_v0.a.b) && (!_v0.b.$)) {
		var firstGroup = _v0.b.a;
		return _List_fromArray(
			[firstGroup.bX]);
	} else {
		var groups = _v0.a;
		return groups;
	}
};
var $author$project$Pipeline$Pipeline$expandJsonList = function (flatList) {
	var result = A2(
		$elm$json$Json$Decode$decodeValue,
		$elm$json$Json$Decode$list($elm$json$Json$Decode$value),
		flatList);
	if (!result.$) {
		var res = result.a;
		return res;
	} else {
		return _List_Nil;
	}
};
var $author$project$Pipeline$Pipeline$anyIntersect = F2(
	function (list1, list2) {
		anyIntersect:
		while (true) {
			if (!list1.b) {
				return false;
			} else {
				var first = list1.a;
				var rest = list1.b;
				if (A2($elm$core$List$member, first, list2)) {
					return true;
				} else {
					var $temp$list1 = rest,
						$temp$list2 = list2;
					list1 = $temp$list1;
					list2 = $temp$list2;
					continue anyIntersect;
				}
			}
		}
	});
var $author$project$Pipeline$Pipeline$jobAppearsInGroups = F2(
	function (groupNames, jobJson) {
		var concourseJob = A2($elm$json$Json$Decode$decodeValue, $author$project$Concourse$decodeJob, jobJson);
		if (!concourseJob.$) {
			var cj = concourseJob.a;
			return A2($author$project$Pipeline$Pipeline$anyIntersect, cj.bP, groupNames);
		} else {
			return false;
		}
	});
var $author$project$Pipeline$Pipeline$filterJobs = F2(
	function (model, value) {
		return A2(
			$elm$json$Json$Encode$list,
			$elm$core$Basics$identity,
			A2(
				$elm$core$List$filter,
				$author$project$Pipeline$Pipeline$jobAppearsInGroups(
					$author$project$Pipeline$Pipeline$activeGroups(model)),
				$author$project$Pipeline$Pipeline$expandJsonList(value)));
	});
var $author$project$Pipeline$Pipeline$renderIfNeeded = function (_v0) {
	var model = _v0.a;
	var effects = _v0.b;
	var _v1 = _Utils_Tuple2(model.fY, model.bK);
	if ((!_v1.a.$) && (!_v1.b.$)) {
		var fetchedResources = _v1.a.a;
		var fetchedJobs = _v1.b.a;
		var filteredFetchedJobs = $elm$core$List$isEmpty(
			$author$project$Pipeline$Pipeline$activeGroups(model)) ? fetchedJobs : A2($author$project$Pipeline$Pipeline$filterJobs, model, fetchedJobs);
		var _v2 = _Utils_Tuple2(model.b6, model.b5);
		if ((!_v2.a.$) && (!_v2.b.$)) {
			var renderedResources = _v2.a.a;
			var renderedJobs = _v2.b.a;
			return ((!_Utils_eq(
				$author$project$Pipeline$Pipeline$expandJsonList(renderedJobs),
				$author$project$Pipeline$Pipeline$expandJsonList(filteredFetchedJobs))) || (!_Utils_eq(
				$author$project$Pipeline$Pipeline$expandJsonList(renderedResources),
				$author$project$Pipeline$Pipeline$expandJsonList(fetchedResources)))) ? _Utils_Tuple2(
				_Utils_update(
					model,
					{
						b5: $elm$core$Maybe$Just(filteredFetchedJobs),
						b6: $elm$core$Maybe$Just(fetchedResources)
					}),
				_Utils_ap(
					effects,
					_List_fromArray(
						[
							A2($author$project$Message$Effects$RenderPipeline, filteredFetchedJobs, fetchedResources)
						]))) : _Utils_Tuple2(model, effects);
		} else {
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						b5: $elm$core$Maybe$Just(filteredFetchedJobs),
						b6: $elm$core$Maybe$Just(fetchedResources)
					}),
				_Utils_ap(
					effects,
					_List_fromArray(
						[
							A2($author$project$Message$Effects$RenderPipeline, filteredFetchedJobs, fetchedResources)
						])));
		}
	} else {
		return _Utils_Tuple2(model, effects);
	}
};
var $author$project$Pipeline$Pipeline$handleCallback = F2(
	function (callback, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var redirectToLoginIfUnauthenticated = function (status) {
			return (status.fq === 401) ? _List_fromArray(
				[$author$project$Message$Effects$RedirectToLogin]) : _List_Nil;
		};
		_v1$11:
		while (true) {
			switch (callback.$) {
				case 7:
					if (!callback.a.$) {
						var pipeline = callback.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									az: $krisajenkins$remotedata$RemoteData$Success(pipeline)
								}),
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$FetchJobs(model.hd),
										$author$project$Message$Effects$FetchResources(model.hd)
									])));
					} else {
						var err = callback.a.a;
						if (err.$ === 3) {
							var status = err.a.hH;
							return (status.fq === 404) ? _Utils_Tuple2(
								_Utils_update(
									model,
									{
										az: $krisajenkins$remotedata$RemoteData$Failure(err)
									}),
								effects) : _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									redirectToLoginIfUnauthenticated(status)));
						} else {
							return $author$project$Pipeline$Pipeline$renderIfNeeded(
								_Utils_Tuple2(
									_Utils_update(
										model,
										{P: true}),
									effects));
						}
					}
				case 9:
					if (!callback.b.$) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									d5: false,
									az: A2(
										$krisajenkins$remotedata$RemoteData$map,
										function (p) {
											return _Utils_update(
												p,
												{bn: !p.bn});
										},
										model.az)
								}),
							effects);
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{d5: false}),
							effects);
					}
				case 6:
					if (!callback.a.$) {
						var fetchedJobs = callback.a.a;
						return $author$project$Pipeline$Pipeline$renderIfNeeded(
							_Utils_Tuple2(
								_Utils_update(
									model,
									{
										P: false,
										bK: $elm$core$Maybe$Just(fetchedJobs)
									}),
								effects));
					} else {
						var err = callback.a.a;
						if (err.$ === 3) {
							var status = err.a.hH;
							return _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									redirectToLoginIfUnauthenticated(status)));
						} else {
							return $author$project$Pipeline$Pipeline$renderIfNeeded(
								_Utils_Tuple2(
									_Utils_update(
										model,
										{P: true, bK: $elm$core$Maybe$Nothing}),
									effects));
						}
					}
				case 12:
					if (!callback.a.$) {
						var fetchedResources = callback.a.a;
						return $author$project$Pipeline$Pipeline$renderIfNeeded(
							_Utils_Tuple2(
								_Utils_update(
									model,
									{
										P: false,
										fY: $elm$core$Maybe$Just(fetchedResources)
									}),
								effects));
					} else {
						var err = callback.a.a;
						if (err.$ === 3) {
							var status = err.a.hH;
							return _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									redirectToLoginIfUnauthenticated(status)));
						} else {
							return $author$project$Pipeline$Pipeline$renderIfNeeded(
								_Utils_Tuple2(
									_Utils_update(
										model,
										{P: true, fY: $elm$core$Maybe$Nothing}),
									effects));
						}
					}
				case 16:
					if (!callback.a.$) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{P: false}),
							effects);
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{P: true}),
							effects);
					}
				case 37:
					if (callback.a.$ === 1) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{P: true}),
							effects);
					} else {
						break _v1$11;
					}
				default:
					break _v1$11;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Resource$Models$Changing = 1;
var $author$project$Resource$Models$CurrentlyChecking = function (a) {
	return {$: 2, a: a};
};
var $author$project$Resource$Models$Disabled = 2;
var $author$project$Resource$Models$Enabled = 0;
var $author$project$Resource$Models$FailingToCheck = {$: 3};
var $author$project$Resource$Models$NotFound = 1;
var $author$project$Pinned$PinnedDynamicallyTo = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Message$Effects$RenderSvgIcon = function (a) {
	return {$: 58, a: a};
};
var $author$project$Message$Effects$SetPinComment = F2(
	function (a, b) {
		return {$: 42, a: a, b: b};
	});
var $author$project$Concourse$Pagination$directionEqual = F2(
	function (d1, d2) {
		var _v0 = _Utils_Tuple2(d1, d2);
		_v0$4:
		while (true) {
			switch (_v0.a.$) {
				case 0:
					if (!_v0.b.$) {
						var p1 = _v0.a.a;
						var p2 = _v0.b.a;
						return _Utils_eq(p1, p2);
					} else {
						break _v0$4;
					}
				case 1:
					if (_v0.b.$ === 1) {
						var p1 = _v0.a.a;
						var p2 = _v0.b.a;
						return _Utils_eq(p1, p2);
					} else {
						break _v0$4;
					}
				case 2:
					if (_v0.b.$ === 2) {
						var p1 = _v0.a.a;
						var p2 = _v0.b.a;
						return _Utils_eq(p1, p2);
					} else {
						break _v0$4;
					}
				default:
					if (_v0.b.$ === 3) {
						var p1 = _v0.a.a;
						var p2 = _v0.b.a;
						return _Utils_eq(p1, p2);
					} else {
						break _v0$4;
					}
			}
		}
		return false;
	});
var $author$project$Concourse$Pagination$equal = F2(
	function (one, two) {
		return A2($author$project$Concourse$Pagination$directionEqual, one.dH, two.dH);
	});
var $ryannhg$date_format$DateFormat$AmPmUppercase = {$: 22};
var $ryannhg$date_format$DateFormat$amPmUppercase = $ryannhg$date_format$DateFormat$AmPmUppercase;
var $ryannhg$date_format$DateFormat$DayOfMonthNumber = {$: 5};
var $ryannhg$date_format$DateFormat$dayOfMonthNumber = $ryannhg$date_format$DateFormat$DayOfMonthNumber;
var $ryannhg$date_format$DateFormat$Language$Language = F6(
	function (toMonthName, toMonthAbbreviation, toWeekdayName, toWeekdayAbbreviation, toAmPm, toOrdinalSuffix) {
		return {hY: toAmPm, hZ: toMonthAbbreviation, h_: toMonthName, a4: toOrdinalSuffix, h$: toWeekdayAbbreviation, h0: toWeekdayName};
	});
var $ryannhg$date_format$DateFormat$Language$toEnglishAmPm = function (hour) {
	return (hour > 11) ? 'pm' : 'am';
};
var $ryannhg$date_format$DateFormat$Language$toEnglishMonthName = function (month) {
	switch (month) {
		case 0:
			return 'January';
		case 1:
			return 'February';
		case 2:
			return 'March';
		case 3:
			return 'April';
		case 4:
			return 'May';
		case 5:
			return 'June';
		case 6:
			return 'July';
		case 7:
			return 'August';
		case 8:
			return 'September';
		case 9:
			return 'October';
		case 10:
			return 'November';
		default:
			return 'December';
	}
};
var $elm$core$Basics$modBy = _Basics_modBy;
var $ryannhg$date_format$DateFormat$Language$toEnglishSuffix = function (num) {
	var _v0 = A2($elm$core$Basics$modBy, 100, num);
	switch (_v0) {
		case 11:
			return 'th';
		case 12:
			return 'th';
		case 13:
			return 'th';
		default:
			var _v1 = A2($elm$core$Basics$modBy, 10, num);
			switch (_v1) {
				case 1:
					return 'st';
				case 2:
					return 'nd';
				case 3:
					return 'rd';
				default:
					return 'th';
			}
	}
};
var $ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName = function (weekday) {
	switch (weekday) {
		case 0:
			return 'Monday';
		case 1:
			return 'Tuesday';
		case 2:
			return 'Wednesday';
		case 3:
			return 'Thursday';
		case 4:
			return 'Friday';
		case 5:
			return 'Saturday';
		default:
			return 'Sunday';
	}
};
var $ryannhg$date_format$DateFormat$Language$english = A6(
	$ryannhg$date_format$DateFormat$Language$Language,
	$ryannhg$date_format$DateFormat$Language$toEnglishMonthName,
	A2(
		$elm$core$Basics$composeR,
		$ryannhg$date_format$DateFormat$Language$toEnglishMonthName,
		$elm$core$String$left(3)),
	$ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName,
	A2(
		$elm$core$Basics$composeR,
		$ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName,
		$elm$core$String$left(3)),
	$ryannhg$date_format$DateFormat$Language$toEnglishAmPm,
	$ryannhg$date_format$DateFormat$Language$toEnglishSuffix);
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.hD, posixMinutes) < 0) {
					return posixMinutes + era.f;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$time$Time$toHour = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			24,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60));
	});
var $ryannhg$date_format$DateFormat$amPm = F3(
	function (language, zone, posix) {
		return language.hY(
			A2($elm$time$Time$toHour, zone, posix));
	});
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		dB: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		ei: month,
		e1: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).dB;
	});
var $ryannhg$date_format$DateFormat$dayOfMonth = $elm$time$Time$toDay;
var $elm$time$Time$Sun = 6;
var $elm$time$Time$Fri = 4;
var $elm$time$Time$Mon = 0;
var $elm$time$Time$Sat = 5;
var $elm$time$Time$Thu = 3;
var $elm$time$Time$Tue = 1;
var $elm$time$Time$Wed = 2;
var $ryannhg$date_format$DateFormat$days = _List_fromArray(
	[6, 0, 1, 2, 3, 4, 5]);
var $elm$time$Time$toWeekday = F2(
	function (zone, time) {
		var _v0 = A2(
			$elm$core$Basics$modBy,
			7,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60 * 24));
		switch (_v0) {
			case 0:
				return 3;
			case 1:
				return 4;
			case 2:
				return 5;
			case 3:
				return 6;
			case 4:
				return 0;
			case 5:
				return 1;
			default:
				return 2;
		}
	});
var $ryannhg$date_format$DateFormat$dayOfWeek = F2(
	function (zone, posix) {
		return function (_v1) {
			var i = _v1.a;
			return i;
		}(
			A2(
				$elm$core$Maybe$withDefault,
				_Utils_Tuple2(0, 6),
				$elm$core$List$head(
					A2(
						$elm$core$List$filter,
						function (_v0) {
							var day = _v0.b;
							return _Utils_eq(
								day,
								A2($elm$time$Time$toWeekday, zone, posix));
						},
						A2(
							$elm$core$List$indexedMap,
							F2(
								function (i, day) {
									return _Utils_Tuple2(i, day);
								}),
							$ryannhg$date_format$DateFormat$days)))));
	});
var $ryannhg$date_format$DateFormat$isLeapYear = function (year_) {
	return (!(!A2($elm$core$Basics$modBy, 4, year_))) ? false : ((!(!A2($elm$core$Basics$modBy, 100, year_))) ? true : ((!(!A2($elm$core$Basics$modBy, 400, year_))) ? false : true));
};
var $ryannhg$date_format$DateFormat$daysInMonth = F2(
	function (year_, month) {
		switch (month) {
			case 0:
				return 31;
			case 1:
				return $ryannhg$date_format$DateFormat$isLeapYear(year_) ? 29 : 28;
			case 2:
				return 31;
			case 3:
				return 30;
			case 4:
				return 31;
			case 5:
				return 30;
			case 6:
				return 31;
			case 7:
				return 31;
			case 8:
				return 30;
			case 9:
				return 31;
			case 10:
				return 30;
			default:
				return 31;
		}
	});
var $elm$time$Time$Jan = 0;
var $elm$time$Time$Apr = 3;
var $elm$time$Time$Aug = 7;
var $elm$time$Time$Dec = 11;
var $elm$time$Time$Feb = 1;
var $elm$time$Time$Jul = 6;
var $elm$time$Time$Jun = 5;
var $elm$time$Time$Mar = 2;
var $elm$time$Time$May = 4;
var $elm$time$Time$Nov = 10;
var $elm$time$Time$Oct = 9;
var $elm$time$Time$Sep = 8;
var $ryannhg$date_format$DateFormat$months = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).ei;
		switch (_v0) {
			case 1:
				return 0;
			case 2:
				return 1;
			case 3:
				return 2;
			case 4:
				return 3;
			case 5:
				return 4;
			case 6:
				return 5;
			case 7:
				return 6;
			case 8:
				return 7;
			case 9:
				return 8;
			case 10:
				return 9;
			case 11:
				return 10;
			default:
				return 11;
		}
	});
var $ryannhg$date_format$DateFormat$monthPair = F2(
	function (zone, posix) {
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(0, 0),
			$elm$core$List$head(
				A2(
					$elm$core$List$filter,
					function (_v0) {
						var i = _v0.a;
						var m = _v0.b;
						return _Utils_eq(
							m,
							A2($elm$time$Time$toMonth, zone, posix));
					},
					A2(
						$elm$core$List$indexedMap,
						F2(
							function (a, b) {
								return _Utils_Tuple2(a, b);
							}),
						$ryannhg$date_format$DateFormat$months))));
	});
var $ryannhg$date_format$DateFormat$monthNumber_ = F2(
	function (zone, posix) {
		return 1 + function (_v0) {
			var i = _v0.a;
			var m = _v0.b;
			return i;
		}(
			A2($ryannhg$date_format$DateFormat$monthPair, zone, posix));
	});
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).e1;
	});
var $ryannhg$date_format$DateFormat$dayOfYear = F2(
	function (zone, posix) {
		var monthsBeforeThisOne = A2(
			$elm$core$List$take,
			A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix) - 1,
			$ryannhg$date_format$DateFormat$months);
		var daysBeforeThisMonth = $elm$core$List$sum(
			A2(
				$elm$core$List$map,
				$ryannhg$date_format$DateFormat$daysInMonth(
					A2($elm$time$Time$toYear, zone, posix)),
				monthsBeforeThisOne));
		return daysBeforeThisMonth + A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix);
	});
var $ryannhg$date_format$DateFormat$quarter = F2(
	function (zone, posix) {
		return (A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix) / 4) | 0;
	});
var $elm$core$String$right = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(
			$elm$core$String$slice,
			-n,
			$elm$core$String$length(string),
			string);
	});
var $ryannhg$date_format$DateFormat$toFixedLength = F2(
	function (totalChars, num) {
		var numStr = $elm$core$String$fromInt(num);
		var numZerosNeeded = totalChars - $elm$core$String$length(numStr);
		var zeros = A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				function (_v0) {
					return '0';
				},
				A2($elm$core$List$range, 1, numZerosNeeded)));
		return _Utils_ap(zeros, numStr);
	});
var $elm$time$Time$toMillis = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			1000,
			$elm$time$Time$posixToMillis(time));
	});
var $elm$time$Time$toMinute = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2($elm$time$Time$toAdjustedMinutes, zone, time));
	});
var $ryannhg$date_format$DateFormat$toNonMilitary = function (num) {
	return (!num) ? 12 : ((num <= 12) ? num : (num - 12));
};
var $elm$time$Time$toSecond = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				1000));
	});
var $elm$core$String$toUpper = _String_toUpper;
var $elm$core$Basics$round = _Basics_round;
var $ryannhg$date_format$DateFormat$millisecondsPerYear = $elm$core$Basics$round((((1000 * 60) * 60) * 24) * 365.25);
var $ryannhg$date_format$DateFormat$firstDayOfYear = F2(
	function (zone, time) {
		return $elm$time$Time$millisToPosix(
			$ryannhg$date_format$DateFormat$millisecondsPerYear * A2($elm$time$Time$toYear, zone, time));
	});
var $ryannhg$date_format$DateFormat$weekOfYear = F2(
	function (zone, posix) {
		var firstDay = A2($ryannhg$date_format$DateFormat$firstDayOfYear, zone, posix);
		var firstDayOffset = A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, firstDay);
		var daysSoFar = A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix);
		return (((daysSoFar + firstDayOffset) / 7) | 0) + 1;
	});
var $ryannhg$date_format$DateFormat$year = F2(
	function (zone, time) {
		return $elm$core$String$fromInt(
			A2($elm$time$Time$toYear, zone, time));
	});
var $ryannhg$date_format$DateFormat$piece = F4(
	function (language, zone, posix, token) {
		switch (token.$) {
			case 0:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 1:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.a4(num));
				}(
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 2:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 3:
				return language.hZ(
					A2($elm$time$Time$toMonth, zone, posix));
			case 4:
				return language.h_(
					A2($elm$time$Time$toMonth, zone, posix));
			case 17:
				return $elm$core$String$fromInt(
					1 + A2($ryannhg$date_format$DateFormat$quarter, zone, posix));
			case 18:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.a4(num));
				}(
					1 + A2($ryannhg$date_format$DateFormat$quarter, zone, posix));
			case 5:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 6:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.a4(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 7:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 8:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 9:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.a4(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 10:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					3,
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 11:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, posix));
			case 12:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.a4(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, posix));
			case 13:
				return language.h$(
					A2($elm$time$Time$toWeekday, zone, posix));
			case 14:
				return language.h0(
					A2($elm$time$Time$toWeekday, zone, posix));
			case 19:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 20:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.a4(num));
				}(
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 21:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 15:
				return A2(
					$elm$core$String$right,
					2,
					A2($ryannhg$date_format$DateFormat$year, zone, posix));
			case 16:
				return A2($ryannhg$date_format$DateFormat$year, zone, posix);
			case 22:
				return $elm$core$String$toUpper(
					A3($ryannhg$date_format$DateFormat$amPm, language, zone, posix));
			case 23:
				return $elm$core$String$toLower(
					A3($ryannhg$date_format$DateFormat$amPm, language, zone, posix));
			case 24:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toHour, zone, posix));
			case 25:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toHour, zone, posix));
			case 26:
				return $elm$core$String$fromInt(
					$ryannhg$date_format$DateFormat$toNonMilitary(
						A2($elm$time$Time$toHour, zone, posix)));
			case 27:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					$ryannhg$date_format$DateFormat$toNonMilitary(
						A2($elm$time$Time$toHour, zone, posix)));
			case 28:
				return $elm$core$String$fromInt(
					1 + A2($elm$time$Time$toHour, zone, posix));
			case 29:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					1 + A2($elm$time$Time$toHour, zone, posix));
			case 30:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMinute, zone, posix));
			case 31:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toMinute, zone, posix));
			case 32:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toSecond, zone, posix));
			case 33:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toSecond, zone, posix));
			case 34:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMillis, zone, posix));
			case 35:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					3,
					A2($elm$time$Time$toMillis, zone, posix));
			default:
				var string = token.a;
				return string;
		}
	});
var $ryannhg$date_format$DateFormat$formatWithLanguage = F4(
	function (language, tokens, zone, time) {
		return A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				A3($ryannhg$date_format$DateFormat$piece, language, zone, time),
				tokens));
	});
var $ryannhg$date_format$DateFormat$format = $ryannhg$date_format$DateFormat$formatWithLanguage($ryannhg$date_format$DateFormat$Language$english);
var $ryannhg$date_format$DateFormat$HourFixed = {$: 27};
var $ryannhg$date_format$DateFormat$hourFixed = $ryannhg$date_format$DateFormat$HourFixed;
var $ryannhg$date_format$DateFormat$MinuteFixed = {$: 31};
var $ryannhg$date_format$DateFormat$minuteFixed = $ryannhg$date_format$DateFormat$MinuteFixed;
var $ryannhg$date_format$DateFormat$MonthNameAbbreviated = {$: 3};
var $ryannhg$date_format$DateFormat$monthNameAbbreviated = $ryannhg$date_format$DateFormat$MonthNameAbbreviated;
var $ryannhg$date_format$DateFormat$SecondFixed = {$: 33};
var $ryannhg$date_format$DateFormat$secondFixed = $ryannhg$date_format$DateFormat$SecondFixed;
var $ryannhg$date_format$DateFormat$Text = function (a) {
	return {$: 36, a: a};
};
var $ryannhg$date_format$DateFormat$text = $ryannhg$date_format$DateFormat$Text;
var $ryannhg$date_format$DateFormat$YearNumber = {$: 16};
var $ryannhg$date_format$DateFormat$yearNumber = $ryannhg$date_format$DateFormat$YearNumber;
var $author$project$Resource$Resource$formatDate = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$monthNameAbbreviated,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$dayOfMonthNumber,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$yearNumber,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$hourFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$minuteFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$secondFixed,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$amPmUppercase
		]));
var $author$project$Resource$Resource$permalink = function (versionedResources) {
	var _v0 = $elm$core$List$head(versionedResources);
	if (_v0.$ === 1) {
		return {
			dH: $author$project$Concourse$Pagination$Since(0),
			ec: 100
		};
	} else {
		var version = _v0.a;
		return {
			dH: $author$project$Concourse$Pagination$From(version.L),
			ec: $elm$core$List$length(versionedResources)
		};
	}
};
var $author$project$Pinned$quitUnpinning = function (resourcePinState) {
	if (resourcePinState.$ === 3) {
		var c = resourcePinState.a;
		var v = resourcePinState.b;
		return A2($author$project$Pinned$PinnedDynamicallyTo, c, v);
	} else {
		var x = resourcePinState;
		return x;
	}
};
var $author$project$Pinned$PinnedStaticallyTo = function (a) {
	return {$: 4, a: a};
};
var $author$project$Pinned$UnpinningFrom = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $author$project$Resource$Resource$updatePinnedVersion = F2(
	function (resource, model) {
		var _v0 = _Utils_Tuple2(resource.hc, resource.hb);
		if (_v0.a.$ === 1) {
			var _v1 = _v0.a;
			var _v2 = model.hc;
			if (_v2.$ === 1) {
				return model;
			} else {
				return _Utils_update(
					model,
					{hc: $author$project$Pinned$NotPinned});
			}
		} else {
			if (_v0.b) {
				var v = _v0.a.a;
				return _Utils_update(
					model,
					{
						hc: $author$project$Pinned$PinnedStaticallyTo(v)
					});
			} else {
				var newVersion = _v0.a.a;
				var pristineComment = A2($elm$core$Maybe$withDefault, '', resource.ha);
				var _v3 = model.hc;
				switch (_v3.$) {
					case 3:
						var c = _v3.a;
						return _Utils_update(
							model,
							{
								hc: A2($author$project$Pinned$UnpinningFrom, c, newVersion)
							});
					case 2:
						var comment = _v3.a.dx;
						return _Utils_update(
							model,
							{
								hc: A2(
									$author$project$Pinned$PinnedDynamicallyTo,
									{dx: comment, ex: pristineComment},
									newVersion)
							});
					case 5:
						var v = _v3.b;
						return _Utils_eq(v, newVersion) ? model : _Utils_update(
							model,
							{
								hc: A2(
									$author$project$Pinned$PinnedDynamicallyTo,
									{dx: pristineComment, ex: pristineComment},
									newVersion)
							});
					default:
						return _Utils_update(
							model,
							{
								hc: A2(
									$author$project$Pinned$PinnedDynamicallyTo,
									{dx: pristineComment, ex: pristineComment},
									newVersion)
							});
				}
			}
		}
	});
var $author$project$Resource$Resource$updateVersion = F3(
	function (versionID, updateFunc, model) {
		var resourceVersions = model.r;
		var newVersionsContent = A3(
			$elm_community$list_extra$List$Extra$updateIf,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.L;
				},
				$elm$core$Basics$eq(versionID)),
			updateFunc,
			model.r.fw);
		return _Utils_update(
			model,
			{
				r: _Utils_update(
					resourceVersions,
					{fw: newVersionsContent})
			});
	});
var $author$project$Login$Login$userDisplayName = function (user) {
	return A2(
		$elm$core$Maybe$withDefault,
		user.L,
		$elm$core$List$head(
			A2(
				$elm$core$List$filter,
				A2($elm$core$Basics$composeL, $elm$core$Basics$not, $elm$core$String$isEmpty),
				_List_fromArray(
					[user.h5, user.bX, user.fI]))));
};
var $author$project$Resource$Resource$handleCallback = F3(
	function (callback, session, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$13:
		while (true) {
			switch (callback.$) {
				case 14:
					if (!callback.a.$) {
						var resource = callback.a.a;
						return _Utils_Tuple2(
							A2(
								$author$project$Resource$Resource$updatePinnedVersion,
								resource,
								_Utils_update(
									model,
									{
										dv: resource.dv,
										fm: resource.fm,
										J: resource.fW ? $author$project$Resource$Models$FailingToCheck : $author$project$Resource$Models$CheckingSuccessfully,
										gh: resource.gh,
										gI: resource.gI,
										bk: $elm$core$Result$Ok(0),
										hj: {c_: resource.c_, hk: resource.bX, dh: resource.dh}
									})),
							_Utils_ap(
								effects,
								_Utils_ap(
									function () {
										var _v2 = resource.gh;
										if (!_v2.$) {
											var icon = _v2.a;
											return _List_fromArray(
												[
													$author$project$Message$Effects$RenderSvgIcon(icon)
												]);
										} else {
											return _List_Nil;
										}
									}(),
									_List_fromArray(
										[
											$author$project$Message$Effects$SyncTextareaHeight($author$project$Message$Message$ResourceCommentTextarea)
										]))));
					} else {
						var err = callback.a.a;
						if (err.$ === 3) {
							var status = err.a.hH;
							return (status.fq === 401) ? _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									_List_fromArray(
										[$author$project$Message$Effects$RedirectToLogin]))) : ((status.fq === 404) ? _Utils_Tuple2(
								_Utils_update(
									model,
									{
										bk: $elm$core$Result$Err(1)
									}),
								effects) : _Utils_Tuple2(model, effects));
						} else {
							return _Utils_Tuple2(model, effects);
						}
					}
				case 15:
					if (!callback.a.$) {
						var _v4 = callback.a.a;
						var requestedPage = _v4.a;
						var paginated = _v4.b;
						var resourceVersions = {
							fw: A2(
								$elm$core$List$map,
								function (vr) {
									var existingVersion = A2(
										$elm_community$list_extra$List$Extra$find,
										function (v) {
											return _Utils_eq(v.L.h7, vr.L);
										},
										model.r.fw);
									var enabledStateAccordingToServer = vr.fJ ? 0 : 2;
									if (!existingVersion.$) {
										var ev = existingVersion.a;
										return _Utils_update(
											ev,
											{
												fJ: (ev.fJ === 1) ? 1 : enabledStateAccordingToServer
											});
									} else {
										return {
											fJ: enabledStateAccordingToServer,
											fQ: false,
											L: {c_: model.hj.c_, hk: model.hj.hk, dh: model.hj.dh, h7: vr.L},
											gn: _List_Nil,
											gN: vr.gN,
											g4: _List_Nil,
											hy: false,
											dn: vr.dn
										};
									}
								},
								paginated.fw),
							g6: paginated.g6
						};
						var newModel = function (newPage) {
							return _Utils_update(
								model,
								{aJ: newPage, r: resourceVersions});
						};
						var fetchedPage = $author$project$Resource$Resource$permalink(paginated.fw);
						var chosenModelWith = function (requestedPageUnwrapped) {
							var _v6 = model.aJ;
							if (_v6.$ === 1) {
								return newModel(
									$elm$core$Maybe$Just(fetchedPage));
							} else {
								var page = _v6.a;
								return A2($author$project$Concourse$Pagination$equal, page, requestedPageUnwrapped) ? newModel(requestedPage) : model;
							}
						};
						if (requestedPage.$ === 1) {
							return _Utils_Tuple2(
								newModel(
									$elm$core$Maybe$Just(fetchedPage)),
								effects);
						} else {
							var requestedPageUnwrapped = requestedPage.a;
							return _Utils_Tuple2(
								chosenModelWith(requestedPageUnwrapped),
								effects);
						}
					} else {
						break _v1$13;
					}
				case 18:
					if (!callback.a.$) {
						var _v8 = callback.a.a;
						var versionID = _v8.a;
						var builds = _v8.b;
						return _Utils_Tuple2(
							A3(
								$author$project$Resource$Resource$updateVersion,
								versionID,
								function (v) {
									return _Utils_update(
										v,
										{gn: builds});
								},
								model),
							effects);
					} else {
						break _v1$13;
					}
				case 19:
					if (!callback.a.$) {
						var _v9 = callback.a.a;
						var versionID = _v9.a;
						var builds = _v9.b;
						return _Utils_Tuple2(
							A3(
								$author$project$Resource$Resource$updateVersion,
								versionID,
								function (v) {
									return _Utils_update(
										v,
										{g4: builds});
								},
								model),
							effects);
					} else {
						break _v1$13;
					}
				case 20:
					if (!callback.a.$) {
						var _v10 = _Utils_Tuple2(session.bB, model.en);
						if ((!_v10.a.$) && (!_v10.b.$)) {
							var user = _v10.a.a;
							var time = _v10.b.a;
							var pinningTo = function () {
								var _v11 = model.hc;
								switch (_v11.$) {
									case 1:
										var pt = _v11.a;
										return $elm$core$Maybe$Just(pt);
									case 5:
										var pt = _v11.c;
										return $elm$core$Maybe$Just(pt);
									default:
										return $elm$core$Maybe$Nothing;
								}
							}();
							var commentText = 'pinned by ' + ($author$project$Login$Login$userDisplayName(user) + (' at ' + A2($author$project$Resource$Resource$formatDate, session.eW, time)));
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										hc: A2(
											$elm$core$Maybe$withDefault,
											$author$project$Pinned$NotPinned,
											A2(
												$elm$core$Maybe$map,
												$author$project$Pinned$PinnedDynamicallyTo(
													{dx: commentText, ex: ''}),
												A2(
													$elm$core$Maybe$map,
													function ($) {
														return $.dn;
													},
													A2(
														$elm_community$list_extra$List$Extra$find,
														function (v) {
															return _Utils_eq(
																$elm$core$Maybe$Just(v.L),
																pinningTo);
														},
														model.r.fw))))
									}),
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											A2($author$project$Message$Effects$SetPinComment, model.hj, commentText)
										])));
						} else {
							return _Utils_Tuple2(model, effects);
						}
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{hc: $author$project$Pinned$NotPinned}),
							effects);
					}
				case 21:
					if (!callback.a.$) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{hc: $author$project$Pinned$NotPinned}),
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$FetchResource(model.hj)
									])));
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									hc: $author$project$Pinned$quitUnpinning(model.hc)
								}),
							effects);
					}
				case 22:
					var action = callback.a;
					var versionID = callback.b;
					var result = callback.c;
					var newEnabledState = function () {
						var _v12 = _Utils_Tuple2(result, action);
						if (!_v12.a.$) {
							if (!_v12.b) {
								var _v13 = _v12.b;
								return 0;
							} else {
								var _v14 = _v12.b;
								return 2;
							}
						} else {
							if (!_v12.b) {
								var _v15 = _v12.b;
								return 2;
							} else {
								var _v16 = _v12.b;
								return 0;
							}
						}
					}();
					return _Utils_Tuple2(
						A3(
							$author$project$Resource$Resource$updateVersion,
							versionID,
							function (v) {
								return _Utils_update(
									v,
									{fJ: newEnabledState});
							},
							model),
						effects);
				case 23:
					if (!callback.a.$) {
						var status = callback.a.a.hH;
						var id = callback.a.a.L;
						switch (status) {
							case 1:
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{J: $author$project$Resource$Models$CheckingSuccessfully}),
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												$author$project$Message$Effects$FetchResource(model.hj),
												A2($author$project$Message$Effects$FetchVersionedResources, model.hj, model.aJ)
											])));
							case 0:
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											J: $author$project$Resource$Models$CurrentlyChecking(id)
										}),
									effects);
							default:
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{J: $author$project$Resource$Models$FailingToCheck}),
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												$author$project$Message$Effects$FetchResource(model.hj)
											])));
						}
					} else {
						if (callback.a.a.$ === 3) {
							var status = callback.a.a.a.hH;
							return _Utils_Tuple2(
								model,
								(status.fq === 401) ? _Utils_ap(
									effects,
									_List_fromArray(
										[$author$project$Message$Effects$RedirectToLogin])) : effects);
						} else {
							break _v1$13;
						}
					}
				case 24:
					var result = callback.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								bQ: !_Utils_eq(
									result,
									$elm$core$Result$Ok(0)),
								bo: false,
								hc: function () {
									var _v18 = _Utils_Tuple2(result, model.hc);
									if ((!_v18.a.$) && (_v18.b.$ === 2)) {
										var _v19 = _v18.b;
										var comment = _v19.a.dx;
										var v = _v19.b;
										return A2(
											$author$project$Pinned$PinnedDynamicallyTo,
											{dx: comment, ex: comment},
											v);
									} else {
										var pv = _v18.b;
										return pv;
									}
								}()
							}),
						_Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$FetchResource(model.hj),
									$author$project$Message$Effects$SyncTextareaHeight($author$project$Message$Message$ResourceCommentTextarea)
								])));
				default:
					break _v1$13;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$SubPage$SubPage$handleLoggedOut = function (_v0) {
	var m = _v0.a;
	var effs = _v0.b;
	return _Utils_Tuple2(
		_Utils_update(
			m,
			{gE: false}),
		_Utils_ap(
			effs,
			_List_fromArray(
				[
					$author$project$Message$Effects$NavigateTo(
					$author$project$Routes$toString(
						$author$project$Routes$Dashboard(
							{
								fB: 0,
								hs: $author$project$Routes$Normal('')
							})))
				])));
};
var $author$project$SubPage$SubPage$handleCallback = F2(
	function (callback, session) {
		return A2(
			$elm$core$Basics$composeR,
			A7(
				$author$project$SubPage$SubPage$genericUpdate,
				$author$project$Build$Build$handleCallback(callback),
				$author$project$Job$Job$handleCallback(callback),
				A2($author$project$Resource$Resource$handleCallback, callback, session),
				$author$project$Pipeline$Pipeline$handleCallback(callback),
				$author$project$Dashboard$Dashboard$handleCallback(callback),
				$elm$core$Basics$identity,
				$elm$core$Basics$identity),
			function () {
				if ((callback.$ === 28) && (!callback.a.$)) {
					return A7($author$project$SubPage$SubPage$genericUpdate, $author$project$SubPage$SubPage$handleLoggedOut, $author$project$SubPage$SubPage$handleLoggedOut, $author$project$SubPage$SubPage$handleLoggedOut, $author$project$SubPage$SubPage$handleLoggedOut, $author$project$SubPage$SubPage$handleLoggedOut, $author$project$SubPage$SubPage$handleLoggedOut, $author$project$SubPage$SubPage$handleLoggedOut);
				} else {
					return $elm$core$Basics$identity;
				}
			}());
	});
var $author$project$UpdateMsg$AOK = 1;
var $author$project$UpdateMsg$NotFound = 0;
var $author$project$Build$Build$getUpdateMessage = function (model) {
	return model.cT ? 0 : 1;
};
var $author$project$Job$Job$getUpdateMessage = function (model) {
	var _v0 = model.gF;
	if (_v0.$ === 2) {
		return 0;
	} else {
		return 1;
	}
};
var $author$project$Pipeline$Pipeline$getUpdateMessage = function (model) {
	var _v0 = model.az;
	if (_v0.$ === 2) {
		return 0;
	} else {
		return 1;
	}
};
var $author$project$Resource$Resource$getUpdateMessage = function (model) {
	return _Utils_eq(
		model.bk,
		$elm$core$Result$Err(1)) ? 0 : 1;
};
var $author$project$SubPage$SubPage$getUpdateMessage = function (model) {
	switch (model.$) {
		case 0:
			var mdl = model.a;
			return $author$project$Build$Build$getUpdateMessage(mdl);
		case 1:
			var mdl = model.a;
			return $author$project$Job$Job$getUpdateMessage(mdl);
		case 2:
			var mdl = model.a;
			return $author$project$Resource$Resource$getUpdateMessage(mdl);
		case 3:
			var mdl = model.a;
			return $author$project$Pipeline$Pipeline$getUpdateMessage(mdl);
		default:
			return 1;
	}
};
var $author$project$NotFound$NotFound$init = function (flags) {
	return _Utils_Tuple2(
		{gE: false, aU: flags.aU, am: flags.am},
		_List_Nil);
};
var $author$project$SubPage$SubPage$handleNotFound = F3(
	function (notFound, route, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var _v1 = $author$project$SubPage$SubPage$getUpdateMessage(model);
		if (!_v1) {
			var _v2 = $author$project$NotFound$NotFound$init(
				{aU: notFound, am: route});
			var newModel = _v2.a;
			var newEffects = _v2.b;
			return _Utils_Tuple2(
				$author$project$SubPage$SubPage$NotFoundModel(newModel),
				_Utils_ap(effects, newEffects));
		} else {
			return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Application$Application$subpageHandleCallback = F2(
	function (callback, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var _v1 = A3(
			$author$project$SubPage$SubPage$handleNotFound,
			model.e.aU,
			model.am,
			A3(
				$author$project$SubPage$SubPage$handleCallback,
				callback,
				model.e,
				_Utils_Tuple2(model.o, effects)));
		var subModel = _v1.a;
		var newEffects = _v1.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{o: subModel}),
			newEffects);
	});
var $author$project$Application$Application$handleCallback = F2(
	function (callback, model) {
		_v0$15:
		while (true) {
			switch (callback.$) {
				case 3:
					if (callback.a.$ === 1) {
						var err = callback.a.a;
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							_Utils_Tuple2(model, _List_Nil));
					} else {
						break _v0$15;
					}
				case 35:
					if (callback.a.$ === 1) {
						var err = callback.a.a;
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							_Utils_Tuple2(model, _List_Nil));
					} else {
						break _v0$15;
					}
				case 17:
					if (callback.a.$ === 1) {
						var err = callback.a.a;
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							_Utils_Tuple2(model, _List_Nil));
					} else {
						break _v0$15;
					}
				case 4:
					if (callback.a.$ === 1) {
						var err = callback.a.a;
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							_Utils_Tuple2(model, _List_Nil));
					} else {
						break _v0$15;
					}
				case 18:
					if (callback.a.$ === 1) {
						var err = callback.a.a;
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							_Utils_Tuple2(model, _List_Nil));
					} else {
						break _v0$15;
					}
				case 19:
					if (callback.a.$ === 1) {
						var err = callback.a.a;
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							_Utils_Tuple2(model, _List_Nil));
					} else {
						break _v0$15;
					}
				case 9:
					if (callback.b.$ === 1) {
						var err = callback.b.a;
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							A2(
								$author$project$Application$Application$subpageHandleCallback,
								callback,
								_Utils_Tuple2(model, _List_Nil)));
					} else {
						break _v0$15;
					}
				case 36:
					if (callback.c.$ === 1) {
						var err = callback.c.a;
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							A2(
								$author$project$Application$Application$subpageHandleCallback,
								callback,
								_Utils_Tuple2(model, _List_Nil)));
					} else {
						break _v0$15;
					}
				case 28:
					if (!callback.a.$) {
						var session = model.e;
						var newSession = _Utils_update(
							session,
							{bB: $author$project$UserState$UserStateLoggedOut});
						return A2(
							$author$project$Application$Application$subpageHandleCallback,
							callback,
							_Utils_Tuple2(
								_Utils_update(
									model,
									{e: newSession}),
								_List_Nil));
					} else {
						break _v0$15;
					}
				case 25:
					if (callback.a.$ === 1) {
						var err = callback.a.a;
						var session = model.e;
						var newSession = _Utils_update(
							session,
							{bB: $author$project$UserState$UserStateLoggedOut});
						return A2(
							$author$project$Application$Application$redirectToLoginIfNecessary,
							err,
							A2(
								$author$project$Application$Application$subpageHandleCallback,
								callback,
								_Utils_Tuple2(
									_Utils_update(
										model,
										{e: newSession}),
									_List_Nil)));
					} else {
						break _v0$15;
					}
				case 11:
					if (!callback.a.$) {
						var user = callback.a.a;
						var session = model.e;
						var newSession = _Utils_update(
							session,
							{
								bB: $author$project$UserState$UserStateLoggedIn(user)
							});
						return A2(
							$author$project$Application$Application$subpageHandleCallback,
							callback,
							_Utils_Tuple2(
								_Utils_update(
									model,
									{e: newSession}),
								_List_Nil));
					} else {
						var session = model.e;
						var newSession = _Utils_update(
							session,
							{bB: $author$project$UserState$UserStateLoggedOut});
						return A2(
							$author$project$Application$Application$subpageHandleCallback,
							callback,
							_Utils_Tuple2(
								_Utils_update(
									model,
									{e: newSession}),
								_List_Nil));
					}
				case 16:
					if (!callback.a.$) {
						var clusterName = callback.a.a.cq;
						var version = callback.a.a.dn;
						var session = model.e;
						var newSession = _Utils_update(
							session,
							{cq: clusterName, dn: version});
						return A2(
							$author$project$Application$Application$subpageHandleCallback,
							callback,
							_Utils_Tuple2(
								_Utils_update(
									model,
									{e: newSession}),
								_List_Nil));
					} else {
						break _v0$15;
					}
				case 29:
					var viewport = callback.a;
					var session = model.e;
					var newSession = _Utils_update(
						session,
						{
							c4: $author$project$ScreenSize$fromWindowSize(viewport.ia.e$)
						});
					return A2(
						$author$project$Application$Application$subpageHandleCallback,
						callback,
						_Utils_Tuple2(
							_Utils_update(
								model,
								{e: newSession}),
							_List_Nil));
				case 2:
					var zone = callback.a;
					var session = model.e;
					var newSession = _Utils_update(
						session,
						{eW: zone});
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{e: newSession}),
						_List_Nil);
				default:
					break _v0$15;
			}
		}
		return A2(
			$author$project$Application$Application$subpageHandleCallback,
			callback,
			A2(
				$author$project$Application$Application$sideBarHandleCallback,
				callback,
				_Utils_Tuple2(model, _List_Nil)));
	});
var $author$project$Message$Effects$SaveSideBarState = function (a) {
	return {$: 62, a: a};
};
var $author$project$SideBar$SideBar$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$4:
		while (true) {
			switch (delivery.$) {
				case 13:
					if (!delivery.a.$) {
						var state = delivery.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{hz: state}),
							effects);
					} else {
						break _v1$4;
					}
				case 2:
					var pos = delivery.a;
					if (model.cu) {
						var oldState = model.hz;
						var newState = _Utils_update(
							oldState,
							{e$: pos.$7});
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{hz: newState}),
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$GetViewportOf($author$project$Message$Message$Dashboard)
									])));
					} else {
						return _Utils_Tuple2(model, effects);
					}
				case 3:
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{cu: false}),
						model.cu ? _List_fromArray(
							[
								$author$project$Message$Effects$SaveSideBarState(model.hz)
							]) : _List_Nil);
				case 17:
					if (!delivery.a.$) {
						var pipelines = delivery.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{fX: pipelines}),
							effects);
					} else {
						break _v1$4;
					}
				default:
					break _v1$4;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Message$Message$FirstOccurrenceGetStepLabel = function (a) {
	return {$: 10, a: a};
};
var $author$project$Message$Effects$Scroll = F2(
	function (a, b) {
		return {$: 51, a: a, b: b};
	});
var $author$project$Message$Message$StepState = function (a) {
	return {$: 11, a: a};
};
var $author$project$Message$ScrollDirection$ToBottom = {$: 3};
var $author$project$Message$ScrollDirection$ToId = function (a) {
	return {$: 5, a: a};
};
var $author$project$Build$Build$NoScroll = {$: 2};
var $author$project$Build$Build$ScrollToID = function (a) {
	return {$: 1, a: a};
};
var $author$project$Build$Build$ScrollWindow = {$: 0};
var $author$project$Build$Build$getScrollBehavior = function (model) {
	var _v0 = model.y;
	switch (_v0.$) {
		case 1:
			var stepID = _v0.a;
			var lineNumber = _v0.b;
			return $author$project$Build$Build$ScrollToID(
				stepID + (':' + $elm$core$String$fromInt(lineNumber)));
		case 2:
			var stepID = _v0.a;
			var beginning = _v0.b;
			var end = _v0.c;
			return (_Utils_cmp(beginning, end) < 1) ? $author$project$Build$Build$ScrollToID(
				stepID + (':' + $elm$core$String$fromInt(beginning))) : $author$project$Build$Build$NoScroll;
		default:
			if (model.a9) {
				if (model.av) {
					var _v1 = model.hH;
					switch (_v1) {
						case 2:
							return $author$project$Build$Build$NoScroll;
						case 0:
							return $author$project$Build$Build$NoScroll;
						default:
							return $author$project$Build$Build$ScrollWindow;
					}
				} else {
					return $author$project$Build$Build$NoScroll;
				}
			} else {
				return $author$project$Build$Build$NoScroll;
			}
	}
};
var $elm$core$String$endsWith = _String_endsWith;
var $author$project$Build$Header$Header$historyId = 'builds';
var $elm_community$list_extra$List$Extra$last = function (items) {
	last:
	while (true) {
		if (!items.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!items.b.b) {
				var x = items.a;
				return $elm$core$Maybe$Just(x);
			} else {
				var rest = items.b;
				var $temp$items = rest;
				items = $temp$items;
				continue last;
			}
		}
	}
};
var $author$project$Build$Header$Header$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		switch (delivery.$) {
			case 10:
				if (delivery.a.b) {
					var _v2 = delivery.a;
					var id = _v2.a;
					var lastBuildVisible = A2(
						$elm$core$Maybe$withDefault,
						false,
						A2(
							$elm$core$Maybe$map,
							$elm$core$Basics$eq(id),
							A2(
								$elm$core$Maybe$map,
								$elm$core$String$fromInt,
								A2(
									$elm$core$Maybe$map,
									function ($) {
										return $.L;
									},
									$elm_community$list_extra$List$Extra$last(model.gb)))));
					var hasNextPage = !_Utils_eq(model.bh, $elm$core$Maybe$Nothing);
					var needsToFetchMorePages = (!model.fZ) && (lastBuildVisible && hasNextPage);
					var _v3 = model.gF;
					if (!_v3.$) {
						var job = _v3.a;
						return needsToFetchMorePages ? _Utils_Tuple2(
							_Utils_update(
								model,
								{fZ: true}),
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										A2($author$project$Message$Effects$FetchBuildHistory, job, model.bh)
									]))) : _Utils_Tuple2(model, effects);
					} else {
						return _Utils_Tuple2(model, effects);
					}
				} else {
					var _v4 = delivery.a;
					var id = _v4.a;
					var currentBuildInvisible = _Utils_eq(
						$elm$core$String$fromInt(model.L),
						id);
					var shouldScroll = currentBuildInvisible && (!model.hr);
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hr: true}),
						_Utils_ap(
							effects,
							shouldScroll ? _List_fromArray(
								[
									A2(
									$author$project$Message$Effects$Scroll,
									$author$project$Message$ScrollDirection$ToId(id),
									$author$project$Build$Header$Header$historyId)
								]) : _List_Nil));
				}
			case 7:
				var result = delivery.a;
				return A2(
					$elm$core$Maybe$withDefault,
					_Utils_Tuple2(model, effects),
					A2(
						$elm$core$Maybe$map,
						function (_v7) {
							var status = _v7.a;
							var date = _v7.b;
							var newStatus = $author$project$Concourse$BuildStatus$isRunning(model.hH) ? status : model.hH;
							var newDuration = function () {
								var dur = model.cv;
								return _Utils_update(
									dur,
									{
										dQ: $author$project$Concourse$BuildStatus$isRunning(status) ? dur.dQ : $elm$core$Maybe$Just(date)
									});
							}();
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										cv: newDuration,
										gb: A3(
											$elm_community$list_extra$List$Extra$updateIf,
											A2(
												$elm$core$Basics$composeR,
												function ($) {
													return $.L;
												},
												$elm$core$Basics$eq(model.L)),
											function (item) {
												return _Utils_update(
													item,
													{cv: newDuration, hH: newStatus});
											},
											model.gb),
										hH: newStatus
									}),
								effects);
						},
						A2(
							$elm$core$Maybe$andThen,
							$elm_community$list_extra$List$Extra$last,
							A2(
								$elm$core$Maybe$map,
								$elm$core$List$filterMap(
									function (_v5) {
										var data = _v5.dz;
										if (!data.$) {
											var status = data.a;
											var date = data.b;
											return $elm$core$Maybe$Just(
												_Utils_Tuple2(status, date));
										} else {
											return $elm$core$Maybe$Nothing;
										}
									}),
								A2(
									$elm$core$Maybe$map,
									$elm$core$List$filter(
										A2(
											$elm$core$Basics$composeR,
											function ($) {
												return $.h4;
											},
											$elm$core$String$endsWith(
												A2(
													$author$project$Api$Endpoints$toString,
													_List_Nil,
													A2($author$project$Api$Endpoints$Build, model.L, 5))))),
									$elm$core$Result$toMaybe(result))))));
			default:
				return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Message$Effects$DoAbortBuild = function (a) {
	return {$: 29, a: a};
};
var $author$project$Message$Effects$DoTriggerBuild = function (a) {
	return {$: 27, a: a};
};
var $author$project$Message$ScrollDirection$Down = {$: 1};
var $author$project$Message$Effects$RerunJobBuild = function (a) {
	return {$: 28, a: a};
};
var $author$project$Message$ScrollDirection$ToTop = {$: 0};
var $author$project$Message$ScrollDirection$Up = {$: 2};
var $author$project$Build$Shortcuts$bodyId = 'build-body';
var $author$project$Keyboard$hasControlModifier = function (keyEvent) {
	return keyEvent.dy || keyEvent.eg;
};
var $author$project$Build$Shortcuts$historyItem = function (model) {
	return {cv: model.cv, L: model.L, bX: model.bX, hH: model.hH};
};
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $author$project$Build$Shortcuts$nextHistoryItem = F2(
	function (builds, b) {
		nextHistoryItem:
		while (true) {
			if (builds.b && builds.b.b) {
				var first = builds.a;
				var _v1 = builds.b;
				var second = _v1.a;
				var rest = _v1.b;
				if (_Utils_eq(second, b)) {
					return $elm$core$Maybe$Just(first);
				} else {
					var $temp$builds = A2($elm$core$List$cons, second, rest),
						$temp$b = b;
					builds = $temp$builds;
					b = $temp$b;
					continue nextHistoryItem;
				}
			} else {
				return $elm$core$Maybe$Nothing;
			}
		}
	});
var $author$project$Build$Shortcuts$prevHistoryItem = F2(
	function (builds, b) {
		prevHistoryItem:
		while (true) {
			if (builds.b && builds.b.b) {
				var first = builds.a;
				var _v1 = builds.b;
				var second = _v1.a;
				var rest = _v1.b;
				if (_Utils_eq(first, b)) {
					return $elm$core$Maybe$Just(second);
				} else {
					var $temp$builds = A2($elm$core$List$cons, second, rest),
						$temp$b = b;
					builds = $temp$builds;
					b = $temp$b;
					continue prevHistoryItem;
				}
			} else {
				return $elm$core$Maybe$Nothing;
			}
		}
	});
var $author$project$Build$Shortcuts$handleKeyPressed = F2(
	function (keyEvent, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		var newModel = function () {
			var _v14 = _Utils_Tuple3(model.hg, keyEvent.eM, keyEvent.fq);
			if (((_v14.a.$ === 1) && (!_v14.b)) && (_v14.c === 3)) {
				var _v15 = _v14.a;
				var _v16 = _v14.c;
				return _Utils_update(
					model,
					{
						hg: $elm$core$Maybe$Just(keyEvent)
					});
			} else {
				return _Utils_update(
					model,
					{hg: $elm$core$Maybe$Nothing});
			}
		}();
		if ($author$project$Keyboard$hasControlModifier(keyEvent)) {
			return _Utils_Tuple2(newModel, effects);
		} else {
			var _v1 = _Utils_Tuple2(keyEvent.fq, keyEvent.eM);
			_v1$10:
			while (true) {
				if (!_v1.b) {
					switch (_v1.a) {
						case 5:
							var _v2 = _v1.a;
							return _Utils_Tuple2(
								newModel,
								_List_fromArray(
									[
										A2($author$project$Message$Effects$Scroll, $author$project$Message$ScrollDirection$Down, $author$project$Build$Shortcuts$bodyId)
									]));
						case 6:
							var _v3 = _v1.a;
							return _Utils_Tuple2(
								newModel,
								_List_fromArray(
									[
										A2($author$project$Message$Effects$Scroll, $author$project$Message$ScrollDirection$Up, $author$project$Build$Shortcuts$bodyId)
									]));
						case 3:
							var _v5 = _v1.a;
							return _Utils_eq(
								A2(
									$elm$core$Maybe$map,
									function ($) {
										return $.fq;
									},
									model.hg),
								$elm$core$Maybe$Just(3)) ? _Utils_Tuple2(
								_Utils_update(
									newModel,
									{a9: false}),
								_List_fromArray(
									[
										A2($author$project$Message$Effects$Scroll, $author$project$Message$ScrollDirection$ToTop, $author$project$Build$Shortcuts$bodyId)
									])) : _Utils_Tuple2(newModel, effects);
						case 4:
							var _v7 = _v1.a;
							var _v8 = A2(
								$author$project$Build$Shortcuts$nextHistoryItem,
								model.gb,
								$author$project$Build$Shortcuts$historyItem(model));
							if (!_v8.$) {
								var item = _v8.a;
								return _Utils_Tuple2(
									newModel,
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												$author$project$Message$Effects$NavigateTo(
												$author$project$Routes$toString(
													A3($author$project$Routes$buildRoute, item.L, item.bX, newModel.gF)))
											])));
							} else {
								return _Utils_Tuple2(newModel, effects);
							}
						case 7:
							var _v9 = _v1.a;
							var _v10 = A2(
								$author$project$Build$Shortcuts$prevHistoryItem,
								newModel.gb,
								$author$project$Build$Shortcuts$historyItem(newModel));
							if (!_v10.$) {
								var item = _v10.a;
								return _Utils_Tuple2(
									newModel,
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												$author$project$Message$Effects$NavigateTo(
												$author$project$Routes$toString(
													A3($author$project$Routes$buildRoute, item.L, item.bX, newModel.gF)))
											])));
							} else {
								return _Utils_Tuple2(newModel, effects);
							}
						default:
							break _v1$10;
					}
				} else {
					switch (_v1.a) {
						case 3:
							var _v4 = _v1.a;
							return _Utils_Tuple2(
								_Utils_update(
									newModel,
									{a9: true}),
								_List_fromArray(
									[
										A2($author$project$Message$Effects$Scroll, $author$project$Message$ScrollDirection$ToBottom, $author$project$Build$Shortcuts$bodyId)
									]));
						case 9:
							var _v6 = _v1.a;
							return _Utils_Tuple2(
								_Utils_update(
									newModel,
									{eN: !newModel.eN}),
								effects);
						case 1:
							var _v11 = _v1.a;
							return (!newModel.gD) ? A2(
								$elm$core$Maybe$withDefault,
								$elm$core$Basics$identity,
								A2(
									$elm$core$Maybe$map,
									A2(
										$elm$core$Basics$composeR,
										$author$project$Message$Effects$DoTriggerBuild,
										A2($elm$core$Basics$composeR, $elm$core$List$cons, $elm$core$Tuple$mapSecond)),
									newModel.gF))(
								_Utils_Tuple2(
									_Utils_update(
										newModel,
										{gD: true}),
									effects)) : _Utils_Tuple2(newModel, effects);
						case 2:
							var _v12 = _v1.a;
							return _Utils_Tuple2(
								newModel,
								_Utils_ap(
									effects,
									$author$project$Concourse$BuildStatus$isRunning(newModel.hH) ? _List_Nil : $elm_community$maybe_extra$Maybe$Extra$toList(
										A2(
											$elm$core$Maybe$map,
											function (j) {
												return $author$project$Message$Effects$RerunJobBuild(
													{ff: newModel.bX, d7: j.d7, c_: j.c_, dh: j.dh});
											},
											newModel.gF))));
						case 0:
							var _v13 = _v1.a;
							return _Utils_eq(
								$elm$core$Maybe$Just(
									$author$project$Build$Shortcuts$historyItem(newModel)),
								$elm$core$List$head(newModel.gb)) ? _Utils_Tuple2(
								newModel,
								A2(
									$elm$core$List$cons,
									$author$project$Message$Effects$DoAbortBuild(newModel.L),
									effects)) : _Utils_Tuple2(newModel, effects);
						default:
							break _v1$10;
					}
				}
			}
			return _Utils_Tuple2(newModel, effects);
		}
	});
var $author$project$Build$Shortcuts$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		switch (delivery.$) {
			case 0:
				var keyEvent = delivery.a;
				return A2(
					$author$project$Build$Shortcuts$handleKeyPressed,
					keyEvent,
					_Utils_Tuple2(model, effects));
			case 1:
				var keyEvent = delivery.a;
				var _v2 = keyEvent.fq;
				if (_v2 === 1) {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{gD: false}),
						effects);
				} else {
					return _Utils_Tuple2(model, effects);
				}
			default:
				return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Build$Output$Models$StepsComplete = 2;
var $elm$core$Array$length = function (_v0) {
	var len = _v0.a;
	return len;
};
var $vito$elm_ansi$Ansi$Log$Chunk = F2(
	function (text, style) {
		return {d: style, hR: text};
	});
var $vito$elm_ansi$Ansi$Log$CursorPosition = F2(
	function (row, column) {
		return {aq: column, aA: row};
	});
var $vito$elm_ansi$Ansi$Print = function (a) {
	return {$: 0, a: a};
};
var $vito$elm_ansi$Ansi$Log$blankLine = _Utils_Tuple2(_List_Nil, 0);
var $vito$elm_ansi$Ansi$Log$chunkLen = A2(
	$elm$core$Basics$composeL,
	$elm$core$String$length,
	function ($) {
		return $.hR;
	});
var $vito$elm_ansi$Ansi$Log$moveCursor = F3(
	function (r, c, pos) {
		return _Utils_update(
			pos,
			{aq: pos.aq + c, aA: pos.aA + r});
	});
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $elm$core$String$dropRight = F2(
	function (n, string) {
		return (n < 1) ? string : A3($elm$core$String$slice, 0, -n, string);
	});
var $vito$elm_ansi$Ansi$Log$dropRight = F2(
	function (n, line) {
		dropRight:
		while (true) {
			if (!line.a.b) {
				return line;
			} else {
				var _v1 = line.a;
				var c = _v1.a;
				var cs = _v1.b;
				var llen = line.b;
				var clen = $vito$elm_ansi$Ansi$Log$chunkLen(c);
				if (_Utils_cmp(clen, n) < 1) {
					var $temp$n = n - clen,
						$temp$line = _Utils_Tuple2(cs, llen - clen);
					n = $temp$n;
					line = $temp$line;
					continue dropRight;
				} else {
					return _Utils_Tuple2(
						A2(
							$elm$core$List$cons,
							_Utils_update(
								c,
								{
									hR: A2($elm$core$String$dropRight, n, c.hR)
								}),
							cs),
						llen - n);
				}
			}
		}
	});
var $vito$elm_ansi$Ansi$Log$lineLen = $elm$core$Tuple$second;
var $vito$elm_ansi$Ansi$Log$takeLeft = F2(
	function (n, line) {
		return A2(
			$vito$elm_ansi$Ansi$Log$dropRight,
			$vito$elm_ansi$Ansi$Log$lineLen(line) - n,
			line);
	});
var $elm$core$Elm$JsArray$push = _JsArray_push;
var $elm$core$Elm$JsArray$singleton = _JsArray_singleton;
var $elm$core$Array$insertTailInTree = F4(
	function (shift, index, tail, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		if (_Utils_cmp(
			pos,
			$elm$core$Elm$JsArray$length(tree)) > -1) {
			if (shift === 5) {
				return A2(
					$elm$core$Elm$JsArray$push,
					$elm$core$Array$Leaf(tail),
					tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, $elm$core$Elm$JsArray$empty));
				return A2($elm$core$Elm$JsArray$push, newSub, tree);
			}
		} else {
			var value = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (!value.$) {
				var subTree = value.a;
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, subTree));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4(
						$elm$core$Array$insertTailInTree,
						shift - $elm$core$Array$shiftStep,
						index,
						tail,
						$elm$core$Elm$JsArray$singleton(value)));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			}
		}
	});
var $elm$core$Array$unsafeReplaceTail = F2(
	function (newTail, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var originalTailLen = $elm$core$Elm$JsArray$length(tail);
		var newTailLen = $elm$core$Elm$JsArray$length(newTail);
		var newArrayLen = len + (newTailLen - originalTailLen);
		if (_Utils_eq(newTailLen, $elm$core$Array$branchFactor)) {
			var overflow = _Utils_cmp(newArrayLen >>> $elm$core$Array$shiftStep, 1 << startShift) > 0;
			if (overflow) {
				var newShift = startShift + $elm$core$Array$shiftStep;
				var newTree = A4(
					$elm$core$Array$insertTailInTree,
					newShift,
					len,
					newTail,
					$elm$core$Elm$JsArray$singleton(
						$elm$core$Array$SubTree(tree)));
				return A4($elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, $elm$core$Elm$JsArray$empty);
			} else {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					newArrayLen,
					startShift,
					A4($elm$core$Array$insertTailInTree, startShift, len, newTail, tree),
					$elm$core$Elm$JsArray$empty);
			}
		} else {
			return A4($elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);
		}
	});
var $elm$core$Array$push = F2(
	function (a, array) {
		var tail = array.d;
		return A2(
			$elm$core$Array$unsafeReplaceTail,
			A2($elm$core$Elm$JsArray$push, a, tail),
			array);
	});
var $vito$elm_ansi$Ansi$Log$appendLine = F3(
	function (after, line, lines) {
		appendLine:
		while (true) {
			if (!after) {
				return A2($elm$core$Array$push, line, lines);
			} else {
				var $temp$after = after - 1,
					$temp$line = line,
					$temp$lines = A2($elm$core$Array$push, $vito$elm_ansi$Ansi$Log$blankLine, lines);
				after = $temp$after;
				line = $temp$line;
				lines = $temp$lines;
				continue appendLine;
			}
		}
	});
var $vito$elm_ansi$Ansi$Log$updateLine = F3(
	function (row, updater, lines) {
		var line = updater(
			A2(
				$elm$core$Maybe$withDefault,
				$vito$elm_ansi$Ansi$Log$blankLine,
				A2($elm$core$Array$get, row, lines)));
		var currentLines = $elm$core$Array$length(lines);
		return (_Utils_cmp(row + 1, currentLines) > 0) ? A3($vito$elm_ansi$Ansi$Log$appendLine, row - currentLines, line, lines) : A3($elm$core$Array$set, row, line, lines);
	});
var $vito$elm_ansi$Ansi$Log$updateStyle = F2(
	function (action, style) {
		switch (action.$) {
			case 2:
				var mc = action.a;
				return _Utils_update(
					style,
					{bc: mc});
			case 3:
				var mc = action.a;
				return _Utils_update(
					style,
					{fb: mc});
			case 9:
				var b = action.a;
				return _Utils_update(
					style,
					{bf: b});
			case 4:
				var b = action.a;
				return _Utils_update(
					style,
					{aG: b});
			case 5:
				var b = action.a;
				return _Utils_update(
					style,
					{bJ: b});
			case 6:
				var b = action.a;
				return _Utils_update(
					style,
					{bS: b});
			case 7:
				var b = action.a;
				return _Utils_update(
					style,
					{cl: b});
			case 8:
				var b = action.a;
				return _Utils_update(
					style,
					{bE: b});
			case 10:
				var b = action.a;
				return _Utils_update(
					style,
					{bM: b});
			case 11:
				var b = action.a;
				return _Utils_update(
					style,
					{bN: b});
			default:
				return style;
		}
	});
var $elm$core$String$append = _String_append;
var $vito$elm_ansi$Ansi$Log$addChunk = F2(
	function (chunk, line) {
		var clen = $vito$elm_ansi$Ansi$Log$chunkLen(chunk);
		if (!clen) {
			return line;
		} else {
			if (!line.a.b) {
				return _Utils_Tuple2(
					_List_fromArray(
						[chunk]),
					clen);
			} else {
				var _v1 = line.a;
				var c = _v1.a;
				var cs = _v1.b;
				var llen = line.b;
				return _Utils_eq(c.d, chunk.d) ? _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_update(
							c,
							{
								hR: A2($elm$core$String$append, c.hR, chunk.hR)
							}),
						cs),
					llen + clen) : _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						chunk,
						A2($elm$core$List$cons, c, cs)),
					llen + clen);
			}
		}
	});
var $vito$elm_ansi$Ansi$Log$spacing = F2(
	function (style, len) {
		return {
			d: style,
			hR: A2($elm$core$String$repeat, len, ' ')
		};
	});
var $vito$elm_ansi$Ansi$Log$takeRight = F2(
	function (n, line) {
		if (!line.a.b) {
			return line;
		} else {
			var _v1 = line.a;
			var c = _v1.a;
			var cs = _v1.b;
			var llen = line.b;
			var clen = $vito$elm_ansi$Ansi$Log$chunkLen(c);
			return (_Utils_cmp(clen, n) < 0) ? A2(
				$vito$elm_ansi$Ansi$Log$addChunk,
				c,
				A2(
					$vito$elm_ansi$Ansi$Log$takeRight,
					n - clen,
					_Utils_Tuple2(cs, llen - clen))) : (_Utils_eq(clen, n) ? _Utils_Tuple2(
				_List_fromArray(
					[c]),
				clen) : _Utils_Tuple2(
				_List_fromArray(
					[
						_Utils_update(
						c,
						{
							hR: A2($elm$core$String$right, n, c.hR)
						})
					]),
				n));
		}
	});
var $vito$elm_ansi$Ansi$Log$writeChunk = F3(
	function (pos, chunk, line) {
		var len = $vito$elm_ansi$Ansi$Log$lineLen(line);
		var textChopped = len - pos;
		var afterLen = len - ($vito$elm_ansi$Ansi$Log$chunkLen(chunk) + pos);
		if (_Utils_eq(len, pos)) {
			return A2($vito$elm_ansi$Ansi$Log$addChunk, chunk, line);
		} else {
			if (_Utils_cmp(pos, len) > 0) {
				return A2(
					$vito$elm_ansi$Ansi$Log$addChunk,
					chunk,
					A2(
						$vito$elm_ansi$Ansi$Log$addChunk,
						A2($vito$elm_ansi$Ansi$Log$spacing, chunk.d, pos - len),
						line));
			} else {
				var appended = A2(
					$vito$elm_ansi$Ansi$Log$addChunk,
					chunk,
					A2($vito$elm_ansi$Ansi$Log$dropRight, len - pos, line));
				return (afterLen > 0) ? A3(
					$elm$core$List$foldl,
					$vito$elm_ansi$Ansi$Log$addChunk,
					appended,
					A2($vito$elm_ansi$Ansi$Log$takeRight, afterLen, line).a) : appended;
			}
		}
	});
var $vito$elm_ansi$Ansi$Log$handleAction = F2(
	function (action, model) {
		switch (action.$) {
			case 0:
				var s = action.a;
				var chunk = A2($vito$elm_ansi$Ansi$Log$Chunk, s, model.d);
				var updatedChunk = A2($vito$elm_ansi$Ansi$Log$writeChunk, model.b3.aq, chunk);
				return _Utils_update(
					model,
					{
						ee: A3($vito$elm_ansi$Ansi$Log$updateLine, model.b3.aA, updatedChunk, model.ee),
						b3: A3(
							$vito$elm_ansi$Ansi$Log$moveCursor,
							0,
							$vito$elm_ansi$Ansi$Log$chunkLen(chunk),
							model.b3)
					});
			case 13:
				return _Utils_update(
					model,
					{
						b3: A2($vito$elm_ansi$Ansi$Log$CursorPosition, model.b3.aA, 0)
					});
			case 12:
				return A2(
					$vito$elm_ansi$Ansi$Log$handleAction,
					$vito$elm_ansi$Ansi$Print(''),
					function () {
						var _v1 = model.cQ;
						if (!_v1) {
							return _Utils_update(
								model,
								{
									b3: A3($vito$elm_ansi$Ansi$Log$moveCursor, 1, 0, model.b3)
								});
						} else {
							return _Utils_update(
								model,
								{
									b3: A2($vito$elm_ansi$Ansi$Log$CursorPosition, model.b3.aA + 1, 0)
								});
						}
					}());
			case 1:
				var s = action.a;
				return _Utils_update(
					model,
					{bt: s});
			case 14:
				var num = action.a;
				return _Utils_update(
					model,
					{
						b3: A3($vito$elm_ansi$Ansi$Log$moveCursor, -num, 0, model.b3)
					});
			case 15:
				var num = action.a;
				return _Utils_update(
					model,
					{
						b3: A3($vito$elm_ansi$Ansi$Log$moveCursor, num, 0, model.b3)
					});
			case 16:
				var num = action.a;
				return _Utils_update(
					model,
					{
						b3: A3($vito$elm_ansi$Ansi$Log$moveCursor, 0, num, model.b3)
					});
			case 17:
				var num = action.a;
				return _Utils_update(
					model,
					{
						b3: A3($vito$elm_ansi$Ansi$Log$moveCursor, 0, -num, model.b3)
					});
			case 18:
				var row = action.a;
				var col = action.b;
				return _Utils_update(
					model,
					{
						b3: A2($vito$elm_ansi$Ansi$Log$CursorPosition, row - 1, col - 1)
					});
			case 19:
				var col = action.a;
				return _Utils_update(
					model,
					{
						b3: A2($vito$elm_ansi$Ansi$Log$CursorPosition, model.b3.aA, col)
					});
			case 22:
				return _Utils_update(
					model,
					{
						cb: $elm$core$Maybe$Just(model.b3)
					});
			case 23:
				return _Utils_update(
					model,
					{
						b3: A2($elm$core$Maybe$withDefault, model.b3, model.cb)
					});
			case 21:
				var mode = action.a;
				switch (mode) {
					case 0:
						var chunk = A2(
							$vito$elm_ansi$Ansi$Log$Chunk,
							A2($elm$core$String$repeat, model.b3.aq, ' '),
							model.d);
						var updatedChunk = A2($vito$elm_ansi$Ansi$Log$writeChunk, 0, chunk);
						return _Utils_update(
							model,
							{
								ee: A3($vito$elm_ansi$Ansi$Log$updateLine, model.b3.aA, updatedChunk, model.ee)
							});
					case 1:
						var updater = $vito$elm_ansi$Ansi$Log$takeLeft(model.b3.aq);
						return _Utils_update(
							model,
							{
								ee: A3($vito$elm_ansi$Ansi$Log$updateLine, model.b3.aA, updater, model.ee)
							});
					default:
						return _Utils_update(
							model,
							{
								ee: A3(
									$vito$elm_ansi$Ansi$Log$updateLine,
									model.b3.aA,
									$elm$core$Basics$always($vito$elm_ansi$Ansi$Log$blankLine),
									model.ee)
							});
				}
			default:
				return _Utils_update(
					model,
					{
						d: A2($vito$elm_ansi$Ansi$Log$updateStyle, action, model.d)
					});
		}
	});
var $vito$elm_ansi$Ansi$Remainder = function (a) {
	return {$: 1, a: a};
};
var $vito$elm_ansi$Ansi$encodeCode = function (code) {
	if (code.$ === 1) {
		return '';
	} else {
		var num = code.a;
		return $elm$core$String$fromInt(num);
	}
};
var $vito$elm_ansi$Ansi$encodeCodes = function (codes) {
	return A2(
		$elm$core$String$join,
		';',
		A2($elm$core$List$map, $vito$elm_ansi$Ansi$encodeCode, codes));
};
var $vito$elm_ansi$Ansi$completeParsing = function (parser) {
	switch (parser.a.$) {
		case 0:
			var _v1 = parser.a;
			var model = parser.b;
			var update = parser.c;
			return A2(
				update,
				$vito$elm_ansi$Ansi$Remainder('\u001B'),
				model);
		case 1:
			var _v2 = parser.a;
			var codes = _v2.a;
			var currentCode = _v2.b;
			var model = parser.b;
			var update = parser.c;
			return A2(
				update,
				$vito$elm_ansi$Ansi$Remainder(
					'\u001B[' + $vito$elm_ansi$Ansi$encodeCodes(
						_Utils_ap(
							codes,
							_List_fromArray(
								[currentCode])))),
				model);
		default:
			if (parser.a.a === '') {
				var model = parser.b;
				return model;
			} else {
				var str = parser.a.a;
				var model = parser.b;
				var update = parser.c;
				return A2(
					update,
					$vito$elm_ansi$Ansi$Print(str),
					model);
			}
	}
};
var $vito$elm_ansi$Ansi$Parser = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $vito$elm_ansi$Ansi$Unescaped = function (a) {
	return {$: 2, a: a};
};
var $vito$elm_ansi$Ansi$emptyParser = $vito$elm_ansi$Ansi$Parser(
	$vito$elm_ansi$Ansi$Unescaped(''));
var $vito$elm_ansi$Ansi$CSI = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $vito$elm_ansi$Ansi$CarriageReturn = {$: 13};
var $vito$elm_ansi$Ansi$CursorBack = function (a) {
	return {$: 17, a: a};
};
var $vito$elm_ansi$Ansi$CursorColumn = function (a) {
	return {$: 19, a: a};
};
var $vito$elm_ansi$Ansi$CursorDown = function (a) {
	return {$: 15, a: a};
};
var $vito$elm_ansi$Ansi$CursorForward = function (a) {
	return {$: 16, a: a};
};
var $vito$elm_ansi$Ansi$CursorUp = function (a) {
	return {$: 14, a: a};
};
var $vito$elm_ansi$Ansi$EraseDisplay = function (a) {
	return {$: 20, a: a};
};
var $vito$elm_ansi$Ansi$EraseLine = function (a) {
	return {$: 21, a: a};
};
var $vito$elm_ansi$Ansi$Escaped = {$: 0};
var $vito$elm_ansi$Ansi$Linebreak = {$: 12};
var $vito$elm_ansi$Ansi$RestoreCursorPosition = {$: 23};
var $vito$elm_ansi$Ansi$SaveCursorPosition = {$: 22};
var $vito$elm_ansi$Ansi$Black = 0;
var $vito$elm_ansi$Ansi$Blue = 4;
var $vito$elm_ansi$Ansi$BrightBlack = 8;
var $vito$elm_ansi$Ansi$BrightBlue = 12;
var $vito$elm_ansi$Ansi$BrightCyan = 14;
var $vito$elm_ansi$Ansi$BrightGreen = 10;
var $vito$elm_ansi$Ansi$BrightMagenta = 13;
var $vito$elm_ansi$Ansi$BrightRed = 9;
var $vito$elm_ansi$Ansi$BrightWhite = 15;
var $vito$elm_ansi$Ansi$BrightYellow = 11;
var $vito$elm_ansi$Ansi$Cyan = 6;
var $vito$elm_ansi$Ansi$Green = 2;
var $vito$elm_ansi$Ansi$Magenta = 5;
var $vito$elm_ansi$Ansi$Red = 1;
var $vito$elm_ansi$Ansi$SetBackground = function (a) {
	return {$: 3, a: a};
};
var $vito$elm_ansi$Ansi$SetBlink = function (a) {
	return {$: 8, a: a};
};
var $vito$elm_ansi$Ansi$SetBold = function (a) {
	return {$: 4, a: a};
};
var $vito$elm_ansi$Ansi$SetFaint = function (a) {
	return {$: 5, a: a};
};
var $vito$elm_ansi$Ansi$SetForeground = function (a) {
	return {$: 2, a: a};
};
var $vito$elm_ansi$Ansi$SetFraktur = function (a) {
	return {$: 10, a: a};
};
var $vito$elm_ansi$Ansi$SetFramed = function (a) {
	return {$: 11, a: a};
};
var $vito$elm_ansi$Ansi$SetInverted = function (a) {
	return {$: 9, a: a};
};
var $vito$elm_ansi$Ansi$SetItalic = function (a) {
	return {$: 6, a: a};
};
var $vito$elm_ansi$Ansi$SetUnderline = function (a) {
	return {$: 7, a: a};
};
var $vito$elm_ansi$Ansi$White = 7;
var $vito$elm_ansi$Ansi$Yellow = 3;
var $vito$elm_ansi$Ansi$reset = _List_fromArray(
	[
		$vito$elm_ansi$Ansi$SetForeground($elm$core$Maybe$Nothing),
		$vito$elm_ansi$Ansi$SetBackground($elm$core$Maybe$Nothing),
		$vito$elm_ansi$Ansi$SetBold(false),
		$vito$elm_ansi$Ansi$SetFaint(false),
		$vito$elm_ansi$Ansi$SetItalic(false),
		$vito$elm_ansi$Ansi$SetUnderline(false),
		$vito$elm_ansi$Ansi$SetBlink(false),
		$vito$elm_ansi$Ansi$SetInverted(false),
		$vito$elm_ansi$Ansi$SetFraktur(false),
		$vito$elm_ansi$Ansi$SetFramed(false)
	]);
var $vito$elm_ansi$Ansi$codeActions = function (code) {
	switch (code) {
		case 0:
			return $vito$elm_ansi$Ansi$reset;
		case 1:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBold(true)
				]);
		case 2:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetFaint(true)
				]);
		case 3:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetItalic(true)
				]);
		case 4:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetUnderline(true)
				]);
		case 5:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBlink(true)
				]);
		case 7:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetInverted(true)
				]);
		case 20:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetFraktur(true)
				]);
		case 30:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(0))
				]);
		case 31:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(1))
				]);
		case 32:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(2))
				]);
		case 33:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(3))
				]);
		case 34:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(4))
				]);
		case 35:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(5))
				]);
		case 36:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(6))
				]);
		case 37:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(7))
				]);
		case 39:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground($elm$core$Maybe$Nothing)
				]);
		case 40:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(0))
				]);
		case 41:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(1))
				]);
		case 42:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(2))
				]);
		case 43:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(3))
				]);
		case 44:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(4))
				]);
		case 45:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(5))
				]);
		case 46:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(6))
				]);
		case 47:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(7))
				]);
		case 49:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground($elm$core$Maybe$Nothing)
				]);
		case 51:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetFramed(true)
				]);
		case 90:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(8))
				]);
		case 91:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(9))
				]);
		case 92:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(10))
				]);
		case 93:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(11))
				]);
		case 94:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(12))
				]);
		case 95:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(13))
				]);
		case 96:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(14))
				]);
		case 97:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetForeground(
					$elm$core$Maybe$Just(15))
				]);
		case 100:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(8))
				]);
		case 101:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(9))
				]);
		case 102:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(10))
				]);
		case 103:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(11))
				]);
		case 104:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(12))
				]);
		case 105:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(13))
				]);
		case 106:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(14))
				]);
		case 107:
			return _List_fromArray(
				[
					$vito$elm_ansi$Ansi$SetBackground(
					$elm$core$Maybe$Just(15))
				]);
		default:
			return _List_Nil;
	}
};
var $vito$elm_ansi$Ansi$completeBracketed = F2(
	function (_v0, actions) {
		var model = _v0.b;
		var update = _v0.c;
		return A3(
			$vito$elm_ansi$Ansi$Parser,
			$vito$elm_ansi$Ansi$Unescaped(''),
			A3($elm$core$List$foldl, update, model, actions),
			update);
	});
var $vito$elm_ansi$Ansi$completeUnescaped = function (parser) {
	if (parser.a.$ === 2) {
		if (parser.a.a === '') {
			var model = parser.b;
			var update = parser.c;
			return model;
		} else {
			var str = parser.a.a;
			var model = parser.b;
			var update = parser.c;
			return A2(
				update,
				$vito$elm_ansi$Ansi$Print(str),
				model);
		}
	} else {
		var model = parser.b;
		return model;
	}
};
var $vito$elm_ansi$Ansi$CursorPosition = F2(
	function (a, b) {
		return {$: 18, a: a, b: b};
	});
var $vito$elm_ansi$Ansi$cursorPosition = function (codes) {
	_v0$5:
	while (true) {
		if (codes.b) {
			if (codes.a.$ === 1) {
				if (!codes.b.b) {
					var _v4 = codes.a;
					return _List_fromArray(
						[
							A2($vito$elm_ansi$Ansi$CursorPosition, 1, 1)
						]);
				} else {
					if (codes.b.a.$ === 1) {
						if (!codes.b.b.b) {
							var _v1 = codes.a;
							var _v2 = codes.b;
							var _v3 = _v2.a;
							return _List_fromArray(
								[
									A2($vito$elm_ansi$Ansi$CursorPosition, 1, 1)
								]);
						} else {
							break _v0$5;
						}
					} else {
						if (!codes.b.b.b) {
							var _v7 = codes.a;
							var _v8 = codes.b;
							var col = _v8.a.a;
							return _List_fromArray(
								[
									A2($vito$elm_ansi$Ansi$CursorPosition, 1, col)
								]);
						} else {
							break _v0$5;
						}
					}
				}
			} else {
				if (codes.b.b) {
					if (codes.b.a.$ === 1) {
						if (!codes.b.b.b) {
							var row = codes.a.a;
							var _v5 = codes.b;
							var _v6 = _v5.a;
							return _List_fromArray(
								[
									A2($vito$elm_ansi$Ansi$CursorPosition, row, 1)
								]);
						} else {
							break _v0$5;
						}
					} else {
						if (!codes.b.b.b) {
							var row = codes.a.a;
							var _v9 = codes.b;
							var col = _v9.a.a;
							return _List_fromArray(
								[
									A2($vito$elm_ansi$Ansi$CursorPosition, row, col)
								]);
						} else {
							break _v0$5;
						}
					}
				} else {
					break _v0$5;
				}
			}
		} else {
			break _v0$5;
		}
	}
	return _List_Nil;
};
var $vito$elm_ansi$Ansi$EraseAll = 2;
var $vito$elm_ansi$Ansi$EraseToBeginning = 0;
var $vito$elm_ansi$Ansi$EraseToEnd = 1;
var $vito$elm_ansi$Ansi$eraseMode = function (code) {
	switch (code) {
		case 0:
			return 1;
		case 1:
			return 0;
		default:
			return 2;
	}
};
var $vito$elm_ansi$Ansi$parseChar = F2(
	function (_char, parser) {
		switch (parser.a.$) {
			case 2:
				var str = parser.a.a;
				var model = parser.b;
				var update = parser.c;
				switch (_char) {
					case '\u000D':
						return A3(
							$vito$elm_ansi$Ansi$Parser,
							$vito$elm_ansi$Ansi$Unescaped(''),
							A2(
								update,
								$vito$elm_ansi$Ansi$CarriageReturn,
								$vito$elm_ansi$Ansi$completeUnescaped(parser)),
							update);
					case '\n':
						return A3(
							$vito$elm_ansi$Ansi$Parser,
							$vito$elm_ansi$Ansi$Unescaped(''),
							A2(
								update,
								$vito$elm_ansi$Ansi$Linebreak,
								$vito$elm_ansi$Ansi$completeUnescaped(parser)),
							update);
					case '\u001B':
						return A3(
							$vito$elm_ansi$Ansi$Parser,
							$vito$elm_ansi$Ansi$Escaped,
							$vito$elm_ansi$Ansi$completeUnescaped(parser),
							update);
					default:
						return A3(
							$vito$elm_ansi$Ansi$Parser,
							$vito$elm_ansi$Ansi$Unescaped(
								_Utils_ap(str, _char)),
							model,
							update);
				}
			case 0:
				var _v2 = parser.a;
				var model = parser.b;
				var update = parser.c;
				if (_char === '[') {
					return A3(
						$vito$elm_ansi$Ansi$Parser,
						A2($vito$elm_ansi$Ansi$CSI, _List_Nil, $elm$core$Maybe$Nothing),
						model,
						update);
				} else {
					return A3(
						$vito$elm_ansi$Ansi$Parser,
						$vito$elm_ansi$Ansi$Unescaped(_char),
						model,
						update);
				}
			default:
				var _v4 = parser.a;
				var codes = _v4.a;
				var currentCode = _v4.b;
				var model = parser.b;
				var update = parser.c;
				switch (_char) {
					case 'm':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							A2(
								$elm$core$List$concatMap,
								A2(
									$elm$core$Basics$composeL,
									$vito$elm_ansi$Ansi$codeActions,
									$elm$core$Maybe$withDefault(0)),
								_Utils_ap(
									codes,
									_List_fromArray(
										[currentCode]))));
					case 'A':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$CursorUp(
									A2($elm$core$Maybe$withDefault, 1, currentCode))
								]));
					case 'B':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$CursorDown(
									A2($elm$core$Maybe$withDefault, 1, currentCode))
								]));
					case 'C':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$CursorForward(
									A2($elm$core$Maybe$withDefault, 1, currentCode))
								]));
					case 'D':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$CursorBack(
									A2($elm$core$Maybe$withDefault, 1, currentCode))
								]));
					case 'E':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$CursorDown(
									A2($elm$core$Maybe$withDefault, 1, currentCode)),
									$vito$elm_ansi$Ansi$CursorColumn(0)
								]));
					case 'F':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$CursorUp(
									A2($elm$core$Maybe$withDefault, 1, currentCode)),
									$vito$elm_ansi$Ansi$CursorColumn(0)
								]));
					case 'G':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$CursorColumn(
									A2($elm$core$Maybe$withDefault, 0, currentCode))
								]));
					case 'H':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							$vito$elm_ansi$Ansi$cursorPosition(
								_Utils_ap(
									codes,
									_List_fromArray(
										[currentCode]))));
					case 'J':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$EraseDisplay(
									$vito$elm_ansi$Ansi$eraseMode(
										A2($elm$core$Maybe$withDefault, 0, currentCode)))
								]));
					case 'K':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[
									$vito$elm_ansi$Ansi$EraseLine(
									$vito$elm_ansi$Ansi$eraseMode(
										A2($elm$core$Maybe$withDefault, 0, currentCode)))
								]));
					case 'f':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							$vito$elm_ansi$Ansi$cursorPosition(
								_Utils_ap(
									codes,
									_List_fromArray(
										[currentCode]))));
					case 's':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[$vito$elm_ansi$Ansi$SaveCursorPosition]));
					case 'u':
						return A2(
							$vito$elm_ansi$Ansi$completeBracketed,
							parser,
							_List_fromArray(
								[$vito$elm_ansi$Ansi$RestoreCursorPosition]));
					case ';':
						return A3(
							$vito$elm_ansi$Ansi$Parser,
							A2(
								$vito$elm_ansi$Ansi$CSI,
								_Utils_ap(
									codes,
									_List_fromArray(
										[currentCode])),
								$elm$core$Maybe$Nothing),
							model,
							update);
					default:
						var c = _char;
						var _v6 = $elm$core$String$toInt(c);
						if (!_v6.$) {
							var num = _v6.a;
							return A3(
								$vito$elm_ansi$Ansi$Parser,
								A2(
									$vito$elm_ansi$Ansi$CSI,
									codes,
									$elm$core$Maybe$Just(
										(A2($elm$core$Maybe$withDefault, 0, currentCode) * 10) + num)),
								model,
								update);
						} else {
							return A2($vito$elm_ansi$Ansi$completeBracketed, parser, _List_Nil);
						}
				}
		}
	});
var $vito$elm_ansi$Ansi$parseInto = F3(
	function (model, update, ansi) {
		return $vito$elm_ansi$Ansi$completeParsing(
			A3(
				$elm$core$List$foldl,
				$vito$elm_ansi$Ansi$parseChar,
				A2($vito$elm_ansi$Ansi$emptyParser, model, update),
				A2($elm$core$String$split, '', ansi)));
	});
var $vito$elm_ansi$Ansi$Log$update = F2(
	function (str, model) {
		return A3(
			$vito$elm_ansi$Ansi$parseInto,
			_Utils_update(
				model,
				{bt: ''}),
			$vito$elm_ansi$Ansi$Log$handleAction,
			_Utils_ap(model.bt, str));
	});
var $author$project$Build$Output$Output$appendStepLog = F3(
	function (output, mtime, tree) {
		return function (a) {
			return A2($author$project$Build$StepTree$Models$map, a, tree);
		}(
			function (step) {
				var setLineTimestamp = F2(
					function (lineNo, timestamps) {
						return A3(
							$elm$core$Dict$update,
							lineNo,
							$elm$core$Basics$always(mtime),
							timestamps);
					});
				var outputLineCount = $elm$core$Array$length(
					A2(
						$vito$elm_ansi$Ansi$Log$update,
						output,
						$vito$elm_ansi$Ansi$Log$init(1)).ee);
				var newLog = A2($vito$elm_ansi$Ansi$Log$update, output, step.cR);
				var lastLineNo = A2(
					$elm$core$Basics$max,
					$elm$core$Array$length(step.cR.ee),
					1);
				var newTimestamps = A3(
					$elm$core$List$foldl,
					setLineTimestamp,
					step.eX,
					A2($elm$core$List$range, lastLineNo, (lastLineNo + outputLineCount) - 1));
				return _Utils_update(
					step,
					{cR: newLog, eX: newTimestamps});
			});
	});
var $author$project$Build$StepTree$Models$StepStateFailed = 5;
var $author$project$Build$Output$Output$setStepFinish = F2(
	function (mtime, tree) {
		return A2(
			$author$project$Build$StepTree$Models$map,
			function (step) {
				return _Utils_update(
					step,
					{dP: mtime});
			},
			tree);
	});
var $author$project$Build$Output$Output$setStepState = F2(
	function (state, tree) {
		return A2(
			$author$project$Build$StepTree$Models$map,
			function (step) {
				return _Utils_update(
					step,
					{hG: state});
			},
			tree);
	});
var $author$project$Build$Output$Output$finishStep = F3(
	function (succeeded, mtime, tree) {
		var stepState = succeeded ? 4 : 5;
		return A2(
			$author$project$Build$Output$Output$setStepFinish,
			mtime,
			A2($author$project$Build$Output$Output$setStepState, stepState, tree));
	});
var $author$project$Build$StepTree$Models$StepStateCancelled = 3;
var $author$project$Build$StepTree$Models$StepStateInterrupted = 2;
var $author$project$Build$StepTree$Models$finishStep = function (step) {
	var newState = function () {
		var _v0 = step.hG;
		switch (_v0) {
			case 1:
				return 2;
			case 0:
				return 3;
			default:
				var otherwise = _v0;
				return otherwise;
		}
	}();
	return _Utils_update(
		step,
		{hG: newState});
};
var $author$project$Build$StepTree$Models$finishHookedStep = function (hooked) {
	return _Utils_update(
		hooked,
		{
			z: $author$project$Build$StepTree$Models$finishTree(hooked.z),
			A: $author$project$Build$StepTree$Models$finishTree(hooked.A)
		});
};
var $author$project$Build$StepTree$Models$finishTree = function (root) {
	switch (root.$) {
		case 0:
			var step = root.a;
			return $author$project$Build$StepTree$Models$Task(
				$author$project$Build$StepTree$Models$finishStep(step));
		case 3:
			var step = root.a;
			return $author$project$Build$StepTree$Models$ArtifactInput(
				$author$project$Build$StepTree$Models$finishStep(step));
		case 4:
			var step = root.a;
			return $author$project$Build$StepTree$Models$Get(
				$author$project$Build$StepTree$Models$finishStep(step));
		case 5:
			var step = root.a;
			return $author$project$Build$StepTree$Models$ArtifactOutput(
				_Utils_update(
					step,
					{hG: 4}));
		case 6:
			var step = root.a;
			return $author$project$Build$StepTree$Models$Put(
				$author$project$Build$StepTree$Models$finishStep(step));
		case 1:
			var step = root.a;
			return $author$project$Build$StepTree$Models$SetPipeline(
				$author$project$Build$StepTree$Models$finishStep(step));
		case 2:
			var step = root.a;
			return $author$project$Build$StepTree$Models$LoadVar(
				$author$project$Build$StepTree$Models$finishStep(step));
		case 7:
			var trees = root.a;
			return $author$project$Build$StepTree$Models$Aggregate(
				A2($elm$core$Array$map, $author$project$Build$StepTree$Models$finishTree, trees));
		case 8:
			var trees = root.a;
			return $author$project$Build$StepTree$Models$InParallel(
				A2($elm$core$Array$map, $author$project$Build$StepTree$Models$finishTree, trees));
		case 9:
			var vars = root.a;
			var vals = root.b;
			var expanded = root.c;
			var step = root.d;
			var trees = root.e;
			return A5(
				$author$project$Build$StepTree$Models$Across,
				vars,
				vals,
				expanded,
				$author$project$Build$StepTree$Models$finishStep(step),
				A2($elm$core$Array$map, $author$project$Build$StepTree$Models$finishTree, trees));
		case 10:
			var trees = root.a;
			return $author$project$Build$StepTree$Models$Do(
				A2($elm$core$Array$map, $author$project$Build$StepTree$Models$finishTree, trees));
		case 11:
			var hookedStep = root.a;
			return $author$project$Build$StepTree$Models$OnSuccess(
				$author$project$Build$StepTree$Models$finishHookedStep(hookedStep));
		case 12:
			var hookedStep = root.a;
			return $author$project$Build$StepTree$Models$OnFailure(
				$author$project$Build$StepTree$Models$finishHookedStep(hookedStep));
		case 13:
			var hookedStep = root.a;
			return $author$project$Build$StepTree$Models$OnAbort(
				$author$project$Build$StepTree$Models$finishHookedStep(hookedStep));
		case 14:
			var hookedStep = root.a;
			return $author$project$Build$StepTree$Models$OnError(
				$author$project$Build$StepTree$Models$finishHookedStep(hookedStep));
		case 15:
			var hookedStep = root.a;
			return $author$project$Build$StepTree$Models$Ensure(
				$author$project$Build$StepTree$Models$finishHookedStep(hookedStep));
		case 16:
			var tree = root.a;
			return $author$project$Build$StepTree$Models$Try(
				$author$project$Build$StepTree$Models$finishTree(tree));
		case 17:
			var tabInfo = root.a;
			var trees = root.b;
			return A2(
				$author$project$Build$StepTree$Models$Retry,
				tabInfo,
				A2($elm$core$Array$map, $author$project$Build$StepTree$Models$finishTree, trees));
		default:
			var tree = root.a;
			return $author$project$Build$StepTree$Models$Timeout(
				$author$project$Build$StepTree$Models$finishTree(tree));
	}
};
var $author$project$Build$StepTree$StepTree$finished = function (root) {
	return _Utils_update(
		root,
		{
			dj: $author$project$Build$StepTree$Models$finishTree(root.dj)
		});
};
var $author$project$Build$StepTree$Models$StepStateRunning = 1;
var $author$project$Build$Output$Output$setStepInitialize = F2(
	function (time, tree) {
		return A2(
			$author$project$Build$StepTree$Models$map,
			function (step) {
				return _Utils_update(
					step,
					{
						gl: $elm$core$Maybe$Just(time)
					});
			},
			tree);
	});
var $author$project$Build$Output$Output$setInitialize = F2(
	function (time, tree) {
		return A2(
			$author$project$Build$Output$Output$setStepInitialize,
			time,
			A2($author$project$Build$Output$Output$setStepState, 1, tree));
	});
var $author$project$Build$Output$Output$setResourceInfo = F3(
	function (version, metadata, tree) {
		return A2(
			$author$project$Build$StepTree$Models$map,
			function (step) {
				return _Utils_update(
					step,
					{
						gN: metadata,
						dn: $elm$core$Maybe$Just(version)
					});
			},
			tree);
	});
var $author$project$Build$Output$Output$setRunning = $author$project$Build$Output$Output$setStepState(1);
var $author$project$Build$Output$Output$setStepStart = F2(
	function (time, tree) {
		return A2(
			$author$project$Build$StepTree$Models$map,
			function (step) {
				return _Utils_update(
					step,
					{
						hD: $elm$core$Maybe$Just(time)
					});
			},
			tree);
	});
var $author$project$Build$Output$Output$setStart = F2(
	function (time, tree) {
		return A2(
			$author$project$Build$Output$Output$setStepStart,
			time,
			A2($author$project$Build$Output$Output$setStepState, 1, tree));
	});
var $author$project$Build$StepTree$Models$StepStateErrored = 6;
var $author$project$Build$Output$Output$setStepError = F3(
	function (message, time, tree) {
		return A2(
			$author$project$Build$StepTree$Models$map,
			function (step) {
				return _Utils_update(
					step,
					{
						fL: $elm$core$Maybe$Just(message),
						dP: $elm$core$Maybe$Just(time),
						hG: 6
					});
			},
			tree);
	});
var $author$project$Build$StepTree$Models$updateAt = F3(
	function (id, update, root) {
		var _v0 = A2($elm$core$Dict$get, id, root.dS);
		if (_v0.$ === 1) {
			return root;
		} else {
			var focus = _v0.a;
			return _Utils_update(
				root,
				{
					dj: A2(focus, update, root.dj)
				});
		}
	});
var $author$project$Build$Output$Output$updateStep = F3(
	function (id, update, model) {
		return _Utils_update(
			model,
			{
				hI: A2(
					$elm$core$Maybe$map,
					A2($author$project$Build$StepTree$Models$updateAt, id, update),
					model.hI)
			});
	});
var $author$project$Build$Output$Output$handleEvent = F2(
	function (event, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		switch (event.$) {
			case 17:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{fM: true}),
					effects);
			case 13:
				var origin = event.a;
				var output = event.b;
				var time = event.c;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						A2(
							$elm$core$Basics$composeL,
							$author$project$Build$Output$Output$setRunning,
							A2($author$project$Build$Output$Output$appendStepLog, output, time)),
						model),
					effects);
			case 14:
				var origin = event.a;
				var output = event.b;
				var time = event.c;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						A2(
							$elm$core$Basics$composeL,
							$author$project$Build$Output$Output$setRunning,
							A2($author$project$Build$Output$Output$appendStepLog, '\u001B[1mselected worker: \u001B[0m' + (output + '\n'), time)),
						model),
					effects);
			case 15:
				var origin = event.a;
				var message = event.b;
				var time = event.c;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						A2($author$project$Build$Output$Output$setStepError, message, time),
						model),
					effects);
			case 1:
				var origin = event.a;
				var time = event.b;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						$author$project$Build$Output$Output$setInitialize(time),
						model),
					effects);
			case 2:
				var origin = event.a;
				var time = event.b;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						$author$project$Build$Output$Output$setStart(time),
						model),
					effects);
			case 3:
				var origin = event.a;
				var exitStatus = event.b;
				var time = event.c;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						A2(
							$author$project$Build$Output$Output$finishStep,
							!exitStatus,
							$elm$core$Maybe$Just(time)),
						model),
					effects);
			case 4:
				var origin = event.a;
				var time = event.b;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						$author$project$Build$Output$Output$setInitialize(time),
						model),
					effects);
			case 5:
				var origin = event.a;
				var time = event.b;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						$author$project$Build$Output$Output$setStart(time),
						model),
					effects);
			case 6:
				var origin = event.a;
				var time = event.b;
				var succeeded = event.c;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						A2(
							$author$project$Build$Output$Output$finishStep,
							succeeded,
							$elm$core$Maybe$Just(time)),
						model),
					effects);
			case 7:
				var origin = event.a;
				var time = event.b;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						$author$project$Build$Output$Output$setInitialize(time),
						model),
					effects);
			case 8:
				var origin = event.a;
				var time = event.b;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						$author$project$Build$Output$Output$setStart(time),
						model),
					effects);
			case 9:
				var origin = event.a;
				var exitStatus = event.b;
				var version = event.c;
				var metadata = event.d;
				var time = event.e;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						A2(
							$elm$core$Basics$composeL,
							A2($author$project$Build$Output$Output$finishStep, !exitStatus, time),
							A2($author$project$Build$Output$Output$setResourceInfo, version, metadata)),
						model),
					effects);
			case 10:
				var origin = event.a;
				var time = event.b;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						$author$project$Build$Output$Output$setInitialize(time),
						model),
					effects);
			case 11:
				var origin = event.a;
				var time = event.b;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						$author$project$Build$Output$Output$setStart(time),
						model),
					effects);
			case 12:
				var origin = event.a;
				var exitStatus = event.b;
				var version = event.c;
				var metadata = event.d;
				var time = event.e;
				return _Utils_Tuple2(
					A3(
						$author$project$Build$Output$Output$updateStep,
						origin.L,
						A2(
							$elm$core$Basics$composeL,
							A2($author$project$Build$Output$Output$finishStep, !exitStatus, time),
							A2($author$project$Build$Output$Output$setResourceInfo, version, metadata)),
						model),
					effects);
			case 0:
				var status = event.a;
				var newSt = A2(
					$elm$core$Maybe$map,
					function (st) {
						return $author$project$Concourse$BuildStatus$isRunning(status) ? st : $author$project$Build$StepTree$StepTree$finished(st);
					},
					model.hI);
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{hI: newSt}),
					effects);
			case 16:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{fN: $elm$core$Maybe$Nothing, hG: 2}),
					effects);
			default:
				return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Build$Output$Output$handleEnvelope = F2(
	function (_v0, _v1) {
		var url = _v0.h4;
		var data = _v0.dz;
		var model = _v1.a;
		var effects = _v1.b;
		return A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				function (p) {
					return A2($elm$core$String$endsWith, p, url);
				},
				model.fN)) ? A2(
			$author$project$Build$Output$Output$handleEvent,
			data,
			_Utils_Tuple2(model, effects)) : _Utils_Tuple2(model, effects);
	});
var $author$project$Build$Output$Output$handleEnvelopes = F2(
	function (envelopes, model) {
		return A3(
			$elm$core$List$foldr,
			$author$project$Build$Output$Output$handleEnvelope,
			_Utils_Tuple2(model, _List_Nil),
			$elm$core$List$reverse(envelopes));
	});
var $author$project$Build$Build$handleDelivery = F3(
	function (session, delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return A2(
			$author$project$Build$Header$Header$handleDelivery,
			delivery,
			A2(
				$author$project$Build$Shortcuts$handleDelivery,
				delivery,
				function () {
					_v1$5:
					while (true) {
						switch (delivery.$) {
							case 4:
								switch (delivery.a) {
									case 0:
										var _v2 = delivery.a;
										var time = delivery.b;
										return _Utils_Tuple2(
											_Utils_update(
												model,
												{
													en: $elm$core$Maybe$Just(time)
												}),
											_Utils_ap(
												effects,
												function () {
													var _v3 = session.d0;
													_v3$2:
													while (true) {
														if (_v3.$ === 1) {
															switch (_v3.a.$) {
																case 10:
																	var stepID = _v3.a.a;
																	return _List_fromArray(
																		[
																			$author$project$Message$Effects$GetViewportOf(
																			$author$project$Message$Message$FirstOccurrenceGetStepLabel(stepID))
																		]);
																case 11:
																	var stepID = _v3.a.a;
																	return _List_fromArray(
																		[
																			$author$project$Message$Effects$GetViewportOf(
																			$author$project$Message$Message$StepState(stepID))
																		]);
																default:
																	break _v3$2;
															}
														} else {
															break _v3$2;
														}
													}
													return _List_Nil;
												}()));
									case 1:
										var _v4 = delivery.a;
										return _Utils_Tuple2(
											model,
											_Utils_ap(
												effects,
												_List_fromArray(
													[$author$project$Message$Effects$FetchAllPipelines])));
									default:
										break _v1$5;
								}
							case 5:
								return _Utils_Tuple2(
									model,
									_Utils_ap(
										effects,
										_List_fromArray(
											[$author$project$Message$Effects$SyncStickyBuildLogHeaders])));
							case 7:
								if (!delivery.a.$) {
									var envelopes = delivery.a.a;
									var eventSourceClosed = A2(
										$elm$core$Maybe$withDefault,
										false,
										A2(
											$elm$core$Maybe$map,
											A2(
												$elm$core$Basics$composeR,
												function ($) {
													return $.fM;
												},
												$elm$core$Basics$not),
											$author$project$Build$Models$toMaybe(model.H)));
									var buildStatus = $elm_community$list_extra$List$Extra$last(
										A2(
											$elm$core$List$filterMap,
											function (_v9) {
												var data = _v9.dz;
												if (!data.$) {
													var status = data.a;
													var date = data.b;
													return $elm$core$Maybe$Just(
														_Utils_Tuple2(status, date));
												} else {
													return $elm$core$Maybe$Nothing;
												}
											},
											envelopes));
									var _v5 = A2(
										$author$project$Build$Build$updateOutput,
										$author$project$Build$Output$Output$handleEnvelopes(envelopes),
										function () {
											if (eventSourceClosed && A2(
												$elm$core$List$member,
												$author$project$Build$StepTree$Models$NetworkError,
												A2(
													$elm$core$List$map,
													function ($) {
														return $.dz;
													},
													envelopes))) {
												return _Utils_Tuple2(
													_Utils_update(
														model,
														{a8: false}),
													effects);
											} else {
												var _v6 = $author$project$Build$Build$getScrollBehavior(model);
												switch (_v6.$) {
													case 0:
														return _Utils_Tuple2(
															model,
															_Utils_ap(
																effects,
																_List_fromArray(
																	[
																		A2($author$project$Message$Effects$Scroll, $author$project$Message$ScrollDirection$ToBottom, $author$project$Build$Build$bodyId)
																	])));
													case 1:
														var id = _v6.a;
														return _Utils_Tuple2(
															_Utils_update(
																model,
																{a9: false, y: $author$project$Routes$HighlightNothing, bR: true}),
															_Utils_ap(
																effects,
																_List_fromArray(
																	[
																		A2(
																		$author$project$Message$Effects$Scroll,
																		$author$project$Message$ScrollDirection$ToId(id),
																		$author$project$Build$Build$bodyId)
																	])));
													default:
														return _Utils_Tuple2(model, effects);
												}
											}
										}());
									var newModel = _v5.a;
									var newEffects = _v5.b;
									var _v7 = _Utils_Tuple2(model.av, buildStatus);
									if (_v7.a && (!_v7.b.$)) {
										var _v8 = _v7.b.a;
										var status = _v8.a;
										return _Utils_Tuple2(
											newModel,
											$author$project$Concourse$BuildStatus$isRunning(model.hH) ? _Utils_ap(
												newEffects,
												_List_fromArray(
													[
														$author$project$Message$Effects$SetFavIcon(
														$elm$core$Maybe$Just(status))
													])) : newEffects);
									} else {
										return _Utils_Tuple2(newModel, newEffects);
									}
								} else {
									break _v1$5;
								}
							case 18:
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{bR: false}),
									effects);
							default:
								break _v1$5;
						}
					}
					return _Utils_Tuple2(model, effects);
				}()));
	});
var $elm$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			$elm$core$List$any,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),
			list);
	});
var $author$project$Dashboard$Footer$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$3:
		while (true) {
			switch (delivery.$) {
				case 0:
					var keyEvent = delivery.a;
					var _v2 = keyEvent.fq;
					if (_v2 === 9) {
						return (keyEvent.eM && _Utils_eq(model.dK, $author$project$Dashboard$Models$Hidden)) ? _Utils_Tuple2(
							_Utils_update(
								model,
								{
									eN: A2(
										$elm$core$List$all,
										$elm$core$List$isEmpty,
										$elm$core$Dict$values(
											A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, model.he))) ? false : (!model.eN)
								}),
							effects) : _Utils_Tuple2(model, effects);
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{d_: false, f9: 0}),
							effects);
					}
				case 2:
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{d_: false, f9: 0}),
						effects);
				case 4:
					if (!delivery.a) {
						var _v3 = delivery.a;
						return _Utils_Tuple2(
							(model.f9 > 4) ? _Utils_update(
								model,
								{d_: true}) : _Utils_update(
								model,
								{f9: model.f9 + 1}),
							effects);
					} else {
						break _v1$3;
					}
				default:
					break _v1$3;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Dashboard$RequestBuffer$handleDeliverySingle = F3(
	function (delivery, _v0, _v1) {
		var effect = _v0.a;
		var isPaused = _v0.c;
		var shouldFire = _v0.d;
		var model = _v1.a;
		var effects = _v1.b;
		if ((delivery.$ === 4) && (delivery.a === 1)) {
			var _v3 = delivery.a;
			return _Utils_Tuple2(
				isPaused(model) ? A2(shouldFire.cd, true, model) : A2(shouldFire.cd, false, model),
				(shouldFire.bO(model) && (!isPaused(model))) ? A2($elm$core$List$cons, effect, effects) : effects);
		} else {
			return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Dashboard$RequestBuffer$handleDelivery = function (delivery) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(
			$author$project$Dashboard$RequestBuffer$handleDeliverySingle(delivery)),
		A2($elm$core$List$foldl, $elm$core$Basics$composeR, $elm$core$Basics$identity));
};
var $author$project$Message$Effects$Blur = function (a) {
	return {$: 57, a: a};
};
var $author$project$Dashboard$Models$Shown = function (a) {
	return {$: 1, a: a};
};
var $author$project$Dashboard$SearchBar$arrowDown = F2(
	function (options, dropdown) {
		if (dropdown.$ === 1) {
			if (dropdown.a.$ === 1) {
				var _v1 = dropdown.a;
				return $author$project$Dashboard$Models$Shown(
					$elm$core$Maybe$Just(0));
			} else {
				var idx = dropdown.a.a;
				var newSelection = A2(
					$elm$core$Basics$modBy,
					$elm$core$List$length(options),
					idx + 1);
				return $author$project$Dashboard$Models$Shown(
					$elm$core$Maybe$Just(newSelection));
			}
		} else {
			return $author$project$Dashboard$Models$Hidden;
		}
	});
var $author$project$Dashboard$SearchBar$arrowUp = F2(
	function (options, dropdown) {
		if (dropdown.$ === 1) {
			if (dropdown.a.$ === 1) {
				var _v1 = dropdown.a;
				var lastItem = $elm$core$List$length(options) - 1;
				return $author$project$Dashboard$Models$Shown(
					$elm$core$Maybe$Just(lastItem));
			} else {
				var idx = dropdown.a.a;
				var newSelection = A2(
					$elm$core$Basics$modBy,
					$elm$core$List$length(options),
					idx - 1);
				return $author$project$Dashboard$Models$Shown(
					$elm$core$Maybe$Just(newSelection));
			}
		} else {
			return $author$project$Dashboard$Models$Hidden;
		}
	});
var $elm$core$String$trim = _String_trim;
var $elm$core$Set$union = F2(
	function (_v0, _v1) {
		var dict1 = _v0;
		var dict2 = _v1;
		return A2($elm$core$Dict$union, dict1, dict2);
	});
var $author$project$Dashboard$SearchBar$dropdownOptions = function (_v0) {
	var query = _v0.al;
	var teams = _v0.hQ;
	var pipelines = _v0.he;
	var _v1 = $elm$core$String$trim(query);
	switch (_v1) {
		case '':
			return _List_fromArray(
				['status: ', 'team: ']);
		case 'status:':
			return _List_fromArray(
				['status: paused', 'status: pending', 'status: failed', 'status: errored', 'status: aborted', 'status: running', 'status: succeeded']);
		case 'team:':
			return A2(
				$elm$core$List$map,
				function (teamName) {
					return 'team: ' + teamName;
				},
				A2(
					$elm$core$List$take,
					10,
					$elm$core$Set$toList(
						A2(
							$elm$core$Set$union,
							$elm$core$Set$fromList(
								A2(
									$elm$core$List$map,
									function ($) {
										return $.bX;
									},
									A2($author$project$FetchResult$withDefault, _List_Nil, teams))),
							$elm$core$Set$fromList(
								$elm$core$Dict$keys(
									A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, pipelines)))))));
		default:
			return _List_Nil;
	}
};
var $author$project$Dashboard$SearchBar$screenResize = F2(
	function (width, model) {
		var newSize = $author$project$ScreenSize$fromWindowSize(width);
		switch (newSize) {
			case 1:
				return _Utils_update(
					model,
					{dK: $author$project$Dashboard$Models$Hidden});
			case 2:
				return _Utils_update(
					model,
					{dK: $author$project$Dashboard$Models$Hidden});
			default:
				return model;
		}
	});
var $author$project$Dashboard$SearchBar$searchInputId = 'search-input-field';
var $author$project$Dashboard$SearchBar$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		switch (delivery.$) {
			case 5:
				var width = delivery.a;
				return _Utils_Tuple2(
					A2($author$project$Dashboard$SearchBar$screenResize, width, model),
					effects);
			case 0:
				var keyEvent = delivery.a;
				var options = $author$project$Dashboard$SearchBar$dropdownOptions(model);
				var _v2 = keyEvent.fq;
				switch (_v2) {
					case 10:
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									dK: A2($author$project$Dashboard$SearchBar$arrowUp, options, model.dK)
								}),
							effects);
					case 11:
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									dK: A2($author$project$Dashboard$SearchBar$arrowDown, options, model.dK)
								}),
							effects);
					case 12:
						var _v3 = model.dK;
						if (_v3.$ === 1) {
							if (!_v3.a.$) {
								var idx = _v3.a.a;
								var selectedItem = A2(
									$elm$core$Maybe$withDefault,
									model.al,
									A2(
										$elm$core$Array$get,
										idx,
										$elm$core$Array$fromList(options)));
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											dK: $author$project$Dashboard$Models$Shown($elm$core$Maybe$Nothing),
											al: selectedItem
										}),
									_List_fromArray(
										[
											$author$project$Message$Effects$ModifyUrl(
											$author$project$Routes$toString(
												$author$project$Routes$Dashboard(
													{
														fB: model.fB,
														hs: $author$project$Routes$Normal(selectedItem)
													})))
										]));
							} else {
								var _v4 = _v3.a;
								return _Utils_Tuple2(model, effects);
							}
						} else {
							return _Utils_Tuple2(model, effects);
						}
					case 13:
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$Blur($author$project$Dashboard$SearchBar$searchInputId)
									])));
					case 9:
						return _Utils_Tuple2(
							model,
							keyEvent.eM ? effects : _Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$Focus($author$project$Dashboard$SearchBar$searchInputId)
									])));
					default:
						return _Utils_Tuple2(model, effects);
				}
			default:
				return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Dashboard$Dashboard$handleDeliveryBody = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$6:
		while (true) {
			switch (delivery.$) {
				case 4:
					if (!delivery.a) {
						var _v2 = delivery.a;
						var time = delivery.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									aL: _List_Nil,
									en: $elm$core$Maybe$Just(time)
								}),
							model.aL);
					} else {
						break _v1$6;
					}
				case 5:
					return _Utils_Tuple2(
						model,
						_Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$GetViewportOf($author$project$Message$Message$Dashboard)
								])));
				case 13:
					return _Utils_Tuple2(
						model,
						_Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$GetViewportOf($author$project$Message$Message$Dashboard)
								])));
				case 15:
					if (!delivery.a.$) {
						var pipelines = delivery.a.a;
						return _Utils_eq(model.he, $elm$core$Maybe$Nothing) ? _Utils_Tuple2(
							_Utils_update(
								model,
								{
									he: $elm$core$Maybe$Just(
										A2(
											$author$project$Dashboard$Dashboard$groupBy,
											function ($) {
												return $.dh;
											},
											A2(
												$elm$core$List$map,
												A2(
													$author$project$Dashboard$Dashboard$toDashboardPipeline,
													true,
													_Utils_eq(
														model.V,
														$elm$core$Maybe$Just(1))),
												pipelines)))
								}),
							effects) : _Utils_Tuple2(model, effects);
					} else {
						break _v1$6;
					}
				case 14:
					if (!delivery.a.$) {
						var jobs = delivery.a.a;
						var newJobs = $author$project$FetchResult$Cached(
							$elm$core$Dict$fromList(
								A2(
									$elm$core$List$map,
									function (job) {
										return _Utils_Tuple2(
											_Utils_Tuple3(job.dh, job.c_, job.bX),
											job);
									},
									jobs)));
						var mapToJobIds = function (jobsResult) {
							return A2(
								$author$project$FetchResult$map,
								A2(
									$elm$core$Basics$composeR,
									$elm$core$Dict$toList,
									$elm$core$List$map($elm$core$Tuple$first)),
								jobsResult);
						};
						return A2(
							$author$project$FetchResult$changedFrom,
							mapToJobIds(model.d8),
							mapToJobIds(newJobs)) ? _Utils_Tuple2(
							$author$project$Dashboard$Dashboard$precomputeJobMetadata(
								_Utils_update(
									model,
									{d8: newJobs})),
							effects) : _Utils_Tuple2(model, effects);
					} else {
						break _v1$6;
					}
				case 16:
					if (!delivery.a.$) {
						var teams = delivery.a.a;
						var newTeams = $author$project$FetchResult$Cached(teams);
						return A2($author$project$FetchResult$changedFrom, model.hQ, newTeams) ? _Utils_Tuple2(
							_Utils_update(
								model,
								{hQ: newTeams}),
							effects) : _Utils_Tuple2(model, effects);
					} else {
						break _v1$6;
					}
				default:
					break _v1$6;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Dashboard$Dashboard$handleDelivery = function (delivery) {
	return A2(
		$elm$core$Basics$composeR,
		$author$project$Dashboard$SearchBar$handleDelivery(delivery),
		A2(
			$elm$core$Basics$composeR,
			$author$project$Dashboard$Footer$handleDelivery(delivery),
			A2(
				$elm$core$Basics$composeR,
				A2($author$project$Dashboard$RequestBuffer$handleDelivery, delivery, $author$project$Dashboard$Dashboard$buffers),
				$author$project$Dashboard$Dashboard$handleDeliveryBody(delivery))));
};
var $author$project$FlySuccess$Models$BlockedByBrowser = 3;
var $author$project$FlySuccess$Models$NetworkTrouble = 2;
var $author$project$FlySuccess$FlySuccess$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$3:
		while (true) {
			if (delivery.$ === 11) {
				switch (delivery.a) {
					case 0:
						var _v2 = delivery.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{aD: 1}),
							effects);
					case 2:
						var _v3 = delivery.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{aD: 2}),
							effects);
					case 3:
						var _v4 = delivery.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{aD: 3}),
							effects);
					default:
						break _v1$3;
				}
			} else {
				break _v1$3;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Job$Job$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$2:
		while (true) {
			if (delivery.$ === 4) {
				switch (delivery.a) {
					case 0:
						var _v2 = delivery.a;
						var time = delivery.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{en: time}),
							effects);
					case 1:
						var _v3 = delivery.a;
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										A2($author$project$Message$Effects$FetchJobBuilds, model.gG, model.aJ),
										$author$project$Message$Effects$FetchJob(model.gG),
										$author$project$Message$Effects$FetchAllPipelines
									])));
					default:
						break _v1$2;
				}
			} else {
				break _v1$2;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$NotFound$NotFound$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		if ((delivery.$ === 4) && (delivery.a === 1)) {
			var _v2 = delivery.a;
			return _Utils_Tuple2(
				model,
				_Utils_ap(
					effects,
					_List_fromArray(
						[$author$project$Message$Effects$FetchAllPipelines])));
		} else {
			return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Pipeline$Pipeline$timeUntilHidden = 10 * 1000;
var $author$project$Pipeline$Pipeline$timeUntilHiddenCheckInterval = 1 * 1000;
var $author$project$Pipeline$Pipeline$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		switch (delivery.$) {
			case 0:
				var keyEvent = delivery.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{ga: false, aO: 0}),
					(keyEvent.fq === 8) ? _Utils_ap(
						effects,
						_List_fromArray(
							[$author$project$Message$Effects$ResetPipelineFocus])) : effects);
			case 2:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{ga: false, aO: 0}),
					effects);
			case 4:
				switch (delivery.a) {
					case 0:
						var _v2 = delivery.a;
						return (_Utils_cmp(model.aO + $author$project$Pipeline$Pipeline$timeUntilHiddenCheckInterval, $author$project$Pipeline$Pipeline$timeUntilHidden) > 0) ? _Utils_Tuple2(
							_Utils_update(
								model,
								{ga: true}),
							effects) : _Utils_Tuple2(
							_Utils_update(
								model,
								{aO: model.aO + $author$project$Pipeline$Pipeline$timeUntilHiddenCheckInterval}),
							effects);
					case 1:
						var _v3 = delivery.a;
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$FetchPipeline(model.hd),
										$author$project$Message$Effects$FetchAllPipelines
									])));
					default:
						var _v4 = delivery.a;
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								_List_fromArray(
									[$author$project$Message$Effects$FetchClusterInfo])));
				}
			default:
				return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Message$Effects$FetchCheck = function (a) {
	return {$: 4, a: a};
};
var $author$project$Message$Effects$FetchInputTo = function (a) {
	return {$: 11, a: a};
};
var $author$project$Message$Effects$FetchOutputOf = function (a) {
	return {$: 12, a: a};
};
var $author$project$Resource$Resource$fetchDataForExpandedVersions = function (model) {
	return A2(
		$elm$core$List$concatMap,
		function (v) {
			return _List_fromArray(
				[
					$author$project$Message$Effects$FetchInputTo(v.L),
					$author$project$Message$Effects$FetchOutputOf(v.L)
				]);
		},
		A2(
			$elm$core$List$filter,
			function ($) {
				return $.fQ;
			},
			model.r.fw));
};
var $author$project$Resource$Resource$handleDelivery = F2(
	function (delivery, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$4:
		while (true) {
			switch (delivery.$) {
				case 0:
					var keyEvent = delivery.a;
					return ((keyEvent.fq === 12) && ($author$project$Keyboard$hasControlModifier(keyEvent) && model.cj)) ? _Utils_Tuple2(
						model,
						function () {
							var _v2 = model.hc;
							if (_v2.$ === 2) {
								var comment = _v2.a.dx;
								return _Utils_ap(
									effects,
									_List_fromArray(
										[
											A2($author$project$Message$Effects$SetPinComment, model.hj, comment)
										]));
							} else {
								return effects;
							}
						}()) : _Utils_Tuple2(model, effects);
				case 4:
					switch (delivery.a) {
						case 0:
							var _v3 = delivery.a;
							var time = delivery.b;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										en: $elm$core$Maybe$Just(time)
									}),
								function () {
									var _v4 = model.J;
									if (_v4.$ === 2) {
										var id = _v4.a;
										return _Utils_ap(
											effects,
											_List_fromArray(
												[
													$author$project$Message$Effects$FetchCheck(id)
												]));
									} else {
										return effects;
									}
								}());
						case 1:
							var _v5 = delivery.a;
							return _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									_Utils_ap(
										_List_fromArray(
											[
												$author$project$Message$Effects$FetchResource(model.hj),
												A2($author$project$Message$Effects$FetchVersionedResources, model.hj, model.aJ),
												$author$project$Message$Effects$FetchAllPipelines
											]),
										$author$project$Resource$Resource$fetchDataForExpandedVersions(model))));
						default:
							break _v1$4;
					}
				case 5:
					return _Utils_Tuple2(
						model,
						_Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$SyncTextareaHeight($author$project$Message$Message$ResourceCommentTextarea)
								])));
				default:
					break _v1$4;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$SubPage$SubPage$handleDelivery = F2(
	function (session, delivery) {
		return A7(
			$author$project$SubPage$SubPage$genericUpdate,
			A2($author$project$Build$Build$handleDelivery, session, delivery),
			$author$project$Job$Job$handleDelivery(delivery),
			$author$project$Resource$Resource$handleDelivery(delivery),
			$author$project$Pipeline$Pipeline$handleDelivery(delivery),
			$author$project$Dashboard$Dashboard$handleDelivery(delivery),
			$author$project$NotFound$NotFound$handleDelivery(delivery),
			$author$project$FlySuccess$FlySuccess$handleDelivery(delivery));
	});
var $author$project$Message$Effects$LoadExternal = function (a) {
	return {$: 35, a: a};
};
var $elm$url$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 1) {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $elm$url$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 1) {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $elm$url$Url$toString = function (url) {
	var http = function () {
		var _v0 = url.hh;
		if (!_v0) {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A3(
		$elm$url$Url$addPrefixed,
		'#',
		url.f3,
		A3(
			$elm$url$Url$addPrefixed,
			'?',
			url.al,
			_Utils_ap(
				A2(
					$elm$url$Url$addPort,
					url.hf,
					_Utils_ap(http, url.gc)),
				url.g7)));
};
var $author$project$Application$Application$routeMatchesModel = F2(
	function (route, model) {
		var _v0 = _Utils_Tuple2(route, model.o);
		_v0$6:
		while (true) {
			switch (_v0.b.$) {
				case 3:
					if (_v0.a.$ === 4) {
						return true;
					} else {
						break _v0$6;
					}
				case 2:
					if (_v0.a.$ === 1) {
						return true;
					} else {
						break _v0$6;
					}
				case 0:
					switch (_v0.a.$) {
						case 0:
							return true;
						case 3:
							return true;
						default:
							break _v0$6;
					}
				case 1:
					if (_v0.a.$ === 2) {
						return true;
					} else {
						break _v0$6;
					}
				case 5:
					if (_v0.a.$ === 5) {
						return true;
					} else {
						break _v0$6;
					}
				default:
					break _v0$6;
			}
		}
		return false;
	});
var $author$project$Job$Job$changeToJob = F2(
	function (flags, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					O: {
						fw: _List_Nil,
						g6: {bh: $elm$core$Maybe$Nothing, br: $elm$core$Maybe$Nothing}
					},
					aJ: flags.bl
				}),
			_Utils_ap(
				effects,
				_List_fromArray(
					[
						A2($author$project$Message$Effects$FetchJobBuilds, model.gG, flags.bl)
					])));
	});
var $author$project$Pipeline$Pipeline$changeToPipelineAndGroups = F2(
	function (_v0, _v1) {
		var pipelineLocator = _v0.hd;
		var selectedGroups = _v0.D;
		var model = _v1.a;
		var effects = _v1.b;
		if (_Utils_eq(model.hd, pipelineLocator)) {
			var _v2 = $author$project$Pipeline$Pipeline$renderIfNeeded(
				_Utils_Tuple2(
					_Utils_update(
						model,
						{D: selectedGroups}),
					_List_Nil));
			var newModel = _v2.a;
			var newEffects = _v2.b;
			return _Utils_Tuple2(
				newModel,
				_Utils_ap(
					effects,
					_Utils_ap(
						newEffects,
						_List_fromArray(
							[$author$project$Message$Effects$ResetPipelineFocus]))));
		} else {
			var _v3 = $author$project$Pipeline$Pipeline$init(
				{hd: pipelineLocator, D: selectedGroups, dk: model.dk});
			var newModel = _v3.a;
			var newEffects = _v3.b;
			return _Utils_Tuple2(
				newModel,
				_Utils_ap(effects, newEffects));
		}
	});
var $author$project$Resource$Resource$changeToResource = F2(
	function (flags, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					aJ: flags.bl,
					r: {
						fw: _List_Nil,
						g6: {bh: $elm$core$Maybe$Nothing, br: $elm$core$Maybe$Nothing}
					}
				}),
			_Utils_ap(
				effects,
				_List_fromArray(
					[
						A2($author$project$Message$Effects$FetchVersionedResources, model.hj, flags.bl),
						$author$project$Message$Effects$SyncTextareaHeight($author$project$Message$Message$ResourceCommentTextarea)
					])));
	});
var $author$project$SubPage$SubPage$urlUpdate = function (routes) {
	return A7(
		$author$project$SubPage$SubPage$genericUpdate,
		function () {
			var _v0 = routes.hX;
			switch (_v0.$) {
				case 0:
					var id = _v0.a.L;
					var highlight = _v0.a.y;
					return $author$project$Build$Build$changeToBuild(
						{
							dU: function () {
								var _v1 = routes.f4;
								if (!_v1.$) {
									var params = _v1.a;
									return $elm$core$Maybe$Just(
										$author$project$Build$Header$Models$JobBuildPage(params.L));
								} else {
									return $elm$core$Maybe$Nothing;
								}
							}(),
							y: highlight,
							b$: $author$project$Build$Header$Models$JobBuildPage(id)
						});
				case 3:
					var id = _v0.a.L;
					var highlight = _v0.a.y;
					return $author$project$Build$Build$changeToBuild(
						{
							dU: function () {
								var _v2 = routes.f4;
								if (_v2.$ === 3) {
									var params = _v2.a;
									return $elm$core$Maybe$Just(
										$author$project$Build$Header$Models$OneOffBuildPage(params.L));
								} else {
									return $elm$core$Maybe$Nothing;
								}
							}(),
							y: highlight,
							b$: $author$project$Build$Header$Models$OneOffBuildPage(id)
						});
				default:
					return $elm$core$Basics$identity;
			}
		}(),
		function () {
			var _v3 = routes.hX;
			if (_v3.$ === 2) {
				var id = _v3.a.L;
				var page = _v3.a.aX;
				return $author$project$Job$Job$changeToJob(
					{bT: id, bl: page});
			} else {
				return $elm$core$Basics$identity;
			}
		}(),
		function () {
			var _v4 = routes.hX;
			if (_v4.$ === 1) {
				var id = _v4.a.L;
				var page = _v4.a.aX;
				return $author$project$Resource$Resource$changeToResource(
					{bl: page, b8: id});
			} else {
				return $elm$core$Basics$identity;
			}
		}(),
		function () {
			var _v5 = routes.hX;
			if (_v5.$ === 4) {
				var id = _v5.a.L;
				var groups = _v5.a.bP;
				return $author$project$Pipeline$Pipeline$changeToPipelineAndGroups(
					{hd: id, D: groups});
			} else {
				return $elm$core$Basics$identity;
			}
		}(),
		function () {
			var _v6 = routes.hX;
			if (_v6.$ === 5) {
				var searchType = _v6.a.hs;
				var dashboardView = _v6.a.fB;
				return $elm$core$Tuple$mapFirst(
					function (dm) {
						return _Utils_update(
							dm,
							{
								fB: dashboardView,
								af: _Utils_eq(searchType, $author$project$Routes$HighDensity)
							});
					});
			} else {
				return $elm$core$Basics$identity;
			}
		}(),
		$elm$core$Basics$identity,
		$elm$core$Basics$identity);
};
var $author$project$Application$Application$urlUpdate = F2(
	function (route, model) {
		var _v0 = _Utils_eq(route, model.am) ? _Utils_Tuple2(model.o, _List_Nil) : (A2($author$project$Application$Application$routeMatchesModel, route, model) ? A2(
			$author$project$SubPage$SubPage$urlUpdate,
			{f4: model.am, hX: route},
			_Utils_Tuple2(model.o, _List_Nil)) : A2($author$project$SubPage$SubPage$init, model.e, route));
		var newSubmodel = _v0.a;
		var subEffects = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{am: route, o: newSubmodel}),
			_Utils_ap(
				subEffects,
				_List_fromArray(
					[
						$author$project$Message$Effects$SetFavIcon($elm$core$Maybe$Nothing)
					])));
	});
var $author$project$Application$Application$handleDeliveryForApplication = F2(
	function (delivery, model) {
		_v0$5:
		while (true) {
			switch (delivery.$) {
				case 6:
					var route = delivery.a;
					return _Utils_Tuple2(
						model,
						_List_fromArray(
							[
								$author$project$Message$Effects$LoadExternal(route)
							]));
				case 12:
					if (!delivery.a.$) {
						var tokenValue = delivery.a.a;
						var session = model.e;
						var newSession = _Utils_update(
							session,
							{aI: tokenValue});
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{e: newSession}),
							_List_Nil);
					} else {
						break _v0$5;
					}
				case 8:
					var route = delivery.a;
					return A2($author$project$Application$Application$urlUpdate, route, model);
				case 5:
					var width = delivery.a;
					var session = model.e;
					var newSession = _Utils_update(
						session,
						{
							c4: $author$project$ScreenSize$fromWindowSize(width)
						});
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{e: newSession}),
						_List_Nil);
				case 9:
					var request = delivery.a;
					if (!request.$) {
						var url = request.a;
						var _v2 = $author$project$Routes$parsePath(url);
						if (!_v2.$) {
							var route = _v2.a;
							return _Utils_Tuple2(
								model,
								_List_fromArray(
									[
										$author$project$Message$Effects$NavigateTo(
										$author$project$Routes$toString(route))
									]));
						} else {
							return _Utils_Tuple2(
								model,
								_List_fromArray(
									[
										$author$project$Message$Effects$LoadExternal(
										$elm$url$Url$toString(url))
									]));
						}
					} else {
						var url = request.a;
						return _Utils_Tuple2(
							model,
							_List_fromArray(
								[
									$author$project$Message$Effects$LoadExternal(url)
								]));
					}
				default:
					break _v0$5;
			}
		}
		return _Utils_Tuple2(model, _List_Nil);
	});
var $author$project$Application$Application$handleDelivery = F2(
	function (delivery, model) {
		var _v0 = A3(
			$author$project$SubPage$SubPage$handleNotFound,
			model.e.aU,
			model.am,
			A3(
				$author$project$SubPage$SubPage$handleDelivery,
				model.e,
				delivery,
				_Utils_Tuple2(model.o, _List_Nil)));
		var newSubmodel = _v0.a;
		var subPageEffects = _v0.b;
		var _v1 = A2(
			$author$project$Application$Application$handleDeliveryForApplication,
			delivery,
			_Utils_update(
				model,
				{o: newSubmodel}));
		var newModel = _v1.a;
		var applicationEffects = _v1.b;
		var _v2 = A2(
			$author$project$SideBar$SideBar$handleDelivery,
			delivery,
			_Utils_Tuple2(newModel.e, _List_Nil));
		var newSession = _v2.a;
		var sessionEffects = _v2.b;
		return _Utils_Tuple2(
			_Utils_update(
				newModel,
				{e: newSession}),
			_Utils_ap(
				subPageEffects,
				_Utils_ap(applicationEffects, sessionEffects)));
	});
var $author$project$Message$Effects$SaveFavoritedPipelines = function (a) {
	return {$: 77, a: a};
};
var $author$project$Message$Message$SideBarPipeline = F2(
	function (a, b) {
		return {$: 45, a: a, b: b};
	});
var $author$project$Message$Message$SideBarTeam = F2(
	function (a, b) {
		return {$: 44, a: a, b: b};
	});
var $elm$core$Set$remove = F2(
	function (key, _v0) {
		var dict = _v0;
		return A2($elm$core$Dict$remove, key, dict);
	});
var $author$project$SideBar$SideBar$update = F2(
	function (message, model) {
		var toggle = F2(
			function (element, set) {
				return A2($elm$core$Set$member, element, set) ? A2($elm$core$Set$remove, element, set) : A2($elm$core$Set$insert, element, set);
			});
		var toggleFavorite = function (pipelineID) {
			var favoritedPipelines = A2(toggle, pipelineID, model.fX);
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{fX: favoritedPipelines}),
				_List_fromArray(
					[
						$author$project$Message$Effects$SaveFavoritedPipelines(favoritedPipelines)
					]));
		};
		_v0$8:
		while (true) {
			switch (message.$) {
				case 18:
					switch (message.a.$) {
						case 42:
							var _v1 = message.a;
							var oldState = model.hz;
							var newState = _Utils_update(
								oldState,
								{gy: !oldState.gy});
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{hz: newState}),
								_List_fromArray(
									[
										$author$project$Message$Effects$SaveSideBarState(newState)
									]));
						case 44:
							var _v2 = message.a;
							var section = _v2.a;
							var teamName = _v2.b;
							if (section === 1) {
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											fR: A2(toggle, teamName, model.fR)
										}),
									_List_Nil);
							} else {
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											fs: A2(toggle, teamName, model.fs)
										}),
									_List_Nil);
							}
						case 43:
							var _v4 = message.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{cu: true}),
								_List_Nil);
						case 46:
							var pipelineID = message.a.a;
							return toggleFavorite(pipelineID);
						case 21:
							var _v5 = message.a;
							var pipelineID = _v5.b;
							return toggleFavorite(pipelineID);
						case 18:
							var pipelineID = message.a.a;
							return toggleFavorite(pipelineID);
						default:
							break _v0$8;
					}
				case 17:
					if (!message.a.$) {
						switch (message.a.a.$) {
							case 45:
								var _v6 = message.a.a;
								var section = _v6.a;
								var pipelineID = _v6.b;
								return _Utils_Tuple2(
									model,
									_List_fromArray(
										[
											$author$project$Message$Effects$GetViewportOf(
											A2($author$project$Message$Message$SideBarPipeline, section, pipelineID))
										]));
							case 44:
								var _v7 = message.a.a;
								var section = _v7.a;
								var teamName = _v7.b;
								return _Utils_Tuple2(
									model,
									_List_fromArray(
										[
											$author$project$Message$Effects$GetViewportOf(
											A2($author$project$Message$Message$SideBarTeam, section, teamName))
										]));
							default:
								break _v0$8;
						}
					} else {
						break _v0$8;
					}
				default:
					break _v0$8;
			}
		}
		return _Utils_Tuple2(model, _List_Nil);
	});
var $author$project$SubPage$SubPage$handleGoToRoute = F2(
	function (route, _v0) {
		var a = _v0.a;
		var effs = _v0.b;
		return _Utils_Tuple2(
			a,
			_Utils_ap(
				effs,
				_List_fromArray(
					[
						$author$project$Message$Effects$NavigateTo(
						$author$project$Routes$toString(route))
					])));
	});
var $author$project$Build$StepTree$StepTree$extendHighlight = F3(
	function (id, line, root) {
		var hl = function () {
			var _v0 = root.y;
			switch (_v0.$) {
				case 0:
					return A2($author$project$Routes$HighlightLine, id, line);
				case 1:
					var currentID = _v0.a;
					var currentLine = _v0.b;
					return _Utils_eq(currentID, id) ? ((_Utils_cmp(currentLine, line) < 0) ? A3($author$project$Routes$HighlightRange, id, currentLine, line) : A3($author$project$Routes$HighlightRange, id, line, currentLine)) : A2($author$project$Routes$HighlightLine, id, line);
				default:
					var currentID = _v0.a;
					var currentLine = _v0.b;
					return _Utils_eq(currentID, id) ? ((_Utils_cmp(currentLine, line) < 0) ? A3($author$project$Routes$HighlightRange, id, currentLine, line) : A3($author$project$Routes$HighlightRange, id, line, currentLine)) : A2($author$project$Routes$HighlightLine, id, line);
			}
		}();
		return _Utils_Tuple2(
			_Utils_update(
				root,
				{y: hl}),
			_List_fromArray(
				[
					$author$project$Message$Effects$ModifyUrl(
					$author$project$Routes$showHighlight(hl))
				]));
	});
var $author$project$Build$Output$Output$handleStepTreeMsg = F2(
	function (action, model) {
		var _v0 = model.hI;
		if (!_v0.$) {
			var st = _v0.a;
			var _v1 = action(st);
			var newModel = _v1.a;
			var effects = _v1.b;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						hI: $elm$core$Maybe$Just(newModel)
					}),
				effects);
		} else {
			return _Utils_Tuple2(model, _List_Nil);
		}
	});
var $author$project$Build$StepTree$StepTree$setHighlight = F3(
	function (id, line, root) {
		var hl = A2($author$project$Routes$HighlightLine, id, line);
		return _Utils_Tuple2(
			_Utils_update(
				root,
				{y: hl}),
			_List_fromArray(
				[
					$author$project$Message$Effects$ModifyUrl(
					$author$project$Routes$showHighlight(hl))
				]));
	});
var $author$project$Build$StepTree$Models$focusTabbed = F2(
	function (tab, tree) {
		if (tree.$ === 17) {
			var tabInfo = tree.a;
			var steps = tree.b;
			return A2(
				$author$project$Build$StepTree$Models$Retry,
				_Utils_update(
					tabInfo,
					{cz: 1, de: tab}),
				steps);
		} else {
			return tree;
		}
	});
var $author$project$Build$StepTree$StepTree$switchTab = F3(
	function (id, tab, root) {
		return _Utils_Tuple2(
			A3(
				$author$project$Build$StepTree$Models$updateAt,
				id,
				$author$project$Build$StepTree$Models$focusTabbed(tab),
				root),
			_List_Nil);
	});
var $author$project$Build$StepTree$StepTree$toggleStep = F2(
	function (id, root) {
		return _Utils_Tuple2(
			A3(
				$author$project$Build$StepTree$Models$updateAt,
				id,
				$author$project$Build$StepTree$Models$map(
					function (step) {
						return _Utils_update(
							step,
							{fQ: !step.fQ});
					}),
				root),
			_List_Nil);
	});
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$updateAt = F3(
	function (index, fn, list) {
		if (index < 0) {
			return list;
		} else {
			var tail = A2($elm$core$List$drop, index, list);
			var head = A2($elm$core$List$take, index, list);
			if (tail.b) {
				var x = tail.a;
				var xs = tail.b;
				return _Utils_ap(
					head,
					A2(
						$elm$core$List$cons,
						fn(x),
						xs));
			} else {
				return list;
			}
		}
	});
var $author$project$Build$StepTree$Models$toggleSubHeaderExpanded = F2(
	function (idx, tree) {
		if (tree.$ === 9) {
			var vars = tree.a;
			var vals = tree.b;
			var expanded = tree.c;
			var step = tree.d;
			var substeps = tree.e;
			var newExpanded = A3($elm_community$list_extra$List$Extra$updateAt, idx, $elm$core$Basics$not, expanded);
			return A5($author$project$Build$StepTree$Models$Across, vars, vals, newExpanded, step, substeps);
		} else {
			return tree;
		}
	});
var $author$project$Build$StepTree$StepTree$toggleStepSubHeader = F3(
	function (id, i, root) {
		return _Utils_Tuple2(
			A3(
				$author$project$Build$StepTree$Models$updateAt,
				id,
				$author$project$Build$StepTree$Models$toggleSubHeaderExpanded(i),
				root),
			_List_Nil);
	});
var $author$project$Message$ScrollDirection$Sideways = function (a) {
	return {$: 4, a: a};
};
var $author$project$Build$Header$Header$update = F2(
	function (msg, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$2:
		while (true) {
			switch (msg.$) {
				case 13:
					var event = msg.a;
					var scrollFactor = function () {
						var _v3 = event.fE;
						switch (_v3) {
							case 0:
								return 1;
							case 1:
								return 20;
							default:
								return 800;
						}
					}();
					var scroll = (!event.dE) ? _List_fromArray(
						[
							A2(
							$author$project$Message$Effects$Scroll,
							$author$project$Message$ScrollDirection$Sideways(event.fF * scrollFactor),
							$author$project$Build$Header$Header$historyId)
						]) : _List_fromArray(
						[
							A2(
							$author$project$Message$Effects$Scroll,
							$author$project$Message$ScrollDirection$Sideways((-event.dE) * scrollFactor),
							$author$project$Build$Header$Header$historyId)
						]);
					var checkVisibility = function () {
						var _v2 = $elm_community$list_extra$List$Extra$last(model.gb);
						if (!_v2.$) {
							var b = _v2.a;
							return _List_fromArray(
								[
									$author$project$Message$Effects$CheckIsVisible(
									$elm$core$String$fromInt(b.L))
								]);
						} else {
							return _List_Nil;
						}
					}();
					return _Utils_Tuple2(
						model,
						_Utils_ap(
							effects,
							_Utils_ap(scroll, checkVisibility)));
				case 18:
					if (msg.a.$ === 3) {
						var _v4 = msg.a;
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								$elm_community$maybe_extra$Maybe$Extra$toList(
									A2(
										$elm$core$Maybe$map,
										function (j) {
											return $author$project$Message$Effects$RerunJobBuild(
												{ff: model.bX, d7: j.d7, c_: j.c_, dh: j.dh});
										},
										model.gF))));
					} else {
						break _v1$2;
					}
				default:
					break _v1$2;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Build$Build$update = F2(
	function (msg, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return A2(
			$author$project$Build$Header$Header$update,
			msg,
			function () {
				_v1$10:
				while (true) {
					switch (msg.$) {
						case 18:
							switch (msg.a.$) {
								case 39:
									var _v2 = msg.a;
									var id = _v2.a;
									var name = _v2.b;
									return _Utils_Tuple2(
										model,
										_Utils_ap(
											effects,
											_List_fromArray(
												[
													$author$project$Message$Effects$NavigateTo(
													$author$project$Routes$toString(
														A3($author$project$Routes$buildRoute, id, name, model.gF)))
												])));
								case 1:
									var _v3 = msg.a;
									return A2(
										$elm$core$Maybe$withDefault,
										$elm$core$Basics$identity,
										A2(
											$elm$core$Maybe$map,
											A2(
												$elm$core$Basics$composeR,
												$author$project$Message$Effects$DoTriggerBuild,
												A2($elm$core$Basics$composeR, $elm$core$List$cons, $elm$core$Tuple$mapSecond)),
											model.gF))(
										_Utils_Tuple2(model, effects));
								case 2:
									var _v4 = msg.a;
									return _Utils_Tuple2(
										model,
										A2(
											$elm$core$List$cons,
											$author$project$Message$Effects$DoAbortBuild(model.L),
											effects));
								case 29:
									var id = msg.a.a;
									return A2(
										$author$project$Build$Build$updateOutput,
										$author$project$Build$Output$Output$handleStepTreeMsg(
											$author$project$Build$StepTree$StepTree$toggleStep(id)),
										_Utils_Tuple2(
											model,
											_Utils_ap(
												effects,
												_List_fromArray(
													[$author$project$Message$Effects$SyncStickyBuildLogHeaders]))));
								case 30:
									var _v5 = msg.a;
									var id = _v5.a;
									var i = _v5.b;
									return A2(
										$author$project$Build$Build$updateOutput,
										$author$project$Build$Output$Output$handleStepTreeMsg(
											A2($author$project$Build$StepTree$StepTree$toggleStepSubHeader, id, i)),
										_Utils_Tuple2(
											model,
											_Utils_ap(
												effects,
												_List_fromArray(
													[$author$project$Message$Effects$SyncStickyBuildLogHeaders]))));
								case 28:
									var _v6 = msg.a;
									var id = _v6.a;
									var tab = _v6.b;
									return A2(
										$author$project$Build$Build$updateOutput,
										$author$project$Build$Output$Output$handleStepTreeMsg(
											A2($author$project$Build$StepTree$StepTree$switchTab, id, tab)),
										_Utils_Tuple2(model, effects));
								default:
									break _v1$10;
							}
						case 15:
							var id = msg.a;
							var line = msg.b;
							return A2(
								$author$project$Build$Build$updateOutput,
								$author$project$Build$Output$Output$handleStepTreeMsg(
									A2($author$project$Build$StepTree$StepTree$setHighlight, id, line)),
								_Utils_Tuple2(model, effects));
						case 16:
							var id = msg.a;
							var line = msg.b;
							return A2(
								$author$project$Build$Build$updateOutput,
								$author$project$Build$Output$Output$handleStepTreeMsg(
									A2($author$project$Build$StepTree$StepTree$extendHighlight, id, line)),
								_Utils_Tuple2(model, effects));
						case 19:
							var route = msg.a;
							return _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$NavigateTo(
											$author$project$Routes$toString(route))
										])));
						case 20:
							var scrollHeight = msg.a.hp;
							var scrollTop = msg.a.hq;
							var clientHeight = msg.a.fp;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										a9: _Utils_eq(scrollHeight, scrollTop + clientHeight) && (!model.bR)
									}),
								effects);
						default:
							break _v1$10;
					}
				}
				return _Utils_Tuple2(model, effects);
			}());
	});
var $author$project$Dashboard$SearchBar$showSearchInput = F2(
	function (session, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		if (model.af) {
			return _Utils_Tuple2(model, effects);
		} else {
			var isMobile = !session.c4;
			var isDropDownHidden = _Utils_eq(model.dK, $author$project$Dashboard$Models$Hidden);
			return (isDropDownHidden && (isMobile && (model.al === ''))) ? _Utils_Tuple2(
				_Utils_update(
					model,
					{
						dK: $author$project$Dashboard$Models$Shown($elm$core$Maybe$Nothing)
					}),
				_Utils_ap(
					effects,
					_List_fromArray(
						[
							$author$project$Message$Effects$Focus($author$project$Dashboard$SearchBar$searchInputId)
						]))) : _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Dashboard$SearchBar$update = F3(
	function (session, msg, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$5:
		while (true) {
			switch (msg.$) {
				case 18:
					switch (msg.a.$) {
						case 31:
							var _v2 = msg.a;
							return A2(
								$author$project$Dashboard$SearchBar$showSearchInput,
								session,
								_Utils_Tuple2(model, effects));
						case 32:
							var _v3 = msg.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{al: ''}),
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$Focus($author$project$Dashboard$SearchBar$searchInputId),
											$author$project$Message$Effects$ModifyUrl(
											$author$project$Routes$toString(
												$author$project$Routes$Dashboard(
													{
														fB: model.fB,
														hs: $author$project$Routes$Normal('')
													})))
										])));
						default:
							break _v1$5;
					}
				case 0:
					var query = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{al: query}),
						_Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$Focus($author$project$Dashboard$SearchBar$searchInputId),
									$author$project$Message$Effects$ModifyUrl(
									$author$project$Routes$toString(
										$author$project$Routes$Dashboard(
											{
												fB: model.fB,
												hs: $author$project$Routes$Normal(query)
											})))
								])));
				case 1:
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								dK: $author$project$Dashboard$Models$Shown($elm$core$Maybe$Nothing)
							}),
						effects);
				case 2:
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{dK: $author$project$Dashboard$Models$Hidden}),
						effects);
				default:
					break _v1$5;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Message$Effects$ChangeVisibility = F2(
	function (a, b) {
		return {$: 59, a: a, b: b};
	});
var $author$project$Dashboard$Models$Dragging = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Dashboard$Models$Dropping = function (a) {
	return {$: 1, a: a};
};
var $author$project$Dashboard$Models$DroppingWhileApiRequestInFlight = function (a) {
	return {$: 2, a: a};
};
var $author$project$Message$Message$Expose = 0;
var $author$project$Message$Message$Hide = 1;
var $author$project$Message$Effects$SendOrderPipelinesRequest = F2(
	function (a, b) {
		return {$: 47, a: a, b: b};
	});
var $author$project$Message$Effects$SendTogglePipelineRequest = F2(
	function (a, b) {
		return {$: 44, a: a, b: b};
	});
var $author$project$Message$Effects$ShowTooltip = function (a) {
	return {$: 45, a: a};
};
var $author$project$Message$Effects$ShowTooltipHd = function (a) {
	return {$: 46, a: a};
};
var $author$project$Dashboard$Drag$insertAt = F3(
	function (idx, x, xs) {
		var _v0 = _Utils_Tuple2(idx > 0, xs);
		if (_v0.a && _v0.b.b) {
			var _v1 = _v0.b;
			var head = _v1.a;
			var tail = _v1.b;
			return A2(
				$elm$core$List$cons,
				head,
				A3($author$project$Dashboard$Drag$insertAt, idx - 1, x, tail));
		} else {
			return A2($elm$core$List$cons, x, xs);
		}
	});
var $author$project$Dashboard$Drag$drag = F3(
	function (from, to, xs) {
		if (_Utils_cmp(from, to) > -1) {
			var n = $elm$core$List$length(xs);
			return $elm$core$List$reverse(
				A3(
					$author$project$Dashboard$Drag$drag,
					(n - from) - 1,
					(n - to) + 1,
					$elm$core$List$reverse(xs)));
		} else {
			if (!xs.b) {
				return _List_Nil;
			} else {
				var head = xs.a;
				var tail = xs.b;
				return (!from) ? A3($author$project$Dashboard$Drag$insertAt, to - 1, head, tail) : A2(
					$elm$core$List$cons,
					head,
					A3($author$project$Dashboard$Drag$drag, from - 1, to - 1, tail));
			}
		}
	});
var $author$project$Dashboard$Drag$dragPipeline = F3(
	function (pipeline, target, pipelines) {
		var pipelineIndex = function (name) {
			return A2(
				$elm_community$list_extra$List$Extra$findIndex,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.bX;
					},
					$elm$core$Basics$eq(name)),
				pipelines);
		};
		var toIndex = function () {
			if (!target.$) {
				var name = target.a;
				return pipelineIndex(name);
			} else {
				var name = target.a;
				return A2(
					$elm$core$Maybe$map,
					$elm$core$Basics$add(1),
					pipelineIndex(name));
			}
		}();
		var fromIndex = pipelineIndex(pipeline);
		var _v0 = _Utils_Tuple2(fromIndex, toIndex);
		if ((!_v0.a.$) && (!_v0.b.$)) {
			var from = _v0.a.a;
			var to = _v0.b.a;
			return A3($author$project$Dashboard$Drag$drag, from, to + 1, pipelines);
		} else {
			return pipelines;
		}
	});
var $author$project$Dashboard$Dashboard$findPipeline = F2(
	function (pipelineId, pipelines) {
		return A2(
			$elm$core$Maybe$andThen,
			$elm_community$list_extra$List$Extra$find(
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.bX;
					},
					$elm$core$Basics$eq(pipelineId.c_))),
			A2(
				$elm$core$Maybe$andThen,
				$elm$core$Dict$get(pipelineId.dh),
				pipelines));
	});
var $author$project$Dashboard$Dashboard$toConcoursePipeline = function (p) {
	return {e5: p.e5, bP: _List_Nil, L: p.L, bX: p.bX, bn: p.bn, eB: p.eB, dh: p.dh};
};
var $author$project$Dashboard$Dashboard$updateBody = F2(
	function (msg, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$11:
		while (true) {
			switch (msg.$) {
				case 5:
					var teamName = msg.a;
					var pipelineName = msg.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								w: A2($author$project$Dashboard$Models$Dragging, teamName, pipelineName)
							}),
						effects);
				case 6:
					var target = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								K: $author$project$Dashboard$Models$Dropping(target)
							}),
						effects);
				case 9:
					var pipelineName = msg.a;
					var teamName = msg.b;
					return _Utils_Tuple2(
						model,
						_Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$ShowTooltipHd(
									_Utils_Tuple2(pipelineName, teamName))
								])));
				case 8:
					var pipelineName = msg.a;
					var teamName = msg.b;
					return _Utils_Tuple2(
						model,
						_Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$ShowTooltip(
									_Utils_Tuple2(pipelineName, teamName))
								])));
				case 7:
					var _v2 = _Utils_Tuple2(model.w, model.K);
					if ((_v2.a.$ === 1) && (_v2.b.$ === 1)) {
						var _v3 = _v2.a;
						var teamName = _v3.a;
						var pipelineName = _v3.b;
						var target = _v2.b.a;
						var teamPipelines = A3(
							$author$project$Dashboard$Drag$dragPipeline,
							pipelineName,
							target,
							A2(
								$elm$core$Maybe$withDefault,
								_List_Nil,
								A2(
									$elm$core$Maybe$andThen,
									$elm$core$Dict$get(teamName),
									model.he)));
						var pipelines = A3(
							$elm$core$Dict$update,
							teamName,
							$elm$core$Basics$always(
								$elm$core$Maybe$Just(teamPipelines)),
							A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, model.he));
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									w: $author$project$Dashboard$Models$NotDragging,
									K: $author$project$Dashboard$Models$DroppingWhileApiRequestInFlight(teamName),
									he: $elm$core$Maybe$Just(pipelines)
								}),
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										A2(
										$author$project$Message$Effects$SendOrderPipelinesRequest,
										teamName,
										A2(
											$elm$core$List$map,
											function ($) {
												return $.bX;
											},
											teamPipelines)),
										$author$project$Message$Effects$SaveCachedPipelines(
										A2(
											$elm$core$List$map,
											$author$project$Dashboard$Dashboard$toConcoursePipeline,
											$elm$core$List$concat(
												$elm$core$Dict$values(pipelines))))
									])));
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{w: $author$project$Dashboard$Models$NotDragging, K: $author$project$Dashboard$Models$NotDropping}),
							effects);
					}
				case 17:
					if (!msg.a.$) {
						var domID = msg.a.a;
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$GetViewportOf(domID)
									])));
					} else {
						break _v1$11;
					}
				case 18:
					switch (msg.a.$) {
						case 34:
							var _v4 = msg.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{d8: $author$project$FetchResult$None, he: $elm$core$Maybe$Nothing, hQ: $author$project$FetchResult$None}),
								effects);
						case 17:
							var _v5 = msg.a;
							var pipelineId = _v5.b;
							var isPaused = A2(
								$elm$core$Maybe$map,
								function ($) {
									return $.bn;
								},
								A2($author$project$Dashboard$Dashboard$findPipeline, pipelineId, model.he));
							if (!isPaused.$) {
								var ip = isPaused.a;
								return _Utils_Tuple2(
									A3(
										$author$project$Dashboard$Dashboard$updatePipeline,
										function (p) {
											return _Utils_update(
												p,
												{d5: true});
										},
										pipelineId,
										model),
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												A2($author$project$Message$Effects$SendTogglePipelineRequest, pipelineId, ip)
											])));
							} else {
								return _Utils_Tuple2(model, effects);
							}
						case 20:
							var _v7 = msg.a;
							var pipelineId = _v7.b;
							var isPublic = A2(
								$elm$core$Maybe$map,
								function ($) {
									return $.eB;
								},
								A2($author$project$Dashboard$Dashboard$findPipeline, pipelineId, model.he));
							if (!isPublic.$) {
								var _public = isPublic.a;
								return _Utils_Tuple2(
									A3(
										$author$project$Dashboard$Dashboard$updatePipeline,
										function (p) {
											return _Utils_update(
												p,
												{aR: true});
										},
										pipelineId,
										model),
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												_public ? A2($author$project$Message$Effects$ChangeVisibility, 1, pipelineId) : A2($author$project$Message$Effects$ChangeVisibility, 0, pipelineId)
											])));
							} else {
								return _Utils_Tuple2(model, effects);
							}
						case 42:
							var _v9 = msg.a;
							return _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$GetViewportOf($author$project$Message$Message$Dashboard)
										])));
						default:
							break _v1$11;
					}
				case 20:
					var scrollState = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hq: scrollState.hq}),
						effects);
				default:
					break _v1$11;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Dashboard$Dashboard$update = F2(
	function (session, msg) {
		return A2(
			$elm$core$Basics$composeR,
			A2($author$project$Dashboard$SearchBar$update, session, msg),
			$author$project$Dashboard$Dashboard$updateBody(msg));
	});
var $author$project$FlySuccess$Models$Clicked = 2;
var $author$project$FlySuccess$Models$InputHovered = 1;
var $author$project$FlySuccess$Models$Hovered = 1;
var $author$project$FlySuccess$Models$hover = F2(
	function (hovered, buttonState) {
		if (buttonState === 2) {
			return 2;
		} else {
			return hovered ? 1 : 0;
		}
	});
var $author$project$FlySuccess$FlySuccess$update = F2(
	function (msg, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$5:
		while (true) {
			switch (msg.$) {
				case 17:
					if (!msg.a.$) {
						switch (msg.a.a.$) {
							case 24:
								var _v2 = msg.a.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											as: A2($author$project$FlySuccess$Models$hover, true, model.as)
										}),
									effects);
							case 25:
								var _v3 = msg.a.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											a0: A2($author$project$FlySuccess$Models$hover, true, model.a0)
										}),
									effects);
							case 26:
								var _v4 = msg.a.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{bG: 1}),
									effects);
							default:
								break _v1$5;
						}
					} else {
						var _v5 = msg.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									as: A2($author$project$FlySuccess$Models$hover, false, model.as),
									bG: 0,
									a0: A2($author$project$FlySuccess$Models$hover, false, model.a0)
								}),
							effects);
					}
				case 18:
					if (msg.a.$ === 24) {
						var _v6 = msg.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{as: 2}),
							effects);
					} else {
						break _v1$5;
					}
				default:
					break _v1$5;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Message$Effects$PauseJob = function (a) {
	return {$: 30, a: a};
};
var $author$project$Message$Effects$UnpauseJob = function (a) {
	return {$: 31, a: a};
};
var $author$project$Job$Job$update = F2(
	function (action, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$2:
		while (true) {
			if (action.$ === 18) {
				switch (action.a.$) {
					case 1:
						var _v2 = action.a;
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								_List_fromArray(
									[
										$author$project$Message$Effects$DoTriggerBuild(model.gG)
									])));
					case 0:
						var _v3 = action.a;
						var _v4 = $krisajenkins$remotedata$RemoteData$toMaybe(model.gF);
						if (_v4.$ === 1) {
							return _Utils_Tuple2(model, effects);
						} else {
							var j = _v4.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										gF: $krisajenkins$remotedata$RemoteData$Success(
											_Utils_update(
												j,
												{bn: !j.bn})),
										cZ: true
									}),
								j.bn ? _Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$UnpauseJob(model.gG)
										])) : _Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$PauseJob(model.gG)
										])));
						}
					default:
						break _v1$2;
				}
			} else {
				break _v1$2;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Message$Effects$SendLogOutRequest = {$: 48};
var $author$project$Login$Login$update = F2(
	function (msg, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$3:
		while (true) {
			if (msg.$ === 18) {
				switch (msg.a.$) {
					case 33:
						var _v2 = msg.a;
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								_List_fromArray(
									[$author$project$Message$Effects$RedirectToLogin])));
					case 34:
						var _v3 = msg.a;
						return _Utils_Tuple2(
							model,
							_Utils_ap(
								effects,
								_List_fromArray(
									[$author$project$Message$Effects$SendLogOutRequest])));
					case 35:
						var _v4 = msg.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{gE: !model.gE}),
							effects);
					default:
						break _v1$3;
				}
			} else {
				break _v1$3;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$Pipeline$Pipeline$getNextUrl = F2(
	function (newGroups, model) {
		return $author$project$Routes$toString(
			$author$project$Routes$Pipeline(
				{bP: newGroups, L: model.hd}));
	});
var $author$project$Pipeline$Pipeline$getDefaultSelectedGroups = function (pipeline) {
	if (pipeline.$ === 3) {
		var p = pipeline.a;
		var _v1 = $elm$core$List$head(p.bP);
		if (_v1.$ === 1) {
			return _List_Nil;
		} else {
			var first = _v1.a;
			return _List_fromArray(
				[first.bX]);
		}
	} else {
		return _List_Nil;
	}
};
var $author$project$Pipeline$Pipeline$toggleGroup = F3(
	function (grp, names, mpipeline) {
		return A2($elm$core$List$member, grp.bX, names) ? A2(
			$elm$core$List$filter,
			$elm$core$Basics$neq(grp.bX),
			names) : ($elm$core$List$isEmpty(names) ? A2(
			$elm$core$List$cons,
			grp.bX,
			$author$project$Pipeline$Pipeline$getDefaultSelectedGroups(mpipeline)) : A2($elm$core$List$cons, grp.bX, names));
	});
var $author$project$Pipeline$PinMenu$PinMenu$update = F2(
	function (message, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		if ((message.$ === 18) && (message.a.$ === 12)) {
			var _v2 = message.a;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{bp: !model.bp}),
				effects);
		} else {
			return _Utils_Tuple2(model, effects);
		}
	});
var $author$project$Pipeline$Pipeline$update = F2(
	function (msg, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		return A2(
			$author$project$Pipeline$PinMenu$PinMenu$update,
			msg,
			function () {
				_v1$3:
				while (true) {
					switch (msg.$) {
						case 3:
							var group = msg.a;
							return _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$NavigateTo(
											A2(
												$author$project$Pipeline$Pipeline$getNextUrl,
												A3($author$project$Pipeline$Pipeline$toggleGroup, group, model.D, model.az),
												model))
										])));
						case 4:
							var groups = msg.a;
							return _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$NavigateTo(
											A2($author$project$Pipeline$Pipeline$getNextUrl, groups, model))
										])));
						case 18:
							if (msg.a.$ === 19) {
								var pipelineIdentifier = msg.a.a;
								var paused = A2(
									$krisajenkins$remotedata$RemoteData$map,
									function ($) {
										return $.bn;
									},
									model.az);
								if (paused.$ === 3) {
									var p = paused.a;
									return _Utils_Tuple2(
										_Utils_update(
											model,
											{d5: true}),
										_Utils_ap(
											effects,
											_List_fromArray(
												[
													A2($author$project$Message$Effects$SendTogglePipelineRequest, pipelineIdentifier, p)
												])));
								} else {
									return _Utils_Tuple2(model, effects);
								}
							} else {
								break _v1$3;
							}
						default:
							break _v1$3;
					}
				}
				return _Utils_Tuple2(model, effects);
			}());
	});
var $author$project$Resource$Models$CheckPending = {$: 1};
var $author$project$Message$Message$Disable = 1;
var $author$project$Message$Effects$DoCheck = function (a) {
	return {$: 41, a: a};
};
var $author$project$Message$Effects$DoPinVersion = function (a) {
	return {$: 38, a: a};
};
var $author$project$Message$Effects$DoToggleVersion = F2(
	function (a, b) {
		return {$: 40, a: a, b: b};
	});
var $author$project$Message$Effects$DoUnpinVersion = function (a) {
	return {$: 39, a: a};
};
var $author$project$Message$Message$Enable = 0;
var $author$project$Pinned$PinningTo = function (a) {
	return {$: 1, a: a};
};
var $author$project$Pinned$Switching = F3(
	function (a, b, c) {
		return {$: 5, a: a, b: b, c: c};
	});
var $author$project$Pinned$startPinningTo = F2(
	function (destination, resourcePinState) {
		switch (resourcePinState.$) {
			case 0:
				return $author$project$Pinned$PinningTo(destination);
			case 2:
				var comment = resourcePinState.a;
				var version = resourcePinState.b;
				return A3($author$project$Pinned$Switching, comment, version, destination);
			default:
				var x = resourcePinState;
				return x;
		}
	});
var $author$project$Pinned$startUnpinning = function (resourcePinState) {
	if (resourcePinState.$ === 2) {
		var c = resourcePinState.a;
		var v = resourcePinState.b;
		return A2($author$project$Pinned$UnpinningFrom, c, v);
	} else {
		var x = resourcePinState;
		return x;
	}
};
var $author$project$Resource$Resource$update = F2(
	function (msg, _v0) {
		var model = _v0.a;
		var effects = _v0.b;
		_v1$11:
		while (true) {
			switch (msg.$) {
				case 10:
					var input = msg.a;
					var newPinnedVersion = function () {
						var _v11 = model.hc;
						if (_v11.$ === 2) {
							var pristineComment = _v11.a.ex;
							var v = _v11.b;
							return A2(
								$author$project$Pinned$PinnedDynamicallyTo,
								{dx: input, ex: pristineComment},
								v);
						} else {
							var x = _v11;
							return x;
						}
					}();
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hc: newPinnedVersion}),
						_Utils_ap(
							effects,
							_List_fromArray(
								[
									$author$project$Message$Effects$SyncTextareaHeight($author$project$Message$Message$ResourceCommentTextarea)
								])));
				case 18:
					switch (msg.a.$) {
						case 36:
							var page = msg.a.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										aJ: $elm$core$Maybe$Just(page)
									}),
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											A2(
											$author$project$Message$Effects$FetchVersionedResources,
											model.hj,
											$elm$core$Maybe$Just(page)),
											$author$project$Message$Effects$NavigateTo(
											$author$project$Routes$toString(
												$author$project$Routes$Resource(
													{
														L: model.hj,
														aX: $elm$core$Maybe$Just(page)
													})))
										])));
						case 37:
							var versionID = msg.a.a;
							var version = A2(
								$elm_community$list_extra$List$Extra$find,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.L;
									},
									$elm$core$Basics$eq(versionID)),
								model.r.fw);
							var newExpandedState = function () {
								if (!version.$) {
									var v = version.a;
									return !v.fQ;
								} else {
									return false;
								}
							}();
							return _Utils_Tuple2(
								A3(
									$author$project$Resource$Resource$updateVersion,
									versionID,
									function (v) {
										return _Utils_update(
											v,
											{fQ: newExpandedState});
									},
									model),
								newExpandedState ? _Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$FetchInputTo(versionID),
											$author$project$Message$Effects$FetchOutputOf(versionID)
										])) : effects);
						case 14:
							var versionID = msg.a.a;
							var version = A2(
								$elm_community$list_extra$List$Extra$find,
								function (v) {
									return _Utils_eq(v.L, versionID);
								},
								model.r.fw);
							var _v3 = model.hc;
							switch (_v3.$) {
								case 2:
									var v = _v3.b;
									return A2(
										$elm$core$Maybe$withDefault,
										_Utils_Tuple2(model, effects),
										A2(
											$elm$core$Maybe$map,
											function (vn) {
												return _Utils_eq(vn.dn, v) ? _Utils_Tuple2(
													_Utils_update(
														model,
														{
															hc: $author$project$Pinned$startUnpinning(model.hc)
														}),
													_Utils_ap(
														effects,
														_List_fromArray(
															[
																$author$project$Message$Effects$DoUnpinVersion(model.hj)
															]))) : _Utils_Tuple2(
													_Utils_update(
														model,
														{
															hc: A2($author$project$Pinned$startPinningTo, versionID, model.hc)
														}),
													_Utils_ap(
														effects,
														_List_fromArray(
															[
																$author$project$Message$Effects$DoPinVersion(vn.L)
															])));
											},
											version));
								case 0:
									return _Utils_Tuple2(
										_Utils_update(
											model,
											{
												hc: A2($author$project$Pinned$startPinningTo, versionID, model.hc)
											}),
										function () {
											if (!version.$) {
												return _Utils_ap(
													effects,
													_List_fromArray(
														[
															$author$project$Message$Effects$DoPinVersion(versionID)
														]));
											} else {
												return effects;
											}
										}());
								default:
									return _Utils_Tuple2(model, effects);
							}
						case 12:
							var _v5 = msg.a;
							var _v6 = model.hc;
							if (_v6.$ === 2) {
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											hc: $author$project$Pinned$startUnpinning(model.hc)
										}),
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												$author$project$Message$Effects$DoUnpinVersion(model.hj)
											])));
							} else {
								return _Utils_Tuple2(model, effects);
							}
						case 38:
							var versionID = msg.a.a;
							var enabledState = A2(
								$elm$core$Maybe$map,
								function ($) {
									return $.fJ;
								},
								A2(
									$elm_community$list_extra$List$Extra$find,
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.L;
										},
										$elm$core$Basics$eq(versionID)),
									model.r.fw));
							_v7$2:
							while (true) {
								if (!enabledState.$) {
									switch (enabledState.a) {
										case 0:
											var _v8 = enabledState.a;
											return _Utils_Tuple2(
												A3(
													$author$project$Resource$Resource$updateVersion,
													versionID,
													function (v) {
														return _Utils_update(
															v,
															{fJ: 1});
													},
													model),
												_Utils_ap(
													effects,
													_List_fromArray(
														[
															A2($author$project$Message$Effects$DoToggleVersion, 1, versionID)
														])));
										case 2:
											var _v9 = enabledState.a;
											return _Utils_Tuple2(
												A3(
													$author$project$Resource$Resource$updateVersion,
													versionID,
													function (v) {
														return _Utils_update(
															v,
															{fJ: 1});
													},
													model),
												_Utils_ap(
													effects,
													_List_fromArray(
														[
															A2($author$project$Message$Effects$DoToggleVersion, 0, versionID)
														])));
										default:
											break _v7$2;
									}
								} else {
									break _v7$2;
								}
							}
							return _Utils_Tuple2(model, effects);
						case 6:
							var isAuthorized = msg.a.a;
							return isAuthorized ? _Utils_Tuple2(
								_Utils_update(
									model,
									{J: $author$project$Resource$Models$CheckPending}),
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$DoCheck(model.hj)
										]))) : _Utils_Tuple2(
								model,
								_Utils_ap(
									effects,
									_List_fromArray(
										[$author$project$Message$Effects$RedirectToLogin])));
						case 7:
							var _v10 = msg.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{bQ: true}),
								_Utils_ap(
									effects,
									_List_fromArray(
										[
											$author$project$Message$Effects$Focus(
											$author$project$Message$Effects$toHtmlID($author$project$Message$Message$ResourceCommentTextarea))
										])));
						case 8:
							var _v12 = msg.a;
							var _v13 = model.hc;
							if (_v13.$ === 2) {
								var commentState = _v13.a;
								var commentChanged = !_Utils_eq(commentState.dx, commentState.ex);
								return commentChanged ? _Utils_Tuple2(
									_Utils_update(
										model,
										{bo: true}),
									_Utils_ap(
										effects,
										_List_fromArray(
											[
												A2($author$project$Message$Effects$SetPinComment, model.hj, commentState.dx)
											]))) : _Utils_Tuple2(model, effects);
							} else {
								return _Utils_Tuple2(model, effects);
							}
						default:
							break _v1$11;
					}
				case 11:
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{cj: true}),
						effects);
				case 12:
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{cj: false}),
						effects);
				default:
					break _v1$11;
			}
		}
		return _Utils_Tuple2(model, effects);
	});
var $author$project$SubPage$SubPage$update = F2(
	function (session, msg) {
		return A2(
			$elm$core$Basics$composeR,
			A7(
				$author$project$SubPage$SubPage$genericUpdate,
				A2(
					$elm$core$Basics$composeR,
					$author$project$Login$Login$update(msg),
					$author$project$Build$Build$update(msg)),
				A2(
					$elm$core$Basics$composeR,
					$author$project$Login$Login$update(msg),
					$author$project$Job$Job$update(msg)),
				A2(
					$elm$core$Basics$composeR,
					$author$project$Login$Login$update(msg),
					$author$project$Resource$Resource$update(msg)),
				A2(
					$elm$core$Basics$composeR,
					$author$project$Login$Login$update(msg),
					$author$project$Pipeline$Pipeline$update(msg)),
				A2(
					$elm$core$Basics$composeR,
					$author$project$Login$Login$update(msg),
					A2($author$project$Dashboard$Dashboard$update, session, msg)),
				$author$project$Login$Login$update(msg),
				A2(
					$elm$core$Basics$composeR,
					$author$project$Login$Login$update(msg),
					$author$project$FlySuccess$FlySuccess$update(msg))),
			function () {
				if (msg.$ === 19) {
					var route = msg.a;
					return $author$project$SubPage$SubPage$handleGoToRoute(route);
				} else {
					return $elm$core$Basics$identity;
				}
			}());
	});
var $author$project$Application$Application$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				if (msg.a.$ === 17) {
					var hovered = msg.a.a;
					var session = model.e;
					var newHovered = function () {
						if (!hovered.$) {
							var h = hovered.a;
							return $author$project$HoverState$Hovered(h);
						} else {
							return $author$project$HoverState$NoHover;
						}
					}();
					var _v1 = A3(
						$author$project$SubPage$SubPage$update,
						model.e,
						$author$project$Message$Message$Hover(hovered),
						_Utils_Tuple2(model.o, _List_Nil));
					var subModel = _v1.a;
					var subEffects = _v1.b;
					var _v2 = A2(
						$author$project$SideBar$SideBar$update,
						$author$project$Message$Message$Hover(hovered),
						_Utils_update(
							session,
							{d0: newHovered}));
					var newSession = _v2.a;
					var sideBarEffects = _v2.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{e: newSession, o: subModel}),
						_Utils_ap(subEffects, sideBarEffects));
				} else {
					var m = msg.a;
					var _v4 = A3(
						$author$project$SubPage$SubPage$handleNotFound,
						model.e.aU,
						model.am,
						A3(
							$author$project$SubPage$SubPage$update,
							model.e,
							m,
							_Utils_Tuple2(model.o, _List_Nil)));
					var subModel = _v4.a;
					var subEffects = _v4.b;
					var _v5 = A2($author$project$SideBar$SideBar$update, m, model.e);
					var session = _v5.a;
					var sessionEffects = _v5.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{e: session, o: subModel}),
						_Utils_ap(subEffects, sessionEffects));
				}
			case 1:
				var callback = msg.a;
				return A2($author$project$Application$Application$handleCallback, callback, model);
			default:
				var delivery = msg.a;
				return A2($author$project$Application$Application$handleDelivery, delivery, model);
		}
	});
var $author$project$Main$update = F2(
	function (msg, model) {
		var _v0 = A2($author$project$Application$Application$update, msg, model.ax);
		var appModel = _v0.a;
		var effects = _v0.b;
		return $author$project$Main$effectsToCmd(
			_Utils_Tuple2(
				_Utils_update(
					model,
					{ax: appModel}),
				effects));
	});
var $author$project$Message$TopLevelMessage$Update = function (a) {
	return {$: 0, a: a};
};
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $author$project$Application$Styles$disableInteraction = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'cursor', 'default'),
		A2($elm$html$Html$Attributes$style, 'user-select', 'none'),
		A2($elm$html$Html$Attributes$style, '-ms-user-select', 'none'),
		A2($elm$html$Html$Attributes$style, '-moz-user-select', 'none'),
		A2($elm$html$Html$Attributes$style, '-khtml-user-select', 'none'),
		A2($elm$html$Html$Attributes$style, '-webkit-user-select', 'none'),
		A2($elm$html$Html$Attributes$style, '-webkit-touch-callout', 'none')
	]);
var $elm$html$Html$div = _VirtualDom_node('div');
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $elm$html$Html$map = $elm$virtual_dom$VirtualDom$map;
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $author$project$Tooltip$Middle = function (a) {
	return {$: 1, a: a};
};
var $author$project$Tooltip$Right = function (a) {
	return {$: 1, a: a};
};
var $author$project$Colors$frame = '#1e1d1d';
var $author$project$SideBar$Styles$starPadding = 10;
var $author$project$SideBar$Styles$starWidth = 18;
var $author$project$SideBar$Styles$tooltipArrowSize = 15;
var $author$project$SideBar$Styles$tooltipBody = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame),
		A2($elm$html$Html$Attributes$style, 'padding-right', '10px'),
		A2($elm$html$Html$Attributes$style, 'font-size', '12px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'height', '30px')
	]);
var $author$project$SideBar$Styles$tooltipOffset = 3;
var $author$project$SideBar$SideBar$tooltip = function (_v0) {
	var hovered = _v0.d0;
	_v1$2:
	while (true) {
		if (hovered.$ === 3) {
			switch (hovered.a.$) {
				case 44:
					var _v2 = hovered.a;
					var teamName = _v2.b;
					return $elm$core$Maybe$Just(
						{
							e8: $elm$core$Maybe$Just(
								{ft: $author$project$Colors$frame, hA: $author$project$SideBar$Styles$tooltipArrowSize}),
							fa: {
								e4: $author$project$Tooltip$Middle(2 * $author$project$SideBar$Styles$tooltipArrowSize),
								dH: $author$project$Tooltip$Right($author$project$SideBar$Styles$tooltipArrowSize - $author$project$SideBar$Styles$tooltipOffset)
							},
							N: A2(
								$elm$html$Html$div,
								$author$project$SideBar$Styles$tooltipBody,
								_List_fromArray(
									[
										$elm$html$Html$text(teamName)
									]))
						});
				case 45:
					var _v3 = hovered.a;
					var pipelineID = _v3.b;
					return $elm$core$Maybe$Just(
						{
							e8: $elm$core$Maybe$Just(
								{ft: $author$project$Colors$frame, hA: $author$project$SideBar$Styles$tooltipArrowSize}),
							fa: {
								e4: $author$project$Tooltip$Middle(2 * $author$project$SideBar$Styles$tooltipArrowSize),
								dH: $author$project$Tooltip$Right((($author$project$SideBar$Styles$tooltipArrowSize + ($author$project$SideBar$Styles$starPadding * 2)) + $author$project$SideBar$Styles$starWidth) - $author$project$SideBar$Styles$tooltipOffset)
							},
							N: A2(
								$elm$html$Html$div,
								$author$project$SideBar$Styles$tooltipBody,
								_List_fromArray(
									[
										$elm$html$Html$text(pipelineID.c_)
									]))
						});
				default:
					break _v1$2;
			}
		} else {
			break _v1$2;
		}
	}
	return $elm$core$Maybe$Nothing;
};
var $author$project$Tooltip$Start = {$: 0};
var $author$project$Tooltip$Top = {$: 0};
var $author$project$Colors$tooltipBackground = '#9b9b9b';
var $author$project$Build$Styles$firstOccurrenceTooltip = _Utils_ap(
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$tooltipBackground),
			A2($elm$html$Html$Attributes$style, 'padding', '5px'),
			A2($elm$html$Html$Attributes$style, 'z-index', '100'),
			A2($elm$html$Html$Attributes$style, 'width', '6em'),
			A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
		]),
	$author$project$Application$Styles$disableInteraction);
var $author$project$Build$Build$tooltip = F2(
	function (_v0, _v1) {
		var hovered = _v1.d0;
		if ((hovered.$ === 3) && (hovered.a.$ === 10)) {
			return $elm$core$Maybe$Just(
				{
					e8: $elm$core$Maybe$Just(
						{ft: $author$project$Colors$tooltipBackground, hA: 5}),
					fa: {e4: $author$project$Tooltip$Start, dH: $author$project$Tooltip$Top},
					N: A2(
						$elm$html$Html$div,
						$author$project$Build$Styles$firstOccurrenceTooltip,
						_List_fromArray(
							[
								$elm$html$Html$text('new version')
							]))
				});
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Tooltip$End = {$: 2};
var $author$project$Dashboard$Styles$jobsDisabledTooltip = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$tooltipBackground),
		A2($elm$html$Html$Attributes$style, 'padding', '2.5px')
	]);
var $author$project$Dashboard$Styles$visibilityTooltip = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$tooltipBackground),
		A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
		A2($elm$html$Html$Attributes$style, 'padding', '2.5px')
	]);
var $author$project$Dashboard$Dashboard$tooltip = F2(
	function (model, _v0) {
		var hovered = _v0.d0;
		_v1$2:
		while (true) {
			if (hovered.$ === 3) {
				switch (hovered.a.$) {
					case 16:
						var _v2 = hovered.a;
						return $elm$core$Maybe$Just(
							{
								e8: $elm$core$Maybe$Nothing,
								fa: {e4: $author$project$Tooltip$Start, dH: $author$project$Tooltip$Top},
								N: A2(
									$elm$html$Html$div,
									$author$project$Dashboard$Styles$jobsDisabledTooltip,
									_List_fromArray(
										[
											$elm$html$Html$text('automatic job monitoring disabled')
										]))
							});
					case 20:
						var _v3 = hovered.a;
						var pipelineId = _v3.b;
						return A2(
							$elm$core$Maybe$map,
							function (p) {
								return {
									e8: $elm$core$Maybe$Nothing,
									fa: {e4: $author$project$Tooltip$End, dH: $author$project$Tooltip$Top},
									N: A2(
										$elm$html$Html$div,
										$author$project$Dashboard$Styles$visibilityTooltip,
										_List_fromArray(
											[
												$elm$html$Html$text(
												p.eB ? 'hide pipeline' : 'expose pipeline')
											]))
								};
							},
							A2($author$project$Dashboard$Dashboard$findPipeline, pipelineId, model.he));
					default:
						break _v1$2;
				}
			} else {
				break _v1$2;
			}
		}
		return $elm$core$Maybe$Nothing;
	});
var $author$project$FlySuccess$FlySuccess$tooltip = F2(
	function (_v0, _v1) {
		return $elm$core$Maybe$Nothing;
	});
var $author$project$Job$Job$tooltip = F2(
	function (_v0, _v1) {
		return $elm$core$Maybe$Nothing;
	});
var $author$project$NotFound$NotFound$tooltip = F2(
	function (_v0, _v1) {
		return $elm$core$Maybe$Nothing;
	});
var $author$project$Pipeline$Pipeline$tooltip = F2(
	function (_v0, _v1) {
		return $elm$core$Maybe$Nothing;
	});
var $author$project$Resource$Resource$tooltip = F2(
	function (_v0, _v1) {
		return $elm$core$Maybe$Nothing;
	});
var $author$project$SubPage$SubPage$tooltip = function (mdl) {
	switch (mdl.$) {
		case 0:
			var model = mdl.a;
			return $author$project$Build$Build$tooltip(model);
		case 1:
			var model = mdl.a;
			return $author$project$Job$Job$tooltip(model);
		case 3:
			var model = mdl.a;
			return $author$project$Pipeline$Pipeline$tooltip(model);
		case 2:
			var model = mdl.a;
			return $author$project$Resource$Resource$tooltip(model);
		case 5:
			var model = mdl.a;
			return $author$project$Dashboard$Dashboard$tooltip(model);
		case 4:
			var model = mdl.a;
			return $author$project$NotFound$NotFound$tooltip(model);
		default:
			var model = mdl.a;
			return $author$project$FlySuccess$FlySuccess$tooltip(model);
	}
};
var $author$project$Build$Build$extractTitle = function (model) {
	var _v0 = _Utils_Tuple3(model.av, model.gF, model.aX);
	_v0$0:
	while (true) {
		if (_v0.c.$ === 1) {
			if (_v0.a && (!_v0.b.$)) {
				break _v0$0;
			} else {
				var jobName = _v0.c.a.d7;
				var buildName = _v0.c.a.ff;
				return jobName + (' #' + buildName);
			}
		} else {
			if (_v0.a && (!_v0.b.$)) {
				break _v0$0;
			} else {
				var id = _v0.c.a;
				return '#' + $elm$core$String$fromInt(id);
			}
		}
	}
	var jobName = _v0.b.a.d7;
	return jobName + (' #' + model.bX);
};
var $author$project$Build$Build$documentTitle = $author$project$Build$Build$extractTitle;
var $author$project$Dashboard$Dashboard$documentTitle = 'Dashboard';
var $author$project$FlySuccess$FlySuccess$documentTitle = 'Fly Login';
var $author$project$Job$Job$documentTitle = function (model) {
	return model.gG.d7;
};
var $author$project$NotFound$NotFound$documentTitle = 'Not Found';
var $author$project$Pipeline$Pipeline$documentTitle = function (model) {
	return model.hd.c_;
};
var $author$project$Resource$Resource$documentTitle = function (model) {
	return model.hj.hk;
};
var $author$project$Views$Styles$breadcrumbContainer = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex')
	]);
var $author$project$Views$Styles$breadcrumbItem = function (clickable) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'inline-flex'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
			A2($elm$html$Html$Attributes$style, 'font-size', '18px'),
			A2($elm$html$Html$Attributes$style, 'padding', '0 10px'),
			A2($elm$html$Html$Attributes$style, 'line-height', '54px'),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			clickable ? 'pointer' : 'default')
		]);
};
var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
var $elm$html$Html$li = _VirtualDom_node('li');
var $author$project$Views$TopBar$breadcrumbSeparator = A2(
	$elm$html$Html$li,
	A2(
		$elm$core$List$cons,
		$elm$html$Html$Attributes$class('breadcrumb-separator'),
		$author$project$Views$Styles$breadcrumbItem(false)),
	_List_fromArray(
		[
			$elm$html$Html$text('/')
		]));
var $author$project$Assets$JobComponent = 1;
var $author$project$Assets$BreadcrumbIcon = function (a) {
	return {$: 10, a: a};
};
var $author$project$Assets$backgroundImage = function (maybeAsset) {
	if (maybeAsset.$ === 1) {
		return 'none';
	} else {
		var asset = maybeAsset.a;
		return 'url(' + ($author$project$Assets$toString(asset) + ')');
	}
};
var $elm$core$String$fromFloat = _String_fromNumber;
var $author$project$Views$Styles$breadcrumbComponent = function (_v0) {
	var component = _v0.fv;
	var widthPx = _v0.ic;
	var heightPx = _v0.f7;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just(
					$author$project$Assets$BreadcrumbIcon(component)))),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2($elm$html$Html$Attributes$style, 'background-position', 'center'),
			A2($elm$html$Html$Attributes$style, 'display', 'inline-block'),
			A2(
			$elm$html$Html$Attributes$style,
			'height',
			$elm$core$String$fromFloat(heightPx) + 'px'),
			A2(
			$elm$html$Html$Attributes$style,
			'width',
			$elm$core$String$fromFloat(widthPx) + 'px'),
			A2($elm$html$Html$Attributes$style, 'margin-right', '10px')
		]);
};
var $author$project$Views$TopBar$decodeName = function (name) {
	return A2(
		$elm$core$Maybe$withDefault,
		name,
		$elm$url$Url$percentDecode(name));
};
var $author$project$Views$TopBar$breadcrumbComponent = function (_v0) {
	var name = _v0.bX;
	var icon = _v0.gh;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			$author$project$Views$Styles$breadcrumbComponent(icon),
			_List_Nil),
			$elm$html$Html$text(
			$author$project$Views$TopBar$decodeName(name))
		]);
};
var $author$project$Views$TopBar$jobBreadcrumb = function (jobName) {
	return A2(
		$elm$html$Html$li,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$id('breadcrumb-job'),
			$author$project$Views$Styles$breadcrumbItem(false)),
		$author$project$Views$TopBar$breadcrumbComponent(
			{
				gh: {fv: 1, f7: 17, ic: 32},
				bX: jobName
			}));
};
var $author$project$Assets$PipelineComponent = 0;
var $elm$html$Html$a = _VirtualDom_node('a');
var $elm$html$Html$Attributes$href = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var $author$project$Views$TopBar$pipelineBreadcumb = function (pipelineId) {
	return A2(
		$elm$html$Html$a,
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('breadcrumb-pipeline'),
					$elm$html$Html$Attributes$href(
					$author$project$Routes$toString(
						$author$project$Routes$Pipeline(
							{bP: _List_Nil, L: pipelineId})))
				]),
			$author$project$Views$Styles$breadcrumbItem(true)),
		$author$project$Views$TopBar$breadcrumbComponent(
			{
				gh: {fv: 0, f7: 16, ic: 28},
				bX: pipelineId.c_
			}));
};
var $author$project$Assets$ResourceComponent = 2;
var $author$project$Views$TopBar$resourceBreadcrumb = function (resourceName) {
	return A2(
		$elm$html$Html$li,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$id('breadcrumb-resource'),
			$author$project$Views$Styles$breadcrumbItem(false)),
		$author$project$Views$TopBar$breadcrumbComponent(
			{
				gh: {fv: 2, f7: 17, ic: 32},
				bX: resourceName
			}));
};
var $author$project$Views$TopBar$breadcrumbs = function (route) {
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$id('breadcrumbs'),
			$author$project$Views$Styles$breadcrumbContainer),
		function () {
			switch (route.$) {
				case 4:
					var id = route.a.L;
					return _List_fromArray(
						[
							$author$project$Views$TopBar$pipelineBreadcumb(
							{c_: id.c_, dh: id.dh})
						]);
				case 0:
					var id = route.a.L;
					return _List_fromArray(
						[
							$author$project$Views$TopBar$pipelineBreadcumb(
							{c_: id.c_, dh: id.dh}),
							$author$project$Views$TopBar$breadcrumbSeparator,
							$author$project$Views$TopBar$jobBreadcrumb(id.d7)
						]);
				case 1:
					var id = route.a.L;
					return _List_fromArray(
						[
							$author$project$Views$TopBar$pipelineBreadcumb(
							{c_: id.c_, dh: id.dh}),
							$author$project$Views$TopBar$breadcrumbSeparator,
							$author$project$Views$TopBar$resourceBreadcrumb(id.hk)
						]);
				case 2:
					var id = route.a.L;
					return _List_fromArray(
						[
							$author$project$Views$TopBar$pipelineBreadcumb(
							{c_: id.c_, dh: id.dh}),
							$author$project$Views$TopBar$breadcrumbSeparator,
							$author$project$Views$TopBar$jobBreadcrumb(id.d7)
						]);
				default:
					return _List_Nil;
			}
		}());
};
var $author$project$Build$Build$breadcrumbs = function (model) {
	var _v0 = _Utils_Tuple2(model.gF, model.aX);
	if (!_v0.a.$) {
		var jobId = _v0.a.a;
		return $author$project$Views$TopBar$breadcrumbs(
			$author$project$Routes$Job(
				{L: jobId, aX: $elm$core$Maybe$Nothing}));
	} else {
		if (_v0.b.$ === 1) {
			var buildId = _v0.b.a;
			return $author$project$Views$TopBar$breadcrumbs(
				$author$project$Routes$Build(
					{y: model.y, L: buildId}));
		} else {
			return $elm$html$Html$text('');
		}
	}
};
var $author$project$Assets$ConcourseLogoWhite = {$: 13};
var $author$project$Views$Styles$concourseLogo = _List_fromArray(
	[
		A2(
		$elm$html$Html$Attributes$style,
		'background-image',
		$author$project$Assets$backgroundImage(
			$elm$core$Maybe$Just($author$project$Assets$ConcourseLogoWhite))),
		A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
		A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
		A2($elm$html$Html$Attributes$style, 'background-size', '42px 42px'),
		A2($elm$html$Html$Attributes$style, 'display', 'inline-block'),
		A2($elm$html$Html$Attributes$style, 'width', '54px'),
		A2($elm$html$Html$Attributes$style, 'height', '54px')
	]);
var $author$project$Views$TopBar$concourseLogo = A2(
	$elm$html$Html$a,
	A2(
		$elm$core$List$cons,
		$elm$html$Html$Attributes$href('/'),
		$author$project$Views$Styles$concourseLogo),
	_List_Nil);
var $author$project$Message$Message$Click = function (a) {
	return {$: 18, a: a};
};
var $author$project$Message$Message$HamburgerMenu = {$: 42};
var $author$project$Assets$HamburgerMenuIcon = {$: 33};
var $author$project$SideBar$Styles$hamburgerIcon = function (_v0) {
	var isHovered = _v0.gx;
	var isActive = _v0.gr;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'opacity',
			(isActive || isHovered) ? '1' : '0.5')
		]);
};
var $author$project$Colors$sideBar = '#333333';
var $author$project$SideBar$Styles$hamburgerMenu = function (_v0) {
	var isSideBarOpen = _v0.gA;
	var isClickable = _v0.cI;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'border-right', '1px solid ' + $author$project$Colors$frame),
			A2($elm$html$Html$Attributes$style, 'opacity', '1'),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			isClickable ? 'pointer' : 'default'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			isSideBarOpen ? $author$project$Colors$sideBar : $author$project$Colors$frame)
		]);
};
var $author$project$SideBar$SideBar$isPipelineVisible = F2(
	function (_v0, p) {
		var favoritedPipelines = _v0.fX;
		return (!p.e5) || A2($elm$core$Set$member, p.L, favoritedPipelines);
	});
var $author$project$SideBar$SideBar$hasVisiblePipelines = function (model) {
	return A2(
		$krisajenkins$remotedata$RemoteData$withDefault,
		false,
		A2(
			$krisajenkins$remotedata$RemoteData$map,
			$elm$core$List$any(
				$author$project$SideBar$SideBar$isPipelineVisible(model)),
			model.he));
};
var $author$project$Views$Icon$iconWithTooltip = F3(
	function (_v0, attrs, tooltipContent) {
		var sizePx = _v0.cg;
		var image = _v0.d1;
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						A2(
						$elm$html$Html$Attributes$style,
						'background-image',
						$author$project$Assets$backgroundImage(
							$elm$core$Maybe$Just(image))),
						A2(
						$elm$html$Html$Attributes$style,
						'height',
						$elm$core$String$fromInt(sizePx) + 'px'),
						A2(
						$elm$html$Html$Attributes$style,
						'width',
						$elm$core$String$fromInt(sizePx) + 'px'),
						A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
						A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat')
					]),
				attrs),
			tooltipContent);
	});
var $author$project$Views$Icon$icon = F2(
	function (_v0, attrs) {
		var sizePx = _v0.cg;
		var image = _v0.d1;
		return A3(
			$author$project$Views$Icon$iconWithTooltip,
			{d1: image, cg: sizePx},
			attrs,
			_List_Nil);
	});
var $author$project$HoverState$hoveredElement = function (hoverState) {
	switch (hoverState.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			var d = hoverState.a;
			return $elm$core$Maybe$Just(d);
		case 2:
			var d = hoverState.a;
			return $elm$core$Maybe$Just(d);
		default:
			var d = hoverState.a;
			return $elm$core$Maybe$Just(d);
	}
};
var $author$project$HoverState$isHovered = F2(
	function (domID, hoverState) {
		var _v0 = $author$project$HoverState$hoveredElement(hoverState);
		if (_v0.$ === 1) {
			return false;
		} else {
			var d = _v0.a;
			return _Utils_eq(d, domID);
		}
	});
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 0, a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $elm$html$Html$Events$onClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onMouseEnter = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseenter',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onMouseLeave = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseleave',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$SideBar$SideBar$hamburgerMenu = function (model) {
	if (!model.c4) {
		return $elm$html$Html$text('');
	} else {
		var isHamburgerClickable = $author$project$SideBar$SideBar$hasVisiblePipelines(model);
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('hamburger-menu'),
				_Utils_ap(
					$author$project$SideBar$Styles$hamburgerMenu(
						{cI: isHamburgerClickable, gA: model.hz.gy && isHamburgerClickable}),
					_Utils_ap(
						_List_fromArray(
							[
								$elm$html$Html$Events$onMouseEnter(
								$author$project$Message$Message$Hover(
									$elm$core$Maybe$Just($author$project$Message$Message$HamburgerMenu))),
								$elm$html$Html$Events$onMouseLeave(
								$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
							]),
						isHamburgerClickable ? _List_fromArray(
							[
								$elm$html$Html$Events$onClick(
								$author$project$Message$Message$Click($author$project$Message$Message$HamburgerMenu))
							]) : _List_Nil))),
			_List_fromArray(
				[
					A2(
					$author$project$Views$Icon$icon,
					{d1: $author$project$Assets$HamburgerMenuIcon, cg: 54},
					$author$project$SideBar$Styles$hamburgerIcon(
						{
							gr: model.hz.gy,
							gx: isHamburgerClickable && A2($author$project$HoverState$isHovered, $author$project$Message$Message$HamburgerMenu, model.d0)
						}))
				]));
	}
};
var $author$project$Views$Styles$pageBelowTopBar = function (route) {
	return A2(
		$elm$core$List$cons,
		A2($elm$html$Html$Attributes$style, 'padding-top', '54px'),
		function () {
			switch (route.$) {
				case 6:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'height', '100%')
						]);
				case 1:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex')
						]);
				case 4:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex')
						]);
				case 5:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'padding-bottom', '50px')
						]);
				case 0:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex')
						]);
				case 3:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex')
						]);
				default:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex')
						]);
			}
		}());
};
var $author$project$Views$Styles$pageIncludingTopBar = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'height', '100%')
	]);
var $author$project$Colors$paused = '#3498db';
var $author$project$Views$Styles$topBar = function (isPaused) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'position', 'fixed'),
			A2($elm$html$Html$Attributes$style, 'top', '0'),
			A2($elm$html$Html$Attributes$style, 'width', '100%'),
			A2($elm$html$Html$Attributes$style, 'height', '54px'),
			A2($elm$html$Html$Attributes$style, 'z-index', '999'),
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'justify-content', 'space-between'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			isPaused ? $author$project$Colors$paused : $author$project$Colors$frame),
			A2($elm$html$Html$Attributes$style, 'border-bottom', '1px solid ' + $author$project$Colors$frame)
		]);
};
var $author$project$Login$Styles$loginComponent = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'max-width', '20%'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame)
	]);
var $author$project$Message$Message$LoginButton = {$: 33};
var $author$project$Message$Message$LogoutButton = {$: 34};
var $author$project$Message$Message$UserMenu = {$: 35};
var $elm$virtual_dom$VirtualDom$attribute = F2(
	function (key, value) {
		return A2(
			_VirtualDom_attribute,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;
var $author$project$Colors$background = '#3d3c3c';
var $author$project$Login$Styles$loginContainer = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'position', 'relative'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
		A2($elm$html$Html$Attributes$style, 'border-left', '1px solid ' + $author$project$Colors$background),
		A2($elm$html$Html$Attributes$style, 'line-height', '54px')
	]);
var $author$project$Login$Styles$loginItem = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'padding', '0 30px'),
		A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1')
	]);
var $author$project$Login$Styles$loginText = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
		A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis')
	]);
var $author$project$Login$Styles$logoutButton = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
		A2($elm$html$Html$Attributes$style, 'top', '55px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame),
		A2($elm$html$Html$Attributes$style, 'height', '54px'),
		A2($elm$html$Html$Attributes$style, 'width', '100%'),
		A2($elm$html$Html$Attributes$style, 'border-top', '1px solid ' + $author$project$Colors$background),
		A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1')
	]);
var $author$project$Login$Login$viewLoginState = F2(
	function (userState, isUserMenuExpanded) {
		switch (userState.$) {
			case 2:
				return _List_Nil;
			case 1:
				return _List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_Utils_ap(
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href('/sky/login'),
									A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Log In'),
									$elm$html$Html$Attributes$id('login-container'),
									$elm$html$Html$Events$onClick(
									$author$project$Message$Message$Click($author$project$Message$Message$LoginButton))
								]),
							$author$project$Login$Styles$loginContainer),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								A2(
									$elm$core$List$cons,
									$elm$html$Html$Attributes$id('login-item'),
									$author$project$Login$Styles$loginItem),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$a,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$href('/sky/login')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text('login')
											]))
									]))
							]))
					]);
			default:
				var user = userState.a;
				return _List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_Utils_ap(
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id('login-container'),
									$elm$html$Html$Events$onClick(
									$author$project$Message$Message$Click($author$project$Message$Message$UserMenu))
								]),
							$author$project$Login$Styles$loginContainer),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								A2(
									$elm$core$List$cons,
									$elm$html$Html$Attributes$id('user-id'),
									$author$project$Login$Styles$loginItem),
								A2(
									$elm$core$List$cons,
									A2(
										$elm$html$Html$div,
										$author$project$Login$Styles$loginText,
										_List_fromArray(
											[
												$elm$html$Html$text(
												$author$project$Login$Login$userDisplayName(user))
											])),
									isUserMenuExpanded ? _List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_Utils_ap(
												_List_fromArray(
													[
														$elm$html$Html$Attributes$id('logout-button'),
														$elm$html$Html$Events$onClick(
														$author$project$Message$Message$Click($author$project$Message$Message$LogoutButton))
													]),
												$author$project$Login$Styles$logoutButton),
											_List_fromArray(
												[
													$elm$html$Html$text('logout')
												]))
										]) : _List_Nil))
							]))
					]);
		}
	});
var $author$project$Login$Login$view = F2(
	function (userState, model) {
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('login-component'),
				$author$project$Login$Styles$loginComponent),
			A2($author$project$Login$Login$viewLoginState, userState, model.gE));
	});
var $author$project$Message$Message$SideBarResizeHandle = {$: 43};
var $elm$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _v0) {
				var trues = _v0.a;
				var falses = _v0.b;
				return pred(x) ? _Utils_Tuple2(
					A2($elm$core$List$cons, x, trues),
					falses) : _Utils_Tuple2(
					trues,
					A2($elm$core$List$cons, x, falses));
			});
		return A3(
			$elm$core$List$foldr,
			step,
			_Utils_Tuple2(_List_Nil, _List_Nil),
			list);
	});
var $elm_community$list_extra$List$Extra$gatherWith = F2(
	function (testFn, list) {
		var helper = F2(
			function (scattered, gathered) {
				if (!scattered.b) {
					return $elm$core$List$reverse(gathered);
				} else {
					var toGather = scattered.a;
					var population = scattered.b;
					var _v1 = A2(
						$elm$core$List$partition,
						testFn(toGather),
						population);
					var gathering = _v1.a;
					var remaining = _v1.b;
					return A2(
						helper,
						remaining,
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2(toGather, gathering),
							gathered));
				}
			});
		return A2(helper, list, _List_Nil);
	});
var $elm_community$list_extra$List$Extra$gatherEqualsBy = F2(
	function (extract, list) {
		return A2(
			$elm_community$list_extra$List$Extra$gatherWith,
			F2(
				function (a, b) {
					return _Utils_eq(
						extract(a),
						extract(b));
				}),
			list);
	});
var $author$project$SideBar$Styles$Bold = 1;
var $author$project$Views$Styles$fontWeightBold = '900';
var $author$project$Views$Styles$fontWeightDefault = '700';
var $author$project$SideBar$Styles$fontWeightAttr = function (weight) {
	return A2(
		$elm$html$Html$Attributes$style,
		'font-weight',
		function () {
			if (!weight) {
				return $author$project$Views$Styles$fontWeightDefault;
			} else {
				return $author$project$Views$Styles$fontWeightBold;
			}
		}());
};
var $author$project$SideBar$Styles$sectionHeader = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '14px'),
		A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
		A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
		A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis'),
		A2($elm$html$Html$Attributes$style, 'padding', '15px 5px 5px 10px'),
		$author$project$SideBar$Styles$fontWeightAttr(1)
	]);
var $author$project$Message$Message$AllPipelinesSection = 1;
var $author$project$SideBar$Styles$Bright = 2;
var $author$project$SideBar$Styles$Dim = 0;
var $author$project$Message$Message$FavoritesSection = 0;
var $author$project$SideBar$Styles$GreyedOut = 1;
var $author$project$SideBar$Styles$Invisible = 2;
var $author$project$SideBar$Styles$Light = 1;
var $author$project$Assets$MinusIcon = {$: 36};
var $author$project$Assets$PlusIcon = {$: 35};
var $author$project$Assets$ArchivedPipelineIcon = {$: 11};
var $author$project$SideBar$Styles$Dark = 0;
var $author$project$SideBar$Styles$Default = 0;
var $author$project$SideBar$Pipeline$pipeline = F2(
	function (params, p) {
		var pipelineId = {c_: p.bX, dh: p.dh};
		var isFavorited = A2($elm$core$Set$member, p.L, params.fX);
		var isCurrent = function () {
			var _v0 = params.fA;
			if (!_v0.$) {
				var cp = _v0.a;
				return _Utils_eq(cp.c_, p.bX) && _Utils_eq(cp.dh, p.dh);
			} else {
				return false;
			}
		}();
		var domID = A2(
			$author$project$Message$Message$SideBarPipeline,
			params.gw ? 0 : 1,
			pipelineId);
		var isHovered = A2($author$project$HoverState$isHovered, domID, params.d0);
		return {
			fb: isCurrent ? 0 : (isHovered ? 1 : 2),
			dI: domID,
			gf: $author$project$Routes$toString(
				$author$project$Routes$Pipeline(
					{bP: _List_Nil, L: pipelineId})),
			gh: {
				e9: p.e5 ? $author$project$Assets$ArchivedPipelineIcon : $author$project$Assets$BreadcrumbIcon(0),
				ep: (isCurrent || isHovered) ? 2 : 0
			},
			L: p.L,
			bX: {
				ep: (isCurrent || isHovered) ? 2 : 0,
				hR: p.bX,
				ib: isCurrent ? 1 : 0
			},
			hC: {
				f$: isFavorited,
				ep: isFavorited ? 2 : 0
			}
		};
	});
var $author$project$SideBar$Team$team = F2(
	function (session, t) {
		var isCurrent = _Utils_eq(
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.dh;
				},
				session.fA),
			$elm$core$Maybe$Just(t.bX));
		var domID = A2(
			$author$project$Message$Message$SideBarTeam,
			session.gw ? 0 : 1,
			t.bX);
		var isHovered = A2($author$project$HoverState$isHovered, domID, session.d0);
		return {
			fb: isHovered ? 1 : 2,
			fr: {
				e9: t.d4 ? $author$project$Assets$MinusIcon : $author$project$Assets$PlusIcon,
				ep: isCurrent ? 2 : (t.d4 ? 1 : 0)
			},
			gh: isCurrent ? 2 : ((isHovered || t.d4) ? 1 : 0),
			d4: t.d4,
			bX: {
				dI: domID,
				ep: (isCurrent || isHovered) ? 2 : 1,
				hR: t.bX
			},
			he: A2(
				$elm$core$List$map,
				$author$project$SideBar$Pipeline$pipeline(session),
				session.he)
		};
	});
var $author$project$SideBar$Styles$opacityAttr = function (opacity) {
	return A2(
		$elm$html$Html$Attributes$style,
		'opacity',
		function () {
			switch (opacity) {
				case 0:
					return '0.5';
				case 1:
					return '0.7';
				default:
					return '1';
			}
		}());
};
var $author$project$SideBar$Styles$collapseIcon = function (_v0) {
	var opacity = _v0.ep;
	var asset = _v0.e9;
	return A2(
		$author$project$Views$Icon$icon,
		{d1: asset, cg: 10},
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'margin-left', '10px'),
				A2($elm$html$Html$Attributes$style, 'flex-shrink', '0'),
				$author$project$SideBar$Styles$opacityAttr(opacity)
			]));
};
var $author$project$SideBar$Styles$column = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-direction', 'column')
	]);
var $author$project$SideBar$Styles$team = _Utils_ap(
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'padding-top', '5px'),
			A2($elm$html$Html$Attributes$style, 'line-height', '1.2')
		]),
	$author$project$SideBar$Styles$column);
var $author$project$Colors$sideBarActive = '#272727';
var $author$project$Colors$sideBarHovered = '#444444';
var $author$project$SideBar$Styles$backgroundAttr = function (background) {
	return A2(
		$elm$html$Html$Attributes$style,
		'background-color',
		function () {
			switch (background) {
				case 0:
					return $author$project$Colors$sideBarActive;
				case 1:
					return $author$project$Colors$sideBarHovered;
				default:
					return 'inherit';
			}
		}());
};
var $author$project$SideBar$Styles$teamHeader = function (_v0) {
	var background = _v0.fb;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
			$author$project$SideBar$Styles$backgroundAttr(background)
		]);
};
var $author$project$Assets$PeopleIcon = {$: 34};
var $author$project$SideBar$Styles$teamIcon = function (opacity) {
	return A2(
		$author$project$Views$Icon$icon,
		{d1: $author$project$Assets$PeopleIcon, cg: 18},
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'margin-left', '8px'),
				A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
				A2($elm$html$Html$Attributes$style, 'flex-shrink', '0'),
				$author$project$SideBar$Styles$opacityAttr(opacity)
			]));
};
var $author$project$SideBar$Styles$teamName = function (_v0) {
	var opacity = _v0.ep;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'font-size', '14px'),
			A2($elm$html$Html$Attributes$style, 'padding', '5px 2.5px'),
			A2($elm$html$Html$Attributes$style, 'margin-left', '5px'),
			A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
			A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
			A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis'),
			A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
			$author$project$SideBar$Styles$opacityAttr(opacity),
			$author$project$SideBar$Styles$fontWeightAttr(1)
		]);
};
var $author$project$Message$Message$SideBarFavoritedIcon = function (a) {
	return {$: 46, a: a};
};
var $author$project$StrictEvents$customDecoder = F2(
	function (decoder, toResult) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (a) {
				var _v0 = toResult(a);
				if (!_v0.$) {
					var b = _v0.a;
					return $elm$json$Json$Decode$succeed(b);
				} else {
					var err = _v0.a;
					return $elm$json$Json$Decode$fail(err);
				}
			},
			decoder);
	});
var $author$project$StrictEvents$assertLeftButton = A2(
	$author$project$StrictEvents$customDecoder,
	A2($elm$json$Json$Decode$field, 'button', $elm$json$Json$Decode$int),
	function (button) {
		return (!button) ? $elm$core$Result$Ok(0) : $elm$core$Result$Err('not left button');
	});
var $author$project$StrictEvents$assertNo = function (prop) {
	return A2(
		$author$project$StrictEvents$customDecoder,
		A2($elm$json$Json$Decode$field, prop, $elm$json$Json$Decode$bool),
		function (val) {
			return (!val) ? $elm$core$Result$Ok(0) : $elm$core$Result$Err(prop + ' used - skipping');
		});
};
var $author$project$StrictEvents$assertNoModifier = A2(
	$elm$json$Json$Decode$andThen,
	function (_v0) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (_v1) {
				return A2(
					$elm$json$Json$Decode$andThen,
					function (_v2) {
						return $author$project$StrictEvents$assertNo('shiftKey');
					},
					$author$project$StrictEvents$assertNo('metaKey'));
			},
			$author$project$StrictEvents$assertNo('altKey'));
	},
	$author$project$StrictEvents$assertNo('ctrlKey'));
var $elm$virtual_dom$VirtualDom$Custom = function (a) {
	return {$: 3, a: a};
};
var $elm$html$Html$Events$custom = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Custom(decoder));
	});
var $author$project$StrictEvents$onLeftClickCapturing = F4(
	function (preventDefault, stopPropagation, captured, msg) {
		return A2(
			$elm$html$Html$Events$custom,
			'click',
			A2(
				$elm$json$Json$Decode$andThen,
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$andThen,
						function (_v1) {
							return A2(
								$elm$json$Json$Decode$map,
								function (x) {
									return {
										bW: msg(x),
										b4: preventDefault,
										ch: stopPropagation
									};
								},
								captured);
						},
						$author$project$StrictEvents$assertLeftButton);
				},
				$author$project$StrictEvents$assertNoModifier));
	});
var $author$project$StrictEvents$onLeftClickStopPropagation = function (msg) {
	return A4(
		$author$project$StrictEvents$onLeftClickCapturing,
		true,
		true,
		$elm$json$Json$Decode$succeed(0),
		$elm$core$Basics$always(msg));
};
var $author$project$SideBar$Styles$pipeline = function (_v0) {
	var background = _v0.fb;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
			A2($elm$html$Html$Attributes$style, 'margin-top', '2px'),
			$author$project$SideBar$Styles$backgroundAttr(background)
		]);
};
var $author$project$Assets$FavoritedToggleIcon = function (a) {
	return {$: 5, a: a};
};
var $author$project$SideBar$Styles$pipelineFavourite = function (fav) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just(
					$author$project$Assets$FavoritedToggleIcon(fav.f$)))),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
			A2(
			$elm$html$Html$Attributes$style,
			'height',
			$elm$core$String$fromFloat($author$project$SideBar$Styles$starWidth) + 'px'),
			A2(
			$elm$html$Html$Attributes$style,
			'width',
			$elm$core$String$fromFloat($author$project$SideBar$Styles$starWidth) + 'px'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2($elm$html$Html$Attributes$style, 'background-origin', 'content-box'),
			A2(
			$elm$html$Html$Attributes$style,
			'padding',
			'0 ' + ($elm$core$String$fromFloat($author$project$SideBar$Styles$starPadding) + 'px')),
			A2($elm$html$Html$Attributes$style, 'flex-shrink', '0'),
			A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
			$author$project$SideBar$Styles$opacityAttr(fav.ep),
			A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Favorite Icon')
		]);
};
var $author$project$SideBar$Styles$pipelineIcon = function (_v0) {
	var asset = _v0.e9;
	var opacity = _v0.ep;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just(asset))),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'height', '18px'),
			A2($elm$html$Html$Attributes$style, 'width', '18px'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2($elm$html$Html$Attributes$style, 'background-position', 'center'),
			A2($elm$html$Html$Attributes$style, 'margin-left', '28px'),
			A2($elm$html$Html$Attributes$style, 'flex-shrink', '0'),
			$author$project$SideBar$Styles$opacityAttr(opacity)
		]);
};
var $author$project$SideBar$Styles$pipelineName = function (_v0) {
	var opacity = _v0.ep;
	var weight = _v0.ib;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'font-size', '14px'),
			A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
			A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
			A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis'),
			A2($elm$html$Html$Attributes$style, 'padding', '5px 2.5px'),
			A2($elm$html$Html$Attributes$style, 'margin-left', '5px'),
			A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
			A2($elm$html$Html$Attributes$style, 'color', '#FFFFFF'),
			$author$project$SideBar$Styles$opacityAttr(opacity),
			$author$project$SideBar$Styles$fontWeightAttr(weight)
		]);
};
var $author$project$SideBar$Views$viewPipeline = function (p) {
	return A2(
		$elm$html$Html$a,
		_Utils_ap(
			$author$project$SideBar$Styles$pipeline(p),
			_List_fromArray(
				[
					$elm$html$Html$Attributes$href(p.gf),
					$elm$html$Html$Events$onMouseEnter(
					$author$project$Message$Message$Hover(
						$elm$core$Maybe$Just(p.dI))),
					$elm$html$Html$Events$onMouseLeave(
					$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
				])),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				$author$project$SideBar$Styles$pipelineIcon(p.gh),
				_List_Nil),
				A2(
				$elm$html$Html$div,
				A2(
					$elm$core$List$cons,
					$elm$html$Html$Attributes$id(
						$author$project$Message$Effects$toHtmlID(p.dI)),
					$author$project$SideBar$Styles$pipelineName(p.bX)),
				_List_fromArray(
					[
						$elm$html$Html$text(p.bX.hR)
					])),
				A2(
				$elm$html$Html$div,
				_Utils_ap(
					$author$project$SideBar$Styles$pipelineFavourite(p.hC),
					_List_fromArray(
						[
							$author$project$StrictEvents$onLeftClickStopPropagation(
							$author$project$Message$Message$Click(
								$author$project$Message$Message$SideBarFavoritedIcon(p.L)))
						])),
				_List_Nil)
			]));
};
var $author$project$SideBar$Views$viewTeam = function (team) {
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$class('side-bar-team'),
			$author$project$SideBar$Styles$team),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_Utils_ap(
					$author$project$SideBar$Styles$teamHeader(team),
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							$author$project$Message$Message$Click(team.bX.dI)),
							$elm$html$Html$Events$onMouseEnter(
							$author$project$Message$Message$Hover(
								$elm$core$Maybe$Just(team.bX.dI))),
							$elm$html$Html$Events$onMouseLeave(
							$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
						])),
				_List_fromArray(
					[
						$author$project$SideBar$Styles$collapseIcon(team.fr),
						$author$project$SideBar$Styles$teamIcon(team.gh),
						A2(
						$elm$html$Html$div,
						_Utils_ap(
							$author$project$SideBar$Styles$teamName(team.bX),
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id(
									$author$project$Message$Effects$toHtmlID(team.bX.dI))
								])),
						_List_fromArray(
							[
								$elm$html$Html$text(team.bX.hR)
							]))
					])),
				team.d4 ? A2(
				$elm$html$Html$div,
				$author$project$SideBar$Styles$column,
				A2($elm$core$List$map, $author$project$SideBar$Views$viewPipeline, team.he)) : $elm$html$Html$text('')
			]));
};
var $author$project$SideBar$SideBar$allPipelinesSection = F2(
	function (model, currentPipeline) {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				$author$project$SideBar$Styles$sectionHeader,
				_List_fromArray(
					[
						$elm$html$Html$text('all pipelines')
					])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$id('all-pipelines')
					]),
				A2(
					$elm$core$List$map,
					function (_v0) {
						var p = _v0.a;
						var ps = _v0.b;
						return $author$project$SideBar$Views$viewTeam(
							A2(
								$author$project$SideBar$Team$team,
								{
									fA: currentPipeline,
									fX: model.fX,
									d0: model.d0,
									gw: false,
									he: A2(
										$elm$core$List$filter,
										$author$project$SideBar$SideBar$isPipelineVisible(model),
										A2($elm$core$List$cons, p, ps))
								},
								{
									d4: A2($elm$core$Set$member, p.dh, model.fR),
									bX: p.dh
								}));
					},
					A2(
						$elm_community$list_extra$List$Extra$gatherEqualsBy,
						function ($) {
							return $.dh;
						},
						A2($krisajenkins$remotedata$RemoteData$withDefault, _List_Nil, model.he))))
			]);
	});
var $elm$core$Basics$clamp = F3(
	function (low, high, number) {
		return (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);
	});
var $author$project$Views$Styles$separator = function (topMargin) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'border-bottom', '1px solid black'),
				A2(
				$elm$html$Html$Attributes$style,
				'margin-top',
				$elm$core$String$fromFloat(topMargin) + 'px')
			]),
		_List_Nil);
};
var $author$project$SideBar$SideBar$favoritedPipelinesSection = F2(
	function (model, currentPipeline) {
		var favoritedPipelines = A2(
			$elm$core$List$filter,
			function (fp) {
				return A2($elm$core$Set$member, fp.L, model.fX);
			},
			A2($krisajenkins$remotedata$RemoteData$withDefault, _List_Nil, model.he));
		return $elm$core$List$isEmpty(favoritedPipelines) ? _List_Nil : _List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				$author$project$SideBar$Styles$sectionHeader,
				_List_fromArray(
					[
						$elm$html$Html$text('favorite pipelines')
					])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$id('favorites')
					]),
				A2(
					$elm$core$List$map,
					function (_v0) {
						var p = _v0.a;
						var ps = _v0.b;
						return $author$project$SideBar$Views$viewTeam(
							A2(
								$author$project$SideBar$Team$team,
								{
									fA: currentPipeline,
									fX: model.fX,
									d0: model.d0,
									gw: true,
									he: A2($elm$core$List$cons, p, ps)
								},
								{
									d4: !A2($elm$core$Set$member, p.dh, model.fs),
									bX: p.dh
								}));
					},
					A2(
						$elm_community$list_extra$List$Extra$gatherEqualsBy,
						function ($) {
							return $.dh;
						},
						favoritedPipelines))),
				$author$project$Views$Styles$separator(10)
			]);
	});
var $elm$html$Html$Events$onMouseDown = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mousedown',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$SideBar$Styles$sideBar = function (_v0) {
	var width = _v0.e$;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'border-right', '1px solid ' + $author$project$Colors$frame),
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$sideBar),
			A2(
			$elm$html$Html$Attributes$style,
			'width',
			$elm$core$String$fromFloat(width) + 'px'),
			A2($elm$html$Html$Attributes$style, 'overflow-y', 'auto'),
			A2($elm$html$Html$Attributes$style, 'height', '100%'),
			A2($elm$html$Html$Attributes$style, 'flex-shrink', '0'),
			A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
			A2($elm$html$Html$Attributes$style, 'padding-bottom', '10px'),
			A2($elm$html$Html$Attributes$style, '-webkit-overflow-scrolling', 'touch'),
			A2($elm$html$Html$Attributes$style, 'position', 'relative')
		]);
};
var $author$project$SideBar$Styles$sideBarHandle = function (_v0) {
	var width = _v0.e$;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'position', 'fixed'),
			A2($elm$html$Html$Attributes$style, 'width', '10px'),
			A2($elm$html$Html$Attributes$style, 'height', '100%'),
			A2($elm$html$Html$Attributes$style, 'top', '0'),
			A2(
			$elm$html$Html$Attributes$style,
			'left',
			$elm$core$String$fromFloat(width - 5) + 'px'),
			A2($elm$html$Html$Attributes$style, 'z-index', '2'),
			A2($elm$html$Html$Attributes$style, 'cursor', 'col-resize')
		]);
};
var $author$project$SideBar$SideBar$view = F2(
	function (model, currentPipeline) {
		if (model.hz.gy && ($author$project$SideBar$SideBar$hasVisiblePipelines(model) && (!(!model.c4)))) {
			var oldState = model.hz;
			var newState = _Utils_update(
				oldState,
				{
					e$: A3($elm$core$Basics$clamp, 100, 600, oldState.e$)
				});
			return A2(
				$elm$html$Html$div,
				A2(
					$elm$core$List$cons,
					$elm$html$Html$Attributes$id('side-bar'),
					$author$project$SideBar$Styles$sideBar(newState)),
				_Utils_ap(
					A2($author$project$SideBar$SideBar$favoritedPipelinesSection, model, currentPipeline),
					_Utils_ap(
						A2($author$project$SideBar$SideBar$allPipelinesSection, model, currentPipeline),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_Utils_ap(
									$author$project$SideBar$Styles$sideBarHandle(newState),
									_List_fromArray(
										[
											$elm$html$Html$Events$onMouseDown(
											$author$project$Message$Message$Click($author$project$Message$Message$SideBarResizeHandle))
										])),
								_List_Nil)
							]))));
		} else {
			return $elm$html$Html$text('');
		}
	});
var $author$project$Message$Message$Scrolled = function (a) {
	return {$: 20, a: a};
};
var $author$project$Build$Styles$body = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'overflow-y', 'auto'),
		A2($elm$html$Html$Attributes$style, 'outline', 'none'),
		A2($elm$html$Html$Attributes$style, 'position', 'relative'),
		A2($elm$html$Html$Attributes$style, '-webkit-overflow-scrolling', 'touch')
	]);
var $elm$html$Html$Attributes$classList = function (classes) {
	return $elm$html$Html$Attributes$class(
		A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				$elm$core$Tuple$first,
				A2($elm$core$List$filter, $elm$core$Tuple$second, classes))));
};
var $elm$html$Html$span = _VirtualDom_node('span');
var $author$project$Build$Shortcuts$keyboardHelp = function (showHelp) {
	var shortcuts = _List_fromArray(
		[
			{
			T: 'previous/next build',
			W: _List_fromArray(
				['h', 'l'])
		},
			{
			T: 'scroll down/up',
			W: _List_fromArray(
				['j', 'k'])
		},
			{
			T: 'trigger a new build',
			W: _List_fromArray(
				['T'])
		},
			{
			T: 'rerun the current build',
			W: _List_fromArray(
				['R'])
		},
			{
			T: 'abort build',
			W: _List_fromArray(
				['A'])
		},
			{
			T: 'scroll to the top',
			W: _List_fromArray(
				['gg'])
		},
			{
			T: 'scroll to the bottom',
			W: _List_fromArray(
				['G'])
		},
			{
			T: 'hide/show help',
			W: _List_fromArray(
				['?'])
		}
		]);
	var keySpan = function (key) {
		return A2(
			$elm$html$Html$span,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('key')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(key)
				]));
	};
	var helpLine = function (shortcut) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('help-line')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('keys')
						]),
					A2($elm$core$List$map, keySpan, shortcut.W)),
					$elm$html$Html$text(shortcut.T)
				]));
	};
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$classList(
				_List_fromArray(
					[
						_Utils_Tuple2('keyboard-help', true),
						_Utils_Tuple2('hidden', !showHelp)
					]))
			]),
		A2(
			$elm$core$List$cons,
			A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('help-title')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('keyboard shortcuts')
					])),
			A2($elm$core$List$map, helpLine, shortcuts)));
};
var $elm$virtual_dom$VirtualDom$lazy3 = _VirtualDom_lazy3;
var $elm$html$Html$Lazy$lazy3 = $elm$virtual_dom$VirtualDom$lazy3;
var $author$project$StrictEvents$ScrollState = F3(
	function (scrollHeight, scrollTop, clientHeight) {
		return {fp: clientHeight, hp: scrollHeight, hq: scrollTop};
	});
var $author$project$StrictEvents$decodeScrollEvent = A4(
	$elm$json$Json$Decode$map3,
	$author$project$StrictEvents$ScrollState,
	A2(
		$elm$json$Json$Decode$at,
		_List_fromArray(
			['target', 'scrollHeight']),
		$elm$json$Json$Decode$float),
	A2(
		$elm$json$Json$Decode$at,
		_List_fromArray(
			['target', 'scrollTop']),
		$elm$json$Json$Decode$float),
	A2(
		$elm$json$Json$Decode$at,
		_List_fromArray(
			['target', 'clientHeight']),
		$elm$json$Json$Decode$float));
var $author$project$StrictEvents$onScroll = function (cons) {
	return A2(
		$elm$html$Html$Events$on,
		'scroll',
		A2($elm$json$Json$Decode$map, cons, $author$project$StrictEvents$decodeScrollEvent));
};
var $author$project$Build$Build$projectOntoBuildPage = function (hovered) {
	_v0$9:
	while (true) {
		switch (hovered.$) {
			case 1:
				switch (hovered.a.$) {
					case 10:
						return hovered;
					case 11:
						return hovered;
					case 28:
						var _v1 = hovered.a;
						return hovered;
					default:
						break _v0$9;
				}
			case 2:
				switch (hovered.a.$) {
					case 10:
						return hovered;
					case 11:
						return hovered;
					case 28:
						var _v2 = hovered.a;
						return hovered;
					default:
						break _v0$9;
				}
			case 3:
				switch (hovered.a.$) {
					case 10:
						return hovered;
					case 11:
						return hovered;
					case 28:
						var _v3 = hovered.a;
						return hovered;
					default:
						break _v0$9;
				}
			default:
				break _v0$9;
		}
	}
	return $author$project$HoverState$NoHover;
};
var $elm$html$Html$Attributes$tabindex = function (n) {
	return A2(
		_VirtualDom_attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $ryannhg$date_format$DateFormat$DayOfMonthFixed = {$: 7};
var $ryannhg$date_format$DateFormat$dayOfMonthFixed = $ryannhg$date_format$DateFormat$DayOfMonthFixed;
var $ryannhg$date_format$DateFormat$MonthFixed = {$: 2};
var $ryannhg$date_format$DateFormat$monthFixed = $ryannhg$date_format$DateFormat$MonthFixed;
var $ryannhg$date_format$DateFormat$YearNumberLastTwo = {$: 15};
var $ryannhg$date_format$DateFormat$yearNumberLastTwo = $ryannhg$date_format$DateFormat$YearNumberLastTwo;
var $author$project$Build$Build$mmDDYY = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$monthFixed,
			$ryannhg$date_format$DateFormat$text('/'),
			$ryannhg$date_format$DateFormat$dayOfMonthFixed,
			$ryannhg$date_format$DateFormat$text('/'),
			$ryannhg$date_format$DateFormat$yearNumberLastTwo
		]));
var $elm_community$maybe_extra$Maybe$Extra$or = F2(
	function (ma, mb) {
		if (ma.$ === 1) {
			return mb;
		} else {
			return ma;
		}
	});
var $author$project$Build$Build$tombstone = F2(
	function (timeZone, model) {
		var maybeBirthDate = A2($elm_community$maybe_extra$Maybe$Extra$or, model.cv.eR, model.cv.dQ);
		var _v0 = _Utils_Tuple2(maybeBirthDate, model.bs);
		if ((!_v0.a.$) && (!_v0.b.$)) {
			var birthDate = _v0.a.a;
			var reapTime = _v0.b.a;
			return _List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('tombstone')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('heading')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('RIP')
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('job-name')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2(
										$elm$core$Maybe$withDefault,
										'one-off build',
										A2(
											$elm$core$Maybe$map,
											function ($) {
												return $.d7;
											},
											model.gF)))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('build-name')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('build #' + model.bX)
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('date')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2($author$project$Build$Build$mmDDYY, timeZone, birthDate) + ('-' + A2($author$project$Build$Build$mmDDYY, timeZone, reapTime)))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('epitaph')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(
									function () {
										var _v1 = model.hH;
										switch (_v1) {
											case 2:
												return 'It passed, and now it has passed on.';
											case 3:
												return 'It failed, and now has been forgotten.';
											case 4:
												return 'It errored, but has found forgiveness.';
											case 5:
												return 'It was never given a chance.';
											default:
												return 'I\'m not dead yet.';
										}
									}())
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('explanation')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('This log has been '),
							A2(
							$elm$html$Html$a,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href('https://concourse-ci.org/jobs.html#job-build-log-retention')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('reaped.')
								]))
						]))
				]);
		} else {
			return _List_Nil;
		}
	});
var $author$project$Assets$PassportOfficerIcon = {$: 12};
var $elm$html$Html$img = _VirtualDom_node('img');
var $elm$html$Html$Attributes$src = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'src',
		_VirtualDom_noJavaScriptOrHtmlUri(url));
};
var $author$project$Views$NotAuthorized$view = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('not-authorized')
		]),
	_List_fromArray(
		[
			A2(
			$elm$html$Html$img,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$src(
					$author$project$Assets$toString($author$project$Assets$PassportOfficerIcon))
				]),
			_List_Nil),
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('title')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('401 Unauthorized')
				])),
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('reason')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('You are not authorized to view')
				])),
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('reason')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('the details of this pipeline')
				]))
		]));
var $author$project$Colors$errorLog = '#e74c3c';
var $author$project$Build$Styles$errorLog = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$errorLog),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame),
		A2($elm$html$Html$Attributes$style, 'padding', '5px 10px')
	]);
var $author$project$Build$Models$StepHeaderAcross = {$: 5};
var $author$project$Build$Models$StepHeaderGet = function (a) {
	return {$: 1, a: a};
};
var $author$project$Build$Models$StepHeaderLoadVar = {$: 4};
var $author$project$Build$Models$StepHeaderPut = {$: 0};
var $author$project$Build$Models$StepHeaderSetPipeline = {$: 3};
var $author$project$Build$Models$StepHeaderTask = {$: 2};
var $author$project$Message$Message$StepSubHeader = F2(
	function (a, b) {
		return {$: 30, a: a, b: b};
	});
var $author$project$Build$StepTree$Models$isActive = function (state) {
	return (!(!state)) && (state !== 3);
};
var $author$project$Build$StepTree$StepTree$maxDepth = 10;
var $matthewsj$elm_ordering$Ordering$explicit = F3(
	function (elements, x, y) {
		var scanForY = function (items) {
			scanForY:
			while (true) {
				if (items.b) {
					var z = items.a;
					var zs = items.b;
					if (_Utils_eq(z, y)) {
						return 0;
					} else {
						var $temp$items = zs;
						items = $temp$items;
						continue scanForY;
					}
				} else {
					return 2;
				}
			}
		};
		var scanForX = function (items) {
			scanForX:
			while (true) {
				if (items.b) {
					var z = items.a;
					var zs = items.b;
					if (_Utils_eq(z, x)) {
						return 2;
					} else {
						var $temp$items = zs;
						items = $temp$items;
						continue scanForX;
					}
				} else {
					return 0;
				}
			}
		};
		var scanForEither = function (items) {
			scanForEither:
			while (true) {
				if (items.b) {
					var z = items.a;
					var zs = items.b;
					if (_Utils_eq(z, x)) {
						return scanForY(zs);
					} else {
						if (_Utils_eq(z, y)) {
							return scanForX(zs);
						} else {
							var $temp$items = zs;
							items = $temp$items;
							continue scanForEither;
						}
					}
				} else {
					return 1;
				}
			}
		};
		return _Utils_eq(x, y) ? 1 : scanForEither(elements);
	});
var $author$project$Build$StepTree$Models$stepStateOrdering = $matthewsj$elm_ordering$Ordering$explicit(
	_List_fromArray(
		[5, 6, 2, 3, 1, 0, 4]));
var $author$project$Build$StepTree$Models$fold = F3(
	function (acc, start, stepTree) {
		fold:
		while (true) {
			var iterWhile = F4(
				function (cond, trees, idx, start_) {
					var _v1 = A2($elm$core$Array$get, idx, trees);
					if (_v1.$ === 1) {
						return start_;
					} else {
						var t = _v1.a;
						return cond(t) ? A4(
							iterWhile,
							cond,
							trees,
							idx + 1,
							A3($author$project$Build$StepTree$Models$fold, acc, start_, t)) : start_;
					}
				});
			var iter = iterWhile(
				$elm$core$Basics$always(true));
			var foldHooked = F2(
				function (cond, _v3) {
					var step = _v3.A;
					var hook = _v3.z;
					var foldedStep = A3($author$project$Build$StepTree$Models$fold, acc, start, step);
					return cond(
						$author$project$Build$StepTree$Models$mostSevereStepState(step)) ? A3($author$project$Build$StepTree$Models$fold, acc, foldedStep, hook) : foldedStep;
				});
			switch (stepTree.$) {
				case 7:
					var trees = stepTree.a;
					return A3(iter, trees, 0, start);
				case 8:
					var trees = stepTree.a;
					return A3(iter, trees, 0, start);
				case 10:
					var trees = stepTree.a;
					return A3(iter, trees, 0, start);
				case 9:
					var step = stepTree.d;
					var trees = stepTree.e;
					return A2(
						acc,
						step,
						A3(iter, trees, 0, start));
				case 11:
					var hooked = stepTree.a;
					return A2(
						foldHooked,
						$elm$core$Basics$eq(4),
						hooked);
				case 12:
					var hooked = stepTree.a;
					return A2(
						foldHooked,
						$elm$core$Basics$eq(5),
						hooked);
				case 13:
					var hooked = stepTree.a;
					return A2(
						foldHooked,
						$elm$core$Basics$eq(2),
						hooked);
				case 14:
					var hooked = stepTree.a;
					return A2(
						foldHooked,
						$elm$core$Basics$eq(6),
						hooked);
				case 15:
					var hooked = stepTree.a;
					return A2(
						foldHooked,
						$elm$core$Basics$always(true),
						hooked);
				case 16:
					var tree = stepTree.a;
					var $temp$acc = acc,
						$temp$start = start,
						$temp$stepTree = tree;
					acc = $temp$acc;
					start = $temp$start;
					stepTree = $temp$stepTree;
					continue fold;
				case 18:
					var tree = stepTree.a;
					var $temp$acc = acc,
						$temp$start = start,
						$temp$stepTree = tree;
					acc = $temp$acc;
					start = $temp$start;
					stepTree = $temp$stepTree;
					continue fold;
				case 17:
					var trees = stepTree.b;
					return A4(
						iterWhile,
						A2(
							$elm$core$Basics$composeR,
							$author$project$Build$StepTree$Models$mostSevereStepState,
							$elm$core$Basics$neq(4)),
						trees,
						0,
						start);
				case 0:
					var step = stepTree.a;
					return A2(acc, step, start);
				case 1:
					var step = stepTree.a;
					return A2(acc, step, start);
				case 2:
					var step = stepTree.a;
					return A2(acc, step, start);
				case 3:
					var step = stepTree.a;
					return A2(acc, step, start);
				case 4:
					var step = stepTree.a;
					return A2(acc, step, start);
				case 5:
					var step = stepTree.a;
					return A2(acc, step, start);
				default:
					var step = stepTree.a;
					return A2(acc, step, start);
			}
		}
	});
var $author$project$Build$StepTree$Models$mostSevereStepState = function (stepTree) {
	return A3(
		$author$project$Build$StepTree$Models$fold,
		F2(
			function (step, state) {
				var _v0 = A2($author$project$Build$StepTree$Models$stepStateOrdering, step.hG, state);
				if (!_v0) {
					return step.hG;
				} else {
					return state;
				}
			}),
		4,
		stepTree);
};
var $author$project$Build$Styles$tabList = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'line-height', '26px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$background)
	]);
var $author$project$Build$Styles$retryTabList = A2(
	$elm$core$List$cons,
	A2($elm$html$Html$Attributes$style, 'font-size', '16px'),
	A2(
		$elm$core$List$cons,
		A2($elm$html$Html$Attributes$style, 'margin', '0'),
		$author$project$Build$Styles$tabList));
var $author$project$Colors$error = '#f5a623';
var $author$project$Colors$failure = '#ed4b35';
var $author$project$Colors$started = '#fad43b';
var $author$project$Build$Styles$stepHeader = function (state) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'justify-content', 'space-between'),
			A2(
			$elm$html$Html$Attributes$style,
			'border',
			'1px solid ' + function () {
				switch (state) {
					case 5:
						return $author$project$Colors$failure;
					case 6:
						return $author$project$Colors$error;
					case 0:
						return $author$project$Colors$frame;
					case 1:
						return $author$project$Colors$started;
					case 2:
						return $author$project$Colors$frame;
					case 3:
						return $author$project$Colors$frame;
					default:
						return $author$project$Colors$frame;
				}
			}())
		]);
};
var $elm$html$Html$ul = _VirtualDom_node('ul');
var $author$project$Build$Styles$acrossStepSubHeaderLabel = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'line-height', '28px'),
		A2($elm$html$Html$Attributes$style, 'padding-left', '6px')
	]);
var $author$project$Colors$pending = '#9b9b9b';
var $author$project$Build$StepTree$StepTree$viewAcrossStepSubHeaderKeyValue = F2(
	function (key, val) {
		var keyValueSpan = function (text) {
			return _List_fromArray(
				[
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'display', 'inline-block'),
							A2($elm$html$Html$Attributes$style, 'margin-right', '10px')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$pending)
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(key + ': ')
								])),
							$elm$html$Html$text(text)
						]))
				]);
		};
		switch (val.$) {
			case 0:
				var s = val.a;
				return keyValueSpan(s);
			case 1:
				var n = val.a;
				return keyValueSpan(
					$elm$core$String$fromFloat(n));
			case 4:
				var v = val.a;
				return keyValueSpan(
					A2($elm$json$Json$Encode$encode, 0, v));
			case 3:
				var l = val.a;
				return $elm$core$List$concat(
					A2(
						$elm$core$List$indexedMap,
						F2(
							function (i, v) {
								var subKey = key + ('[' + ($elm$core$String$fromInt(i) + ']'));
								return A2($author$project$Build$StepTree$StepTree$viewAcrossStepSubHeaderKeyValue, subKey, v);
							}),
						l));
			default:
				var o = val.a;
				return A2(
					$elm$core$List$concatMap,
					function (_v1) {
						var k = _v1.a;
						var v = _v1.b;
						var subKey = key + ('.' + k);
						return A2($author$project$Build$StepTree$StepTree$viewAcrossStepSubHeaderKeyValue, subKey, v);
					},
					o);
		}
	});
var $author$project$Build$StepTree$StepTree$viewAcrossStepSubHeaderLabels = function (keyVals) {
	return A2(
		$elm$html$Html$div,
		$author$project$Build$Styles$acrossStepSubHeaderLabel,
		A2(
			$elm$core$List$concatMap,
			function (_v0) {
				var k = _v0.a;
				var v = _v0.b;
				return A2($author$project$Build$StepTree$StepTree$viewAcrossStepSubHeaderKeyValue, k, v);
			},
			keyVals));
};
var $author$project$Message$Message$StepTab = F2(
	function (a, b) {
		return {$: 28, a: a, b: b};
	});
var $author$project$Colors$paginationHover = '#504b4b';
var $author$project$Colors$retryTabText = '#f5f5f5';
var $author$project$Build$Styles$tab = function (_v0) {
	var isHovered = _v0.gx;
	var isCurrent = _v0.gt;
	var isStarted = _v0.gB;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'inline-block'),
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			A2($elm$html$Html$Attributes$style, 'padding', '0 5px'),
			A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightDefault),
			A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$retryTabText),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			(isHovered || isCurrent) ? $author$project$Colors$paginationHover : $author$project$Colors$background),
			A2(
			$elm$html$Html$Attributes$style,
			'opacity',
			isStarted ? '1' : '0.5')
		]);
};
var $author$project$Build$StepTree$Models$treeIsActive = function (stepTree) {
	if (stepTree.$ === 3) {
		return false;
	} else {
		return A3(
			$author$project$Build$StepTree$Models$fold,
			F2(
				function (step, active) {
					return active || $author$project$Build$StepTree$Models$isActive(step.hG);
				}),
			false,
			stepTree);
	}
};
var $author$project$Build$StepTree$StepTree$viewTab = F5(
	function (_v0, tabInfo, tab, label, step) {
		var hovered = _v0.d0;
		return A2(
			$elm$html$Html$li,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$classList(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'current',
								_Utils_eq(tabInfo.de, tab)),
								_Utils_Tuple2(
								'inactive',
								!$author$project$Build$StepTree$Models$treeIsActive(step))
							])),
						$elm$html$Html$Events$onMouseEnter(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(
								A2($author$project$Message$Message$StepTab, tabInfo.L, tab)))),
						$elm$html$Html$Events$onMouseLeave(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							A2($author$project$Message$Message$StepTab, tabInfo.L, tab)))
					]),
				$author$project$Build$Styles$tab(
					{
						gt: _Utils_eq(tabInfo.de, tab),
						gx: A2(
							$author$project$HoverState$isHovered,
							A2($author$project$Message$Message$StepTab, tabInfo.L, tab),
							hovered),
						gB: $author$project$Build$StepTree$Models$treeIsActive(step)
					})),
			_List_fromArray(
				[
					$elm$html$Html$text(label)
				]));
	});
var $author$project$Build$StepTree$StepTree$viewRetryTab = F4(
	function (session, tabInfo, idx, step) {
		return A5(
			$author$project$Build$StepTree$StepTree$viewTab,
			session,
			tabInfo,
			idx,
			$elm$core$String$fromInt(idx + 1),
			step);
	});
var $author$project$Message$Message$StepHeader = function (a) {
	return {$: 29, a: a};
};
var $elm$html$Html$h3 = _VirtualDom_node('h3');
var $elm$html$Html$pre = _VirtualDom_node('pre');
var $author$project$Build$StepTree$StepTree$showTooltip = F2(
	function (session, domID) {
		var _v0 = session.d0;
		if (_v0.$ === 3) {
			var x = _v0.a;
			return _Utils_eq(x, domID);
		} else {
			return false;
		}
	});
var $author$project$Duration$between = F2(
	function (a, b) {
		return $elm$time$Time$posixToMillis(b) - $elm$time$Time$posixToMillis(a);
	});
var $author$project$Build$Styles$durationTooltip = _Utils_ap(
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
			A2($elm$html$Html$Attributes$style, 'right', '0'),
			A2($elm$html$Html$Attributes$style, 'bottom', '100%'),
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$tooltipBackground),
			A2($elm$html$Html$Attributes$style, 'padding', '5px'),
			A2($elm$html$Html$Attributes$style, 'z-index', '100'),
			A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
		]),
	$author$project$Application$Styles$disableInteraction);
var $author$project$Build$Styles$durationTooltipArrow = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'width', '0'),
		A2($elm$html$Html$Attributes$style, 'height', '0'),
		A2($elm$html$Html$Attributes$style, 'left', '50%'),
		A2($elm$html$Html$Attributes$style, 'top', '0px'),
		A2($elm$html$Html$Attributes$style, 'margin-left', '-5px'),
		A2($elm$html$Html$Attributes$style, 'border-top', '5px solid ' + $author$project$Colors$tooltipBackground),
		A2($elm$html$Html$Attributes$style, 'border-left', '5px solid transparent'),
		A2($elm$html$Html$Attributes$style, 'border-right', '5px solid transparent'),
		A2($elm$html$Html$Attributes$style, 'position', 'absolute')
	]);
var $author$project$Duration$format = function (duration) {
	var seconds = (duration / 1000) | 0;
	var remainingSeconds = seconds % 60;
	var minutes = (seconds / 60) | 0;
	var remainingMinutes = minutes % 60;
	var hours = (minutes / 60) | 0;
	var remainingHours = hours % 24;
	var days = (hours / 24) | 0;
	var _v0 = _Utils_Tuple3(
		_Utils_Tuple2(days, remainingHours),
		remainingMinutes,
		remainingSeconds);
	if (!_v0.a.a) {
		if (!_v0.a.b) {
			if (!_v0.b) {
				var _v1 = _v0.a;
				var s = _v0.c;
				return $elm$core$String$fromInt(s) + 's';
			} else {
				var _v2 = _v0.a;
				var m = _v0.b;
				var s = _v0.c;
				return $elm$core$String$fromInt(m) + ('m ' + ($elm$core$String$fromInt(s) + 's'));
			}
		} else {
			var _v3 = _v0.a;
			var h = _v3.b;
			var m = _v0.b;
			return $elm$core$String$fromInt(h) + ('h ' + ($elm$core$String$fromInt(m) + 'm'));
		}
	} else {
		var _v4 = _v0.a;
		var d = _v4.a;
		var h = _v4.b;
		return $elm$core$String$fromInt(d) + ('d ' + ($elm$core$String$fromInt(h) + 'h'));
	}
};
var $elm$html$Html$table = _VirtualDom_node('table');
var $elm$html$Html$td = _VirtualDom_node('td');
var $elm$html$Html$tr = _VirtualDom_node('tr');
var $author$project$Views$DictView$viewPair = function (_v0) {
	var name = _v0.a;
	var value = _v0.b;
	return A2(
		$elm$html$Html$tr,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('dict-key')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(name)
					])),
				A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('dict-value')
					]),
				_List_fromArray(
					[value]))
			]));
};
var $author$project$Views$DictView$view = F2(
	function (attrs, dict) {
		return A2(
			$elm$html$Html$table,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$class('dictionary'),
				attrs),
			A2(
				$elm$core$List$map,
				$author$project$Views$DictView$viewPair,
				$elm$core$Dict$toList(dict)));
	});
var $author$project$Build$StepTree$StepTree$viewDurationTooltip = F4(
	function (minit, mstart, mfinish, tooltip) {
		if (tooltip) {
			var _v0 = _Utils_Tuple3(minit, mstart, mfinish);
			if (((!_v0.a.$) && (!_v0.b.$)) && (!_v0.c.$)) {
				var initializedAt = _v0.a.a;
				var startedAt = _v0.b.a;
				var finishedAt = _v0.c.a;
				var stepDuration = A2($author$project$Duration$between, startedAt, finishedAt);
				var initDuration = A2($author$project$Duration$between, initializedAt, startedAt);
				return _List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'position', 'inherit'),
								A2($elm$html$Html$Attributes$style, 'margin-left', '-500px')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								$author$project$Build$Styles$durationTooltip,
								_List_fromArray(
									[
										A2(
										$author$project$Views$DictView$view,
										_List_Nil,
										$elm$core$Dict$fromList(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'initialization',
													$elm$html$Html$text(
														$author$project$Duration$format(initDuration))),
													_Utils_Tuple2(
													'step',
													$elm$html$Html$text(
														$author$project$Duration$format(stepDuration)))
												])))
									]))
							])),
						A2($elm$html$Html$div, $author$project$Build$Styles$durationTooltipArrow, _List_Nil)
					]);
			} else {
				return _List_Nil;
			}
		} else {
			return _List_Nil;
		}
	});
var $vito$elm_ansi$Ansi$Log$colorClasses = F3(
	function (suffix, bold, mc) {
		var brightPrefix = 'ansi-bright-';
		var prefix = bold ? brightPrefix : 'ansi-';
		if (mc.$ === 1) {
			return bold ? _List_fromArray(
				['ansi-bold']) : _List_Nil;
		} else {
			switch (mc.a) {
				case 0:
					var _v1 = mc.a;
					return _List_fromArray(
						[prefix + ('black' + suffix)]);
				case 1:
					var _v2 = mc.a;
					return _List_fromArray(
						[prefix + ('red' + suffix)]);
				case 2:
					var _v3 = mc.a;
					return _List_fromArray(
						[prefix + ('green' + suffix)]);
				case 3:
					var _v4 = mc.a;
					return _List_fromArray(
						[prefix + ('yellow' + suffix)]);
				case 4:
					var _v5 = mc.a;
					return _List_fromArray(
						[prefix + ('blue' + suffix)]);
				case 5:
					var _v6 = mc.a;
					return _List_fromArray(
						[prefix + ('magenta' + suffix)]);
				case 6:
					var _v7 = mc.a;
					return _List_fromArray(
						[prefix + ('cyan' + suffix)]);
				case 7:
					var _v8 = mc.a;
					return _List_fromArray(
						[prefix + ('white' + suffix)]);
				case 8:
					var _v9 = mc.a;
					return _List_fromArray(
						[brightPrefix + ('black' + suffix)]);
				case 9:
					var _v10 = mc.a;
					return _List_fromArray(
						[brightPrefix + ('red' + suffix)]);
				case 10:
					var _v11 = mc.a;
					return _List_fromArray(
						[brightPrefix + ('green' + suffix)]);
				case 11:
					var _v12 = mc.a;
					return _List_fromArray(
						[brightPrefix + ('yellow' + suffix)]);
				case 12:
					var _v13 = mc.a;
					return _List_fromArray(
						[brightPrefix + ('blue' + suffix)]);
				case 13:
					var _v14 = mc.a;
					return _List_fromArray(
						[brightPrefix + ('magenta' + suffix)]);
				case 14:
					var _v15 = mc.a;
					return _List_fromArray(
						[brightPrefix + ('cyan' + suffix)]);
				default:
					var _v16 = mc.a;
					return _List_fromArray(
						[brightPrefix + ('white' + suffix)]);
			}
		}
	});
var $vito$elm_ansi$Ansi$Log$styleAttributes = function (style) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'font-weight',
			style.aG ? 'bold' : 'normal'),
			A2(
			$elm$html$Html$Attributes$style,
			'text-decoration',
			style.cl ? 'underline' : 'none'),
			A2(
			$elm$html$Html$Attributes$style,
			'font-style',
			style.bS ? 'italic' : 'normal'),
			function () {
			var fgClasses = A3(
				$vito$elm_ansi$Ansi$Log$colorClasses,
				'-fg',
				style.aG,
				(!style.bf) ? style.bc : style.fb);
			var bgClasses = A3(
				$vito$elm_ansi$Ansi$Log$colorClasses,
				'-bg',
				style.aG,
				(!style.bf) ? style.fb : style.bc);
			var fgbgClasses = A2(
				$elm$core$List$map,
				function (a) {
					return A2(
						F2(
							function (b, c) {
								return _Utils_Tuple2(b, c);
							}),
						a,
						true);
				},
				_Utils_ap(fgClasses, bgClasses));
			var ansiClasses = _List_fromArray(
				[
					_Utils_Tuple2('ansi-blink', style.bE),
					_Utils_Tuple2('ansi-faint', style.bJ),
					_Utils_Tuple2('ansi-Fraktur', style.bM),
					_Utils_Tuple2('ansi-framed', style.bN)
				]);
			return $elm$html$Html$Attributes$classList(
				_Utils_ap(fgbgClasses, ansiClasses));
		}()
		]);
};
var $vito$elm_ansi$Ansi$Log$viewChunk = function (chunk) {
	return A2(
		$elm$html$Html$span,
		$vito$elm_ansi$Ansi$Log$styleAttributes(chunk.d),
		_List_fromArray(
			[
				$elm$html$Html$text(chunk.hR)
			]));
};
var $vito$elm_ansi$Ansi$Log$viewLine = function (_v0) {
	var chunks = _v0.a;
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		A3(
			$elm$core$List$foldl,
			F2(
				function (c, l) {
					return A2(
						$elm$core$List$cons,
						$vito$elm_ansi$Ansi$Log$viewChunk(c),
						l);
				}),
			_List_fromArray(
				[
					$elm$html$Html$text('\n')
				]),
			chunks));
};
var $author$project$Build$StepTree$StepTree$viewLine = function (line) {
	return A2(
		$elm$html$Html$td,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('timestamped-content')
			]),
		_List_fromArray(
			[
				$vito$elm_ansi$Ansi$Log$viewLine(line)
			]));
};
var $author$project$Message$Message$ExtendHighlight = F2(
	function (a, b) {
		return {$: 16, a: a, b: b};
	});
var $author$project$Message$Message$SetHighlight = F2(
	function (a, b) {
		return {$: 15, a: a, b: b};
	});
var $ryannhg$date_format$DateFormat$HourMilitaryFixed = {$: 25};
var $ryannhg$date_format$DateFormat$hourMilitaryFixed = $ryannhg$date_format$DateFormat$HourMilitaryFixed;
var $author$project$StrictEvents$determineClickMsg = F2(
	function (clickMsg, shiftClickMsg) {
		return A2(
			$author$project$StrictEvents$customDecoder,
			A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool),
			function (shiftKey) {
				return shiftKey ? $elm$core$Result$Ok(shiftClickMsg) : $elm$core$Result$Ok(clickMsg);
			});
	});
var $author$project$StrictEvents$onLeftClickOrShiftLeftClick = F2(
	function (msg, shiftMsg) {
		return A2(
			$elm$html$Html$Events$custom,
			'click',
			A2(
				$elm$json$Json$Decode$andThen,
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$andThen,
						function (_v1) {
							return A2(
								$elm$json$Json$Decode$andThen,
								function (_v2) {
									return A2(
										$elm$json$Json$Decode$andThen,
										function (_v3) {
											return A2(
												$elm$json$Json$Decode$map,
												function (x) {
													return {bW: x, b4: true, ch: false};
												},
												A2($author$project$StrictEvents$determineClickMsg, msg, shiftMsg));
										},
										$author$project$StrictEvents$assertNo('metaKey'));
								},
								$author$project$StrictEvents$assertNo('altKey'));
						},
						$author$project$StrictEvents$assertNo('ctrlKey'));
				},
				$author$project$StrictEvents$assertLeftButton));
	});
var $author$project$Build$StepTree$StepTree$viewTimestamp = function (_v0) {
	var id = _v0.L;
	var lineNo = _v0.bU;
	var date = _v0.dA;
	var timeZone = _v0.eW;
	return A2(
		$elm$html$Html$a,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$href(
				$author$project$Routes$showHighlight(
					A2($author$project$Routes$HighlightLine, id, lineNo))),
				A2(
				$author$project$StrictEvents$onLeftClickOrShiftLeftClick,
				A2($author$project$Message$Message$SetHighlight, id, lineNo),
				A2($author$project$Message$Message$ExtendHighlight, id, lineNo))
			]),
		_List_fromArray(
			[
				function () {
				if (!date.$) {
					var d = date.a;
					return A2(
						$elm$html$Html$td,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('timestamp')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(
								A3(
									$ryannhg$date_format$DateFormat$format,
									_List_fromArray(
										[
											$ryannhg$date_format$DateFormat$hourMilitaryFixed,
											$ryannhg$date_format$DateFormat$text(':'),
											$ryannhg$date_format$DateFormat$minuteFixed,
											$ryannhg$date_format$DateFormat$text(':'),
											$ryannhg$date_format$DateFormat$secondFixed
										]),
									timeZone,
									d))
							]));
				} else {
					return A2(
						$elm$html$Html$td,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('timestamp placeholder')
							]),
						_List_Nil);
				}
			}()
			]));
};
var $author$project$Build$StepTree$StepTree$viewTimestampedLine = function (_v0) {
	var timestamps = _v0.eX;
	var highlight = _v0.y;
	var id = _v0.L;
	var lineNo = _v0.bU;
	var line = _v0.ed;
	var timeZone = _v0.eW;
	var ts = A2($elm$core$Dict$get, lineNo, timestamps);
	var highlighted = function () {
		switch (highlight.$) {
			case 0:
				return false;
			case 1:
				var hlId = highlight.a;
				var hlLine = highlight.b;
				return _Utils_eq(hlId, id) && _Utils_eq(hlLine, lineNo);
			default:
				var hlId = highlight.a;
				var hlLine1 = highlight.b;
				var hlLine2 = highlight.c;
				return _Utils_eq(hlId, id) && ((_Utils_cmp(lineNo, hlLine1) > -1) && (_Utils_cmp(lineNo, hlLine2) < 1));
		}
	}();
	return A2(
		$elm$html$Html$tr,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$classList(
				_List_fromArray(
					[
						_Utils_Tuple2('timestamped-line', true),
						_Utils_Tuple2('highlighted-line', highlighted)
					])),
				$elm$html$Html$Attributes$id(
				id + (':' + $elm$core$String$fromInt(lineNo)))
			]),
		_List_fromArray(
			[
				$author$project$Build$StepTree$StepTree$viewTimestamp(
				{dA: ts, L: id, bU: lineNo, eW: timeZone}),
				$author$project$Build$StepTree$StepTree$viewLine(line)
			]));
};
var $author$project$Build$StepTree$StepTree$viewLogs = F5(
	function (_v0, timestamps, hl, timeZone, id) {
		var lines = _v0.ee;
		return $elm$core$Array$toList(
			A2(
				$elm$core$Array$indexedMap,
				F2(
					function (idx, line) {
						return $author$project$Build$StepTree$StepTree$viewTimestampedLine(
							{y: hl, L: id, ed: line, bU: idx + 1, eW: timeZone, eX: timestamps});
					}),
				lines));
	});
var $author$project$Build$Styles$Key = 0;
var $author$project$Build$Styles$Value = 1;
var $author$project$Build$Styles$metadataCell = function (cell) {
	if (!cell) {
		return _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'text-align', 'left'),
				A2($elm$html$Html$Attributes$style, 'vertical-align', 'top'),
				A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(45,45,45)'),
				A2($elm$html$Html$Attributes$style, 'border-bottom', '5px solid rgb(45,45,45)'),
				A2($elm$html$Html$Attributes$style, 'padding', '5px')
			]);
	} else {
		return _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'text-align', 'left'),
				A2($elm$html$Html$Attributes$style, 'vertical-align', 'top'),
				A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(30,30,30)'),
				A2($elm$html$Html$Attributes$style, 'border-bottom', '5px solid rgb(45,45,45)'),
				A2($elm$html$Html$Attributes$style, 'padding', '5px')
			]);
	}
};
var $author$project$Build$Styles$metadataTable = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'border-collapse', 'collapse'),
		A2($elm$html$Html$Attributes$style, 'margin-bottom', '5px')
	]);
var $elm$html$Html$Attributes$target = $elm$html$Html$Attributes$stringProperty('target');
var $author$project$Build$StepTree$StepTree$viewMetadata = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$map(
		function (_v0) {
			var name = _v0.bX;
			var value = _v0.h6;
			return _Utils_Tuple2(
				$elm$html$Html$text(name),
				A2(
					$elm$html$Html$pre,
					_List_Nil,
					_List_fromArray(
						[
							function () {
							var _v1 = $elm$url$Url$fromString(value);
							if (!_v1.$) {
								return A2(
									$elm$html$Html$a,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$href(value),
											$elm$html$Html$Attributes$target('_blank'),
											A2($elm$html$Html$Attributes$style, 'text-decoration-line', 'underline')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(value)
										]));
							} else {
								return $elm$html$Html$text(value);
							}
						}()
						])));
		}),
	A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(
			function (_v2) {
				var key = _v2.a;
				var value = _v2.b;
				return A2(
					$elm$html$Html$tr,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$td,
							$author$project$Build$Styles$metadataCell(0),
							_List_fromArray(
								[key])),
							A2(
							$elm$html$Html$td,
							$author$project$Build$Styles$metadataCell(1),
							_List_fromArray(
								[value]))
						]));
			}),
		$elm$html$Html$table($author$project$Build$Styles$metadataTable)));
var $author$project$Build$Styles$stepHeaderLabel = function (headerType) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'color',
			function () {
				if ((headerType.$ === 1) && headerType.a) {
					return $author$project$Colors$started;
				} else {
					return $author$project$Colors$pending;
				}
			}()),
			A2($elm$html$Html$Attributes$style, 'line-height', '28px'),
			A2($elm$html$Html$Attributes$style, 'padding-left', '6px')
		]);
};
var $author$project$Build$StepTree$StepTree$viewStepHeaderLabel = F2(
	function (headerType, stepID) {
		var eventHandlers = _Utils_eq(
			headerType,
			$author$project$Build$Models$StepHeaderGet(true)) ? _List_fromArray(
			[
				$elm$html$Html$Events$onMouseLeave(
				$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
				$elm$html$Html$Events$onMouseEnter(
				$author$project$Message$Message$Hover(
					$elm$core$Maybe$Just(
						$author$project$Message$Message$FirstOccurrenceGetStepLabel(stepID))))
			]) : _List_Nil;
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id(
					$author$project$Message$Effects$toHtmlID(
						$author$project$Message$Message$FirstOccurrenceGetStepLabel(stepID))),
				_Utils_ap(
					$author$project$Build$Styles$stepHeaderLabel(headerType),
					eventHandlers)),
			_List_fromArray(
				[
					$elm$html$Html$text(
					function () {
						switch (headerType.$) {
							case 1:
								return 'get:';
							case 0:
								return 'put:';
							case 2:
								return 'task:';
							case 3:
								return 'set_pipeline:';
							case 4:
								return 'load_var:';
							default:
								return 'across:';
						}
					}())
				]));
	});
var $author$project$Assets$CancelledIcon = {$: 21};
var $author$project$Assets$ExclamationTriangleIcon = {$: 24};
var $author$project$Assets$FailureTimesIcon = {$: 23};
var $author$project$Assets$InterruptedIcon = {$: 20};
var $author$project$Assets$PendingIcon = {$: 19};
var $author$project$Assets$SuccessCheckIcon = {$: 22};
var $author$project$Views$Spinner$hoverableSpinner = function (_v0) {
	var sizePx = _v0.cg;
	var margin = _v0.ef;
	var hoverable = _v0.ge;
	return A2(
		$elm$html$Html$div,
		_Utils_ap(
			_List_fromArray(
				[
					A2(
					$elm$html$Html$Attributes$style,
					'width',
					$elm$core$String$fromFloat(sizePx) + 'px'),
					A2(
					$elm$html$Html$Attributes$style,
					'height',
					$elm$core$String$fromFloat(sizePx) + 'px'),
					A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
					A2($elm$html$Html$Attributes$style, 'animation', 'container-rotate 1568ms linear infinite'),
					A2($elm$html$Html$Attributes$style, 'margin', margin)
				]),
			function () {
				if (!hoverable.$) {
					var h = hoverable.a;
					return _List_fromArray(
						[
							$elm$html$Html$Events$onMouseEnter(
							$author$project$Message$Message$Hover(
								$elm$core$Maybe$Just(h))),
							$elm$html$Html$Events$onMouseLeave(
							$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
						]);
				} else {
					return _List_Nil;
				}
			}()),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'height', '100%'),
						A2($elm$html$Html$Attributes$style, 'border-color', 'white'),
						A2($elm$html$Html$Attributes$style, 'animation', 'fill-unfill-rotate 5332ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'position', 'relative'),
								A2($elm$html$Html$Attributes$style, 'width', '50%'),
								A2($elm$html$Html$Attributes$style, 'height', '100%'),
								A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
								A2($elm$html$Html$Attributes$style, 'border-color', 'inherit'),
								A2($elm$html$Html$Attributes$style, 'float', 'left')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'width', '200%'),
										A2($elm$html$Html$Attributes$style, 'border-width', '2px'),
										A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
										A2($elm$html$Html$Attributes$style, 'border-style', 'solid'),
										A2($elm$html$Html$Attributes$style, 'border-color', 'inherit'),
										A2($elm$html$Html$Attributes$style, 'border-bottom-color', 'transparent'),
										A2($elm$html$Html$Attributes$style, 'border-radius', '50%'),
										A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
										A2($elm$html$Html$Attributes$style, 'top', '0'),
										A2($elm$html$Html$Attributes$style, 'bottom', '0'),
										A2($elm$html$Html$Attributes$style, 'left', '0'),
										A2($elm$html$Html$Attributes$style, 'border-right-color', 'transparent'),
										A2($elm$html$Html$Attributes$style, 'transform', 'rotate(129deg)'),
										A2($elm$html$Html$Attributes$style, 'animation', 'left-spin 1333ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both')
									]),
								_List_Nil)
							])),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'position', 'relative'),
								A2($elm$html$Html$Attributes$style, 'width', '50%'),
								A2($elm$html$Html$Attributes$style, 'height', '100%'),
								A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
								A2($elm$html$Html$Attributes$style, 'border-color', 'inherit'),
								A2($elm$html$Html$Attributes$style, 'float', 'right')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'width', '200%'),
										A2($elm$html$Html$Attributes$style, 'border-width', '2px'),
										A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
										A2($elm$html$Html$Attributes$style, 'border-style', 'solid'),
										A2($elm$html$Html$Attributes$style, 'border-color', 'inherit'),
										A2($elm$html$Html$Attributes$style, 'border-bottom-color', 'transparent'),
										A2($elm$html$Html$Attributes$style, 'border-radius', '50%'),
										A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
										A2($elm$html$Html$Attributes$style, 'top', '0'),
										A2($elm$html$Html$Attributes$style, 'bottom', '0'),
										A2($elm$html$Html$Attributes$style, 'left', '-100%'),
										A2($elm$html$Html$Attributes$style, 'border-left-color', 'transparent'),
										A2($elm$html$Html$Attributes$style, 'transform', 'rotate(-129deg)'),
										A2($elm$html$Html$Attributes$style, 'animation', 'right-spin 1333ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both')
									]),
								_List_Nil)
							]))
					]))
			]));
};
var $author$project$Views$Spinner$spinner = function (_v0) {
	var sizePx = _v0.cg;
	var margin = _v0.ef;
	return $author$project$Views$Spinner$hoverableSpinner(
		{ge: $elm$core$Maybe$Nothing, ef: margin, cg: sizePx});
};
var $author$project$Build$Styles$stepStatusIcon = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-size', '14px 14px'),
		A2($elm$html$Html$Attributes$style, 'position', 'relative')
	]);
var $author$project$Build$StepTree$StepTree$viewStepState = F3(
	function (state, stepID, tooltip) {
		var attributes = _List_fromArray(
			[
				$elm$html$Html$Events$onMouseLeave(
				$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
				$elm$html$Html$Events$onMouseEnter(
				$author$project$Message$Message$Hover(
					$elm$core$Maybe$Just(
						$author$project$Message$Message$StepState(stepID)))),
				$elm$html$Html$Attributes$id(
				$author$project$Message$Effects$toHtmlID(
					$author$project$Message$Message$StepState(stepID))),
				A2($elm$html$Html$Attributes$style, 'position', 'relative')
			]);
		switch (state) {
			case 1:
				return $author$project$Views$Spinner$spinner(
					{ef: '7px', cg: 14});
			case 0:
				return A3(
					$author$project$Views$Icon$iconWithTooltip,
					{d1: $author$project$Assets$PendingIcon, cg: 28},
					A2(
						$elm$core$List$cons,
						A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'pending'),
						_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)),
					tooltip);
			case 2:
				return A3(
					$author$project$Views$Icon$iconWithTooltip,
					{d1: $author$project$Assets$InterruptedIcon, cg: 28},
					A2(
						$elm$core$List$cons,
						A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'interrupted'),
						_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)),
					tooltip);
			case 3:
				return A3(
					$author$project$Views$Icon$iconWithTooltip,
					{d1: $author$project$Assets$CancelledIcon, cg: 28},
					A2(
						$elm$core$List$cons,
						A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'cancelled'),
						_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)),
					tooltip);
			case 4:
				return A3(
					$author$project$Views$Icon$iconWithTooltip,
					{d1: $author$project$Assets$SuccessCheckIcon, cg: 28},
					A2(
						$elm$core$List$cons,
						A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'succeeded'),
						_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)),
					tooltip);
			case 5:
				return A3(
					$author$project$Views$Icon$iconWithTooltip,
					{d1: $author$project$Assets$FailureTimesIcon, cg: 28},
					A2(
						$elm$core$List$cons,
						A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'failed'),
						_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)),
					tooltip);
			default:
				return A3(
					$author$project$Views$Icon$iconWithTooltip,
					{d1: $author$project$Assets$ExclamationTriangleIcon, cg: 28},
					A2(
						$elm$core$List$cons,
						A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'errored'),
						_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)),
					tooltip);
		}
	});
var $author$project$Build$StepTree$StepTree$viewVersion = function (version) {
	return A2(
		$author$project$Views$DictView$view,
		_List_Nil,
		A2(
			$elm$core$Dict$map,
			$elm$core$Basics$always($elm$html$Html$text),
			A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, version)));
};
var $author$project$Build$StepTree$StepTree$viewStepWithBody = F6(
	function (model, session, depth, _v0, headerType, body) {
		var id = _v0.L;
		var name = _v0.bX;
		var log = _v0.cR;
		var state = _v0.hG;
		var error = _v0.fL;
		var expanded = _v0.fQ;
		var version = _v0.dn;
		var metadata = _v0.gN;
		var timestamps = _v0.eX;
		var initialize = _v0.gl;
		var start = _v0.hD;
		var finish = _v0.dP;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$classList(
					_List_fromArray(
						[
							_Utils_Tuple2('build-step', true),
							_Utils_Tuple2(
							'inactive',
							!$author$project$Build$StepTree$Models$isActive(state))
						])),
					A2($elm$html$Html$Attributes$attribute, 'data-step-name', name)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_Utils_ap(
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('header'),
								$elm$html$Html$Events$onClick(
								$author$project$Message$Message$Click(
									$author$project$Message$Message$StepHeader(id))),
								A2(
								$elm$html$Html$Attributes$style,
								'z-index',
								$elm$core$String$fromInt(
									A2($elm$core$Basics$max, $author$project$Build$StepTree$StepTree$maxDepth - depth, 1)))
							]),
						$author$project$Build$Styles$stepHeader(state)),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'display', 'flex')
								]),
							_List_fromArray(
								[
									A2($author$project$Build$StepTree$StepTree$viewStepHeaderLabel, headerType, id),
									A2(
									$elm$html$Html$h3,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text(name)
										]))
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'display', 'flex')
								]),
							_List_fromArray(
								[
									$author$project$Build$StepTree$StepTree$viewVersion(version),
									A3(
									$author$project$Build$StepTree$StepTree$viewStepState,
									state,
									id,
									A4(
										$author$project$Build$StepTree$StepTree$viewDurationTooltip,
										initialize,
										start,
										finish,
										A2(
											$author$project$Build$StepTree$StepTree$showTooltip,
											session,
											$author$project$Message$Message$StepState(id))))
								]))
						])),
					expanded ? A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('step-body'),
							$elm$html$Html$Attributes$class('clearfix')
						]),
					_Utils_ap(
						_List_fromArray(
							[
								$author$project$Build$StepTree$StepTree$viewMetadata(metadata),
								A2(
								$elm$html$Html$pre,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('timestamped-logs')
									]),
								A5($author$project$Build$StepTree$StepTree$viewLogs, log, timestamps, model.y, session.eW, id)),
								function () {
								if (error.$ === 1) {
									return A2($elm$html$Html$span, _List_Nil, _List_Nil);
								} else {
									var msg = error.a;
									return A2(
										$elm$html$Html$span,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('error')
											]),
										_List_fromArray(
											[
												A2(
												$elm$html$Html$pre,
												_List_Nil,
												_List_fromArray(
													[
														$elm$html$Html$text(msg)
													]))
											]));
								}
							}()
							]),
						body)) : $elm$html$Html$text('')
				]));
	});
var $author$project$Build$StepTree$StepTree$viewStep = F5(
	function (model, session, depth, step, headerType) {
		return A6($author$project$Build$StepTree$StepTree$viewStepWithBody, model, session, depth, step, headerType, _List_Nil);
	});
var $author$project$Build$StepTree$StepTree$viewStepStateWithoutTooltip = function (state) {
	var attributes = _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'position', 'relative')
		]);
	switch (state) {
		case 1:
			return $author$project$Views$Spinner$spinner(
				{ef: '7px', cg: 14});
		case 0:
			return A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$PendingIcon, cg: 28},
				A2(
					$elm$core$List$cons,
					A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'pending'),
					_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)));
		case 2:
			return A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$InterruptedIcon, cg: 28},
				A2(
					$elm$core$List$cons,
					A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'interrupted'),
					_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)));
		case 3:
			return A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$CancelledIcon, cg: 28},
				A2(
					$elm$core$List$cons,
					A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'cancelled'),
					_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)));
		case 4:
			return A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$SuccessCheckIcon, cg: 28},
				A2(
					$elm$core$List$cons,
					A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'succeeded'),
					_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)));
		case 5:
			return A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$FailureTimesIcon, cg: 28},
				A2(
					$elm$core$List$cons,
					A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'failed'),
					_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)));
		default:
			return A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$ExclamationTriangleIcon, cg: 28},
				A2(
					$elm$core$List$cons,
					A2($elm$html$Html$Attributes$attribute, 'data-step-state', 'errored'),
					_Utils_ap($author$project$Build$Styles$stepStatusIcon, attributes)));
	}
};
var $author$project$Build$StepTree$StepTree$viewAcrossStepSubHeader = F8(
	function (model, session, stepID, subHeaderIdx, keyVals, expanded, depth, subtree) {
		var state = $author$project$Build$StepTree$Models$mostSevereStepState(subtree);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$classList(
					_List_fromArray(
						[
							_Utils_Tuple2('build-step', true),
							_Utils_Tuple2(
							'inactive',
							!$author$project$Build$StepTree$Models$isActive(state))
						])),
					A2($elm$html$Html$Attributes$style, 'margin-top', '10px')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_Utils_ap(
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('header'),
								$elm$html$Html$Attributes$class('sub-header'),
								$elm$html$Html$Events$onClick(
								$author$project$Message$Message$Click(
									A2($author$project$Message$Message$StepSubHeader, stepID, subHeaderIdx))),
								A2(
								$elm$html$Html$Attributes$style,
								'z-index',
								$elm$core$String$fromInt(
									A2($elm$core$Basics$max, $author$project$Build$StepTree$StepTree$maxDepth - depth, 1)))
							]),
						$author$project$Build$Styles$stepHeader(state)),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'display', 'flex')
								]),
							_List_fromArray(
								[
									$author$project$Build$StepTree$StepTree$viewAcrossStepSubHeaderLabels(keyVals)
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'display', 'flex')
								]),
							_List_fromArray(
								[
									$author$project$Build$StepTree$StepTree$viewStepStateWithoutTooltip(state)
								]))
						])),
					expanded ? A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('step-body'),
							$elm$html$Html$Attributes$class('clearfix'),
							A2($elm$html$Html$Attributes$style, 'padding-bottom', '0')
						]),
					_List_fromArray(
						[
							A4($author$project$Build$StepTree$StepTree$viewTree, session, model, subtree, depth + 1)
						])) : $elm$html$Html$text('')
				]));
	});
var $author$project$Build$StepTree$StepTree$viewHooked = F6(
	function (session, name, model, depth, step, hook) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('hooked')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('step')
						]),
					_List_fromArray(
						[
							A4($author$project$Build$StepTree$StepTree$viewTree, session, model, step, depth)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('children')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('hook hook-' + name)
								]),
							_List_fromArray(
								[
									A4($author$project$Build$StepTree$StepTree$viewTree, session, model, hook, depth)
								]))
						]))
				]));
	});
var $author$project$Build$StepTree$StepTree$viewSeq = F4(
	function (session, model, depth, tree) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('seq')
				]),
			_List_fromArray(
				[
					A4($author$project$Build$StepTree$StepTree$viewTree, session, model, tree, depth)
				]));
	});
var $author$project$Build$StepTree$StepTree$viewTree = F4(
	function (session, model, tree, depth) {
		viewTree:
		while (true) {
			switch (tree.$) {
				case 0:
					var step = tree.a;
					return A5($author$project$Build$StepTree$StepTree$viewStep, model, session, depth, step, $author$project$Build$Models$StepHeaderTask);
				case 3:
					var step = tree.a;
					return A5(
						$author$project$Build$StepTree$StepTree$viewStep,
						model,
						session,
						depth,
						step,
						$author$project$Build$Models$StepHeaderGet(false));
				case 4:
					var step = tree.a;
					return A5(
						$author$project$Build$StepTree$StepTree$viewStep,
						model,
						session,
						depth,
						step,
						$author$project$Build$Models$StepHeaderGet(step.f2));
				case 5:
					var step = tree.a;
					return A5($author$project$Build$StepTree$StepTree$viewStep, model, session, depth, step, $author$project$Build$Models$StepHeaderPut);
				case 6:
					var step = tree.a;
					return A5($author$project$Build$StepTree$StepTree$viewStep, model, session, depth, step, $author$project$Build$Models$StepHeaderPut);
				case 1:
					var step = tree.a;
					return A5($author$project$Build$StepTree$StepTree$viewStep, model, session, depth, step, $author$project$Build$Models$StepHeaderSetPipeline);
				case 2:
					var step = tree.a;
					return A5($author$project$Build$StepTree$StepTree$viewStep, model, session, depth, step, $author$project$Build$Models$StepHeaderLoadVar);
				case 16:
					var step = tree.a;
					var $temp$session = session,
						$temp$model = model,
						$temp$tree = step,
						$temp$depth = depth;
					session = $temp$session;
					model = $temp$model;
					tree = $temp$tree;
					depth = $temp$depth;
					continue viewTree;
				case 9:
					var vars = tree.a;
					var vals = tree.b;
					var expanded = tree.c;
					var step = tree.d;
					var substeps = tree.e;
					return A6(
						$author$project$Build$StepTree$StepTree$viewStepWithBody,
						model,
						session,
						depth,
						step,
						$author$project$Build$Models$StepHeaderAcross,
						A2(
							$elm$core$List$indexedMap,
							F2(
								function (i, _v4) {
									var vals_ = _v4.a;
									var expanded_ = _v4.b;
									var substep = _v4.c;
									var keyVals = A3($elm$core$List$map2, $elm$core$Tuple$pair, vars, vals_);
									return A8($author$project$Build$StepTree$StepTree$viewAcrossStepSubHeader, model, session, step.L, i, keyVals, expanded_, depth + 1, substep);
								}),
							A2(
								$elm$core$List$filterMap,
								function (_v2) {
									var vals_ = _v2.a;
									var expanded_ = _v2.b;
									var substep = _v2.c;
									if (substep.$ === 1) {
										return $elm$core$Maybe$Nothing;
									} else {
										var substep_ = substep.a;
										return $elm$core$Maybe$Just(
											_Utils_Tuple3(vals_, expanded_, substep_));
									}
								},
								A2(
									$elm$core$List$indexedMap,
									F2(
										function (i, _v1) {
											var vals_ = _v1.a;
											var expanded_ = _v1.b;
											return _Utils_Tuple3(
												vals_,
												expanded_,
												A2($elm$core$Array$get, i, substeps));
										}),
									A3($elm$core$List$map2, $elm$core$Tuple$pair, vals, expanded)))));
				case 17:
					var tabInfo = tree.a;
					var steps = tree.b;
					return A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('retry')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$ul,
								A2(
									$elm$core$List$cons,
									$elm$html$Html$Attributes$class('retry-tabs'),
									$author$project$Build$Styles$retryTabList),
								$elm$core$Array$toList(
									A2(
										$elm$core$Array$indexedMap,
										A2($author$project$Build$StepTree$StepTree$viewRetryTab, session, tabInfo),
										steps))),
								function () {
								var _v5 = A2($elm$core$Array$get, tabInfo.de, steps);
								if (!_v5.$) {
									var step = _v5.a;
									return A4($author$project$Build$StepTree$StepTree$viewTree, session, model, step, depth);
								} else {
									return $elm$html$Html$text('');
								}
							}()
							]));
				case 18:
					var step = tree.a;
					var $temp$session = session,
						$temp$model = model,
						$temp$tree = step,
						$temp$depth = depth;
					session = $temp$session;
					model = $temp$model;
					tree = $temp$tree;
					depth = $temp$depth;
					continue viewTree;
				case 7:
					var steps = tree.a;
					return A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('aggregate')
							]),
						$elm$core$Array$toList(
							A2(
								$elm$core$Array$map,
								A3($author$project$Build$StepTree$StepTree$viewSeq, session, model, depth),
								steps)));
				case 8:
					var steps = tree.a;
					return A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('parallel')
							]),
						$elm$core$Array$toList(
							A2(
								$elm$core$Array$map,
								A3($author$project$Build$StepTree$StepTree$viewSeq, session, model, depth),
								steps)));
				case 10:
					var steps = tree.a;
					return A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('do')
							]),
						$elm$core$Array$toList(
							A2(
								$elm$core$Array$map,
								A3($author$project$Build$StepTree$StepTree$viewSeq, session, model, depth),
								steps)));
				case 11:
					var step = tree.a.A;
					var hook = tree.a.z;
					return A6($author$project$Build$StepTree$StepTree$viewHooked, session, 'success', model, depth, step, hook);
				case 12:
					var step = tree.a.A;
					var hook = tree.a.z;
					return A6($author$project$Build$StepTree$StepTree$viewHooked, session, 'failure', model, depth, step, hook);
				case 13:
					var step = tree.a.A;
					var hook = tree.a.z;
					return A6($author$project$Build$StepTree$StepTree$viewHooked, session, 'abort', model, depth, step, hook);
				case 14:
					var step = tree.a.A;
					var hook = tree.a.z;
					return A6($author$project$Build$StepTree$StepTree$viewHooked, session, 'error', model, depth, step, hook);
				default:
					var step = tree.a.A;
					var hook = tree.a.z;
					return A6($author$project$Build$StepTree$StepTree$viewHooked, session, 'ensure', model, depth, step, hook);
			}
		}
	});
var $author$project$Build$StepTree$StepTree$view = F2(
	function (session, model) {
		return A4($author$project$Build$StepTree$StepTree$viewTree, session, model, model.dj, 0);
	});
var $author$project$Views$LoadingIndicator$view = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('build-step')
		]),
	_List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('header'),
					$elm$html$Html$Attributes$class('loading-header'),
					A2($elm$html$Html$Attributes$style, 'display', 'flex')
				]),
			_List_fromArray(
				[
					$author$project$Views$Spinner$spinner(
					{ef: '7px', cg: 14}),
					A2(
					$elm$html$Html$h3,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text('loading...')
						]))
				]))
		]));
var $author$project$Build$Output$Output$viewStepTree = F3(
	function (session, steps, state) {
		var _v0 = _Utils_Tuple2(state, steps);
		_v0$0:
		while (true) {
			if (!_v0.b.$) {
				switch (_v0.a) {
					case 0:
						break _v0$0;
					case 1:
						var _v2 = _v0.a;
						var root = _v0.b.a;
						return A2($author$project$Build$StepTree$StepTree$view, session, root);
					default:
						var _v3 = _v0.a;
						var root = _v0.b.a;
						return A2($author$project$Build$StepTree$StepTree$view, session, root);
				}
			} else {
				if (!_v0.a) {
					break _v0$0;
				} else {
					var _v4 = _v0.b;
					return A2($elm$html$Html$div, _List_Nil, _List_Nil);
				}
			}
		}
		var _v1 = _v0.a;
		return $author$project$Views$LoadingIndicator$view;
	});
var $author$project$Build$Output$Output$view = F2(
	function (session, _v0) {
		var steps = _v0.hI;
		var state = _v0.hG;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('steps')
				]),
			_List_fromArray(
				[
					A3($author$project$Build$Output$Output$viewStepTree, session, steps, state)
				]));
	});
var $author$project$Build$Build$viewBuildOutput = F3(
	function (timeZone, hovered, output) {
		switch (output.$) {
			case 2:
				var o = output.a;
				return A2(
					$author$project$Build$Output$Output$view,
					{d0: hovered, eW: timeZone},
					o);
			case 1:
				return A2(
					$elm$html$Html$div,
					$author$project$Build$Styles$errorLog,
					_List_fromArray(
						[
							$elm$html$Html$text('build cancelled')
						]));
			default:
				return A2($elm$html$Html$div, _List_Nil, _List_Nil);
		}
	});
var $author$project$Assets$CogsIcon = {$: 15};
var $author$project$Build$Build$viewDetailItem = function (_v0) {
	var name = _v0.a;
	var status = _v0.b;
	return A2(
		$elm$html$Html$li,
		_List_Nil,
		_List_fromArray(
			[
				$elm$html$Html$text(name + (' - ' + status))
			]));
};
var $author$project$Build$Build$viewBuildPrepDetails = function (details) {
	return A2(
		$elm$html$Html$ul,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('details')
			]),
		A2(
			$elm$core$List$map,
			$author$project$Build$Build$viewDetailItem,
			$elm$core$Dict$toList(details)));
};
var $author$project$Assets$NotBlockingCheckIcon = {$: 17};
var $elm$html$Html$Attributes$title = $elm$html$Html$Attributes$stringProperty('title');
var $author$project$Build$Build$viewBuildPrepStatus = function (status) {
	switch (status) {
		case 0:
			return A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$title('thinking...')
					]),
				_List_fromArray(
					[
						$author$project$Views$Spinner$spinner(
						{ef: '0 8px 0 0', cg: 12})
					]));
		case 1:
			return A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$title('blocking')
					]),
				_List_fromArray(
					[
						$author$project$Views$Spinner$spinner(
						{ef: '0 8px 0 0', cg: 12})
					]));
		default:
			return A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$NotBlockingCheckIcon, cg: 12},
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'margin-right', '8px'),
						A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
						$elm$html$Html$Attributes$title('not blocking')
					]));
	}
};
var $author$project$Build$Build$viewBuildPrepLi = F3(
	function (text, status, details) {
		return A2(
			$elm$html$Html$li,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$classList(
					_List_fromArray(
						[
							_Utils_Tuple2('prep-status', true),
							_Utils_Tuple2('inactive', !status)
						]))
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex')
						]),
					_List_fromArray(
						[
							$author$project$Build$Build$viewBuildPrepStatus(status),
							A2(
							$elm$html$Html$span,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(text)
								]))
						])),
					$author$project$Build$Build$viewBuildPrepDetails(details)
				]));
	});
var $author$project$Build$Build$viewBuildPrepInput = function (_v0) {
	var name = _v0.a;
	var status = _v0.b;
	return A3($author$project$Build$Build$viewBuildPrepLi, 'discovering any new versions of ' + name, status, $elm$core$Dict$empty);
};
var $author$project$Build$Build$viewBuildPrepInputs = function (inputs) {
	return A2(
		$elm$core$List$map,
		$author$project$Build$Build$viewBuildPrepInput,
		$elm$core$Dict$toList(inputs));
};
var $author$project$Build$Build$viewBuildPrep = function (buildPrep) {
	if (!buildPrep.$) {
		var prep = buildPrep.a;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('build-step')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('header'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex'),
							A2($elm$html$Html$Attributes$style, 'align-items', 'center')
						]),
					_List_fromArray(
						[
							A2(
							$author$project$Views$Icon$icon,
							{d1: $author$project$Assets$CogsIcon, cg: 15},
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'margin', '6.5px'),
									A2($elm$html$Html$Attributes$style, 'margin-right', '0.5px'),
									A2($elm$html$Html$Attributes$style, 'background-size', 'contain')
								])),
							A2(
							$elm$html$Html$h3,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text('preparing build')
								]))
						])),
					A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$ul,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('prep-status-list'),
									A2($elm$html$Html$Attributes$style, 'font-size', '14px')
								]),
							_Utils_ap(
								_List_fromArray(
									[
										A3($author$project$Build$Build$viewBuildPrepLi, 'checking pipeline is not paused', prep.g9, $elm$core$Dict$empty),
										A3($author$project$Build$Build$viewBuildPrepLi, 'checking job is not paused', prep.g8, $elm$core$Dict$empty)
									]),
								_Utils_ap(
									$author$project$Build$Build$viewBuildPrepInputs(prep.go),
									_List_fromArray(
										[
											A3($author$project$Build$Build$viewBuildPrepLi, 'waiting for a suitable set of input versions', prep.gp, prep.gP),
											A3($author$project$Build$Build$viewBuildPrepLi, 'checking max-in-flight is not reached', prep.gM, $elm$core$Dict$empty)
										]))))
						]))
				]));
	} else {
		return A2($elm$html$Html$div, _List_Nil, _List_Nil);
	}
};
var $author$project$Build$Build$body = F2(
	function (session, params) {
		var prep = params.aZ;
		var output = params.H;
		var authorized = params.a8;
		var showHelp = params.eN;
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('scrollable-body build-body'),
						$elm$html$Html$Attributes$id($author$project$Build$Build$bodyId),
						$elm$html$Html$Attributes$tabindex(0),
						$author$project$StrictEvents$onScroll($author$project$Message$Message$Scrolled)
					]),
				$author$project$Build$Styles$body),
			authorized ? _Utils_ap(
				_List_fromArray(
					[
						$author$project$Build$Build$viewBuildPrep(prep),
						A4(
						$elm$html$Html$Lazy$lazy3,
						$author$project$Build$Build$viewBuildOutput,
						session.eW,
						$author$project$Build$Build$projectOntoBuildPage(session.d0),
						output),
						$author$project$Build$Shortcuts$keyboardHelp(showHelp)
					]),
				A2($author$project$Build$Build$tombstone, session.eW, params)) : _List_fromArray(
				[$author$project$Views$NotAuthorized$view]));
	});
var $author$project$Build$Header$Views$Abort = 0;
var $author$project$Message$Message$AbortBuildButton = {$: 2};
var $author$project$Build$Header$Views$Button = function (a) {
	return {$: 0, a: a};
};
var $author$project$Build$Header$Views$Dark = 1;
var $author$project$Build$Header$Views$Duration = function (a) {
	return {$: 2, a: a};
};
var $author$project$Build$Header$Views$Light = 0;
var $author$project$Build$Header$Views$Rerun = 2;
var $author$project$Message$Message$RerunBuildButton = {$: 3};
var $author$project$Build$Header$Views$Title = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Build$Header$Views$Trigger = 1;
var $author$project$Message$Message$TriggerBuildButton = {$: 1};
var $author$project$Build$Header$Views$Cancelled = function (a) {
	return {$: 2, a: a};
};
var $author$project$Build$Header$Views$Finished = function (a) {
	return {$: 3, a: a};
};
var $author$project$Build$Header$Views$Pending = {$: 0};
var $author$project$Build$Header$Views$Running = function (a) {
	return {$: 1, a: a};
};
var $author$project$Build$Header$Views$DaysAndHours = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $author$project$Build$Header$Views$HoursAndMinutes = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Build$Header$Views$JustSeconds = function (a) {
	return {$: 0, a: a};
};
var $author$project$Build$Header$Views$MinutesAndSeconds = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Build$Header$Header$timespan = function (dur) {
	var seconds = (dur / 1000) | 0;
	var remainingSeconds = seconds % 60;
	var minutes = (seconds / 60) | 0;
	var remainingMinutes = minutes % 60;
	var hours = (minutes / 60) | 0;
	var remainingHours = hours % 24;
	var days = (hours / 24) | 0;
	var _v0 = _Utils_Tuple3(
		_Utils_Tuple2(days, remainingHours),
		remainingMinutes,
		remainingSeconds);
	if (!_v0.a.a) {
		if (!_v0.a.b) {
			if (!_v0.b) {
				var _v1 = _v0.a;
				var s = _v0.c;
				return $author$project$Build$Header$Views$JustSeconds(s);
			} else {
				var _v2 = _v0.a;
				var m = _v0.b;
				var s = _v0.c;
				return A2($author$project$Build$Header$Views$MinutesAndSeconds, m, s);
			}
		} else {
			var _v3 = _v0.a;
			var h = _v3.b;
			var m = _v0.b;
			return A2($author$project$Build$Header$Views$HoursAndMinutes, h, m);
		}
	} else {
		var _v4 = _v0.a;
		var d = _v4.a;
		var h = _v4.b;
		return A2($author$project$Build$Header$Views$DaysAndHours, d, h);
	}
};
var $author$project$Build$Header$Views$Absolute = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Build$Header$Views$Relative = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Build$Header$Header$format = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$monthNameAbbreviated,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$dayOfMonthNumber,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$yearNumber,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$hourFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$minuteFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$secondFixed,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$amPmUppercase
		]));
var $author$project$Build$Header$Header$timestamp = F3(
	function (timeZone, now, time) {
		var formatted = A2($author$project$Build$Header$Header$format, timeZone, time);
		var ago = A2(
			$elm$core$Maybe$map,
			$author$project$Duration$between(time),
			now);
		if (!ago.$) {
			var a = ago.a;
			return (_Utils_cmp(a, ((24 * 60) * 60) * 1000) < 0) ? A2(
				$author$project$Build$Header$Views$Relative,
				$author$project$Build$Header$Header$timespan(a),
				formatted) : A2(
				$author$project$Build$Header$Views$Absolute,
				formatted,
				$elm$core$Maybe$Just(
					$author$project$Build$Header$Header$timespan(a)));
		} else {
			return A2($author$project$Build$Header$Views$Absolute, formatted, $elm$core$Maybe$Nothing);
		}
	});
var $author$project$Build$Header$Header$duration = F2(
	function (session, model) {
		var _v0 = _Utils_Tuple2(model.cv.eR, model.cv.dQ);
		if (_v0.a.$ === 1) {
			if (_v0.b.$ === 1) {
				var _v1 = _v0.a;
				var _v2 = _v0.b;
				return $author$project$Build$Header$Views$Pending;
			} else {
				var _v3 = _v0.a;
				var finished = _v0.b.a;
				return $author$project$Build$Header$Views$Cancelled(
					A3($author$project$Build$Header$Header$timestamp, session.eW, model.en, finished));
			}
		} else {
			if (_v0.b.$ === 1) {
				var started = _v0.a.a;
				var _v4 = _v0.b;
				return $author$project$Build$Header$Views$Running(
					A3($author$project$Build$Header$Header$timestamp, session.eW, model.en, started));
			} else {
				var started = _v0.a.a;
				var finished = _v0.b.a;
				return $author$project$Build$Header$Views$Finished(
					{
						cv: $author$project$Build$Header$Header$timespan(
							A2($author$project$Duration$between, started, finished)),
						f1: A3($author$project$Build$Header$Header$timestamp, session.eW, model.en, finished),
						hF: A3($author$project$Build$Header$Header$timestamp, session.eW, model.en, started)
					});
			}
		}
	});
var $author$project$Build$Header$Header$isPipelineArchived = F2(
	function (pipelines, jobId) {
		if (!jobId.$) {
			var pipelineName = jobId.a.c_;
			var teamName = jobId.a.dh;
			return A2(
				$elm$core$Maybe$withDefault,
				false,
				A2(
					$elm$core$Maybe$map,
					function ($) {
						return $.e5;
					},
					A2(
						$elm_community$list_extra$List$Extra$find,
						function (p) {
							return _Utils_eq(p.bX, pipelineName) && _Utils_eq(p.dh, teamName);
						},
						A2($krisajenkins$remotedata$RemoteData$withDefault, _List_Nil, pipelines))));
		} else {
			return false;
		}
	});
var $author$project$Build$Header$Header$tabs = function (model) {
	return A2(
		$elm$core$List$map,
		function (b) {
			return {
				fb: b.hH,
				gf: A3($author$project$Routes$buildRoute, b.L, b.bX, model.gF),
				L: b.L,
				gt: _Utils_eq(b.L, model.L),
				bX: b.bX
			};
		},
		model.gb);
};
var $author$project$Build$Header$Header$header = F2(
	function (session, model) {
		return {
			bD: model.hH,
			gK: _List_fromArray(
				[
					A2($author$project$Build$Header$Views$Title, model.bX, model.gF),
					$author$project$Build$Header$Views$Duration(
					A2($author$project$Build$Header$Header$duration, session, model))
				]),
			hn: A2($author$project$Build$Header$Header$isPipelineArchived, session.he, model.gF) ? _List_Nil : _List_fromArray(
				[
					$author$project$Build$Header$Views$Button(
					function () {
						if ($author$project$Concourse$BuildStatus$isRunning(model.hH)) {
							return $elm$core$Maybe$Just(
								{
									bD: 3,
									cn: A2($author$project$HoverState$isHovered, $author$project$Message$Message$AbortBuildButton, session.d0) ? 1 : 0,
									cI: true,
									di: false,
									dl: 0
								});
						} else {
							if (!_Utils_eq(model.gF, $elm$core$Maybe$Nothing)) {
								var isHovered = A2($author$project$HoverState$isHovered, $author$project$Message$Message$RerunBuildButton, session.d0);
								return $elm$core$Maybe$Just(
									{
										bD: model.hH,
										cn: isHovered ? 1 : 0,
										cI: true,
										di: isHovered,
										dl: 2
									});
							} else {
								return $elm$core$Maybe$Nothing;
							}
						}
					}()),
					$author$project$Build$Header$Views$Button(
					function () {
						if (!_Utils_eq(model.gF, $elm$core$Maybe$Nothing)) {
							var isHovered = A2($author$project$HoverState$isHovered, $author$project$Message$Message$TriggerBuildButton, session.d0);
							return $elm$core$Maybe$Just(
								{
									bD: model.hH,
									cn: isHovered ? 1 : 0,
									cI: !model.ct,
									di: isHovered && model.ct,
									dl: 1
								});
						} else {
							return $elm$core$Maybe$Nothing;
						}
					}())
				]),
			hN: $author$project$Build$Header$Header$tabs(model)
		};
	});
var $author$project$Colors$aborted = '#8b572a';
var $author$project$Colors$startedFaded = '#f1c40f';
var $author$project$Colors$success = '#11c560';
var $author$project$Build$Styles$header = function (status) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'justify-content', 'space-between'),
			A2($elm$html$Html$Attributes$style, 'height', '60px'),
			A2(
			$elm$html$Html$Attributes$style,
			'background',
			function () {
				switch (status) {
					case 1:
						return $author$project$Colors$startedFaded;
					case 0:
						return $author$project$Colors$pending;
					case 2:
						return $author$project$Colors$success;
					case 3:
						return $author$project$Colors$failure;
					case 4:
						return $author$project$Colors$error;
					default:
						return $author$project$Colors$aborted;
				}
			}())
		]);
};
var $author$project$Message$Message$ScrollBuilds = function (a) {
	return {$: 13, a: a};
};
var $elm$virtual_dom$VirtualDom$lazy = _VirtualDom_lazy;
var $elm$html$Html$Lazy$lazy = $elm$virtual_dom$VirtualDom$lazy;
var $author$project$Build$Header$Views$historyId = 'builds';
var $author$project$Message$Message$BuildTab = F2(
	function (a, b) {
		return {$: 39, a: a, b: b};
	});
var $author$project$Colors$abortedFaded = '#6a401c';
var $author$project$Colors$errorFaded = '#ec9910';
var $author$project$Colors$failureFaded = '#bd3826';
var $author$project$Colors$pendingFaded = '#7a7373';
var $author$project$Colors$successFaded = '#419867';
var $author$project$Colors$buildStatusColor = F2(
	function (isBright, status) {
		if (isBright) {
			switch (status) {
				case 1:
					return $author$project$Colors$started;
				case 0:
					return $author$project$Colors$pending;
				case 2:
					return $author$project$Colors$success;
				case 3:
					return $author$project$Colors$failure;
				case 4:
					return $author$project$Colors$error;
				default:
					return $author$project$Colors$aborted;
			}
		} else {
			switch (status) {
				case 1:
					return $author$project$Colors$startedFaded;
				case 0:
					return $author$project$Colors$pendingFaded;
				case 2:
					return $author$project$Colors$successFaded;
				case 3:
					return $author$project$Colors$failureFaded;
				case 4:
					return $author$project$Colors$errorFaded;
				default:
					return $author$project$Colors$abortedFaded;
			}
		}
	});
var $author$project$Dashboard$Styles$withStripes = F2(
	function (thickColor, thinColor) {
		return 'repeating-linear-gradient(-115deg,' + (thinColor + (' 0px,' + (thickColor + (' 1px,' + (thickColor + (' 10px,' + (thinColor + (' 11px,' + (thinColor + ' 16px)')))))))));
	});
var $author$project$Dashboard$Styles$striped = function (_v0) {
	var pipelineRunningKeyframes = _v0.c$;
	var thickColor = _v0.hT;
	var thinColor = _v0.hU;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			A2($author$project$Dashboard$Styles$withStripes, thickColor, thinColor)),
			A2($elm$html$Html$Attributes$style, 'background-size', '106px 114px'),
			A2($elm$html$Html$Attributes$style, 'animation', pipelineRunningKeyframes + ' 3s linear infinite')
		]);
};
var $author$project$Build$Styles$historyItem = F3(
	function (currentBuildStatus, isCurrent, status) {
		return _Utils_ap(
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'letter-spacing', '-1px'),
					A2($elm$html$Html$Attributes$style, 'padding', '0 2px 0 2px'),
					A2(
					$elm$html$Html$Attributes$style,
					'border-top',
					'1px solid ' + A2($author$project$Colors$buildStatusColor, isCurrent, currentBuildStatus)),
					A2(
					$elm$html$Html$Attributes$style,
					'border-right',
					'1px solid ' + A2($author$project$Colors$buildStatusColor, false, status)),
					A2(
					$elm$html$Html$Attributes$style,
					'opacity',
					isCurrent ? '1' : '0.8')
				]),
			function () {
				switch (status) {
					case 1:
						return $author$project$Dashboard$Styles$striped(
							{c$: 'pipeline-running', hT: $author$project$Colors$startedFaded, hU: $author$project$Colors$started});
					case 0:
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'background', $author$project$Colors$pending)
							]);
					case 2:
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'background', $author$project$Colors$success)
							]);
					case 3:
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'background', $author$project$Colors$failure)
							]);
					case 4:
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'background', $author$project$Colors$error)
							]);
					default:
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'background', $author$project$Colors$aborted)
							]);
				}
			}());
	});
var $author$project$StrictEvents$onLeftClick = function (msg) {
	return A4(
		$author$project$StrictEvents$onLeftClickCapturing,
		true,
		false,
		$elm$json$Json$Decode$succeed(0),
		$elm$core$Basics$always(msg));
};
var $author$project$Build$Header$Views$viewBuildTab = F2(
	function (backgroundColor, tab) {
		return A2(
			$elm$html$Html$li,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id(
					$elm$core$String$fromInt(tab.L)),
				A3($author$project$Build$Styles$historyItem, backgroundColor, tab.gt, tab.fb)),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$a,
					_List_fromArray(
						[
							$author$project$StrictEvents$onLeftClick(
							$author$project$Message$Message$Click(
								A2($author$project$Message$Message$BuildTab, tab.L, tab.bX))),
							$elm$html$Html$Attributes$href(
							$author$project$Routes$toString(tab.gf))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(tab.bX)
						]))
				]));
	});
var $author$project$Build$Header$Views$viewBuildTabs = function (backgroundColor) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(
			$author$project$Build$Header$Views$viewBuildTab(backgroundColor)),
		$elm$html$Html$ul(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id($author$project$Build$Header$Views$historyId)
				])));
};
var $author$project$Build$Header$Views$lazyViewHistory = function (backgroundColor) {
	return $elm$html$Html$Lazy$lazy(
		$author$project$Build$Header$Views$viewBuildTabs(backgroundColor));
};
var $author$project$StrictEvents$WheelEvent = F3(
	function (deltaX, deltaY, deltaMode) {
		return {fE: deltaMode, dE: deltaX, fF: deltaY};
	});
var $author$project$StrictEvents$DeltaModeLine = 1;
var $author$project$StrictEvents$DeltaModePage = 2;
var $author$project$StrictEvents$DeltaModePixel = 0;
var $author$project$StrictEvents$decodeDeltaMode = A2(
	$elm$json$Json$Decode$andThen,
	function (mode) {
		switch (mode) {
			case 0:
				return $elm$json$Json$Decode$succeed(0);
			case 1:
				return $elm$json$Json$Decode$succeed(1);
			case 2:
				return $elm$json$Json$Decode$succeed(2);
			default:
				return $elm$json$Json$Decode$fail(
					'invalid deltaMode ' + $elm$core$String$fromInt(mode));
		}
	},
	$elm$json$Json$Decode$int);
var $author$project$StrictEvents$decodeWheelEvent = A4(
	$elm$json$Json$Decode$map3,
	$author$project$StrictEvents$WheelEvent,
	A2($elm$json$Json$Decode$field, 'deltaX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'deltaY', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'deltaMode', $author$project$StrictEvents$decodeDeltaMode));
var $author$project$StrictEvents$onWheel = function (cons) {
	return A2(
		$elm$html$Html$Events$custom,
		'wheel',
		A2(
			$elm$json$Json$Decode$map,
			function (x) {
				return {
					bW: cons(x),
					b4: true,
					ch: false
				};
			},
			$author$project$StrictEvents$decodeWheelEvent));
};
var $elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var $author$project$Build$Header$Views$viewHistory = function (backgroundColor) {
	return A2(
		$elm$core$Basics$composeR,
		$author$project$Build$Header$Views$lazyViewHistory(backgroundColor),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$singleton,
			$elm$html$Html$div(
				_List_fromArray(
					[
						$author$project$StrictEvents$onWheel($author$project$Message$Message$ScrollBuilds)
					]))));
};
var $elm$html$Html$h1 = _VirtualDom_node('h1');
var $author$project$Assets$AbortCircleIcon = 3;
var $author$project$Assets$AddCircleIcon = 2;
var $author$project$Assets$CircleOutlineIcon = function (a) {
	return {$: 14, a: a};
};
var $author$project$Assets$RerunIcon = {$: 18};
var $elm$html$Html$button = _VirtualDom_node('button');
var $elm$html$Html$Events$onBlur = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'blur',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onFocus = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'focus',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Build$Styles$buttonTooltipArrow = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'width', '0'),
		A2($elm$html$Html$Attributes$style, 'height', '0'),
		A2($elm$html$Html$Attributes$style, 'left', '50%'),
		A2($elm$html$Html$Attributes$style, 'bottom', '0'),
		A2($elm$html$Html$Attributes$style, 'margin-left', '-5px'),
		A2($elm$html$Html$Attributes$style, 'border-bottom', '5px solid ' + $author$project$Colors$frame),
		A2($elm$html$Html$Attributes$style, 'border-left', '5px solid transparent'),
		A2($elm$html$Html$Attributes$style, 'border-right', '5px solid transparent'),
		A2($elm$html$Html$Attributes$style, 'position', 'absolute')
	]);
var $author$project$Build$Header$Views$tooltipArrow = F2(
	function (tooltip, type_) {
		var _v0 = _Utils_Tuple2(tooltip, type_);
		_v0$2:
		while (true) {
			if (_v0.a) {
				switch (_v0.b) {
					case 1:
						var _v1 = _v0.b;
						return A2($elm$html$Html$div, $author$project$Build$Styles$buttonTooltipArrow, _List_Nil);
					case 2:
						var _v2 = _v0.b;
						return A2($elm$html$Html$div, $author$project$Build$Styles$buttonTooltipArrow, _List_Nil);
					default:
						break _v0$2;
				}
			} else {
				break _v0$2;
			}
		}
		return $elm$html$Html$text('');
	});
var $author$project$Views$Styles$fontFamilyDefault = 'Inconsolata,monospace';
var $author$project$Views$Styles$defaultFont = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '12px'),
		A2($elm$html$Html$Attributes$style, 'font-family', $author$project$Views$Styles$fontFamilyDefault),
		A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightDefault)
	]);
var $author$project$Colors$text = '#e6e7e8';
var $author$project$Build$Styles$buttonTooltip = function (width) {
	return _Utils_ap(
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
				A2($elm$html$Html$Attributes$style, 'right', '0'),
				A2($elm$html$Html$Attributes$style, 'top', '100%'),
				A2(
				$elm$html$Html$Attributes$style,
				'width',
				$elm$core$String$fromInt(width) + 'px'),
				A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$text),
				A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame),
				A2($elm$html$Html$Attributes$style, 'padding', '10px'),
				A2($elm$html$Html$Attributes$style, 'text-align', 'right'),
				A2($elm$html$Html$Attributes$style, 'pointer-events', 'none'),
				A2($elm$html$Html$Attributes$style, 'z-index', '1')
			]),
		$author$project$Views$Styles$defaultFont);
};
var $author$project$Build$Header$Views$viewTooltip = F2(
	function (tooltip, type_) {
		var _v0 = _Utils_Tuple2(tooltip, type_);
		_v0$2:
		while (true) {
			if (_v0.a) {
				switch (_v0.b) {
					case 1:
						var _v1 = _v0.b;
						return A2(
							$elm$html$Html$div,
							$author$project$Build$Styles$buttonTooltip(240),
							_List_fromArray(
								[
									$elm$html$Html$text('manual triggering disabled in job config')
								]));
					case 2:
						var _v2 = _v0.b;
						return A2(
							$elm$html$Html$div,
							$author$project$Build$Styles$buttonTooltip(165),
							_List_fromArray(
								[
									$elm$html$Html$text('re-run with the same inputs')
								]));
					default:
						break _v0$2;
				}
			} else {
				break _v0$2;
			}
		}
		return $elm$html$Html$text('');
	});
var $author$project$Build$Header$Views$viewButton = function (_v0) {
	var type_ = _v0.dl;
	var tooltip = _v0.di;
	var backgroundColor = _v0.bD;
	var backgroundShade = _v0.cn;
	var isClickable = _v0.cI;
	var styles = _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'padding', '10px'),
			A2($elm$html$Html$Attributes$style, 'outline', 'none'),
			A2($elm$html$Html$Attributes$style, 'margin', '0'),
			A2($elm$html$Html$Attributes$style, 'border-width', '0 0 0 1px'),
			A2(
			$elm$html$Html$Attributes$style,
			'border-color',
			A2($author$project$Colors$buildStatusColor, false, backgroundColor)),
			A2($elm$html$Html$Attributes$style, 'border-style', 'solid'),
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			A2($author$project$Colors$buildStatusColor, !backgroundShade, backgroundColor)),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			isClickable ? 'pointer' : 'default')
		]);
	var image = function () {
		switch (type_) {
			case 0:
				return $author$project$Assets$CircleOutlineIcon(3);
			case 1:
				return $author$project$Assets$CircleOutlineIcon(2);
			default:
				return $author$project$Assets$RerunIcon;
		}
	}();
	var domID = function () {
		switch (type_) {
			case 0:
				return $author$project$Message$Message$AbortBuildButton;
			case 1:
				return $author$project$Message$Message$TriggerBuildButton;
			default:
				return $author$project$Message$Message$RerunBuildButton;
		}
	}();
	var accessibilityLabel = function () {
		switch (type_) {
			case 0:
				return 'Abort Build';
			case 1:
				return 'Trigger Build';
			default:
				return 'Rerun Build';
		}
	}();
	return A2(
		$elm$html$Html$button,
		_Utils_ap(
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$attribute, 'role', 'button'),
					A2($elm$html$Html$Attributes$attribute, 'tabindex', '0'),
					A2($elm$html$Html$Attributes$attribute, 'aria-label', accessibilityLabel),
					A2($elm$html$Html$Attributes$attribute, 'title', accessibilityLabel),
					$author$project$StrictEvents$onLeftClick(
					$author$project$Message$Message$Click(domID)),
					$elm$html$Html$Events$onMouseEnter(
					$author$project$Message$Message$Hover(
						$elm$core$Maybe$Just(domID))),
					$elm$html$Html$Events$onMouseLeave(
					$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
					$elm$html$Html$Events$onFocus(
					$author$project$Message$Message$Hover(
						$elm$core$Maybe$Just(domID))),
					$elm$html$Html$Events$onBlur(
					$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
				]),
			styles),
		_List_fromArray(
			[
				A2(
				$author$project$Views$Icon$icon,
				{d1: image, cg: 40},
				_List_Nil),
				A2($author$project$Build$Header$Views$tooltipArrow, tooltip, type_),
				A2($author$project$Build$Header$Views$viewTooltip, tooltip, type_)
			]));
};
var $author$project$Build$Header$Views$viewTimespan = function (timespan) {
	switch (timespan.$) {
		case 0:
			var s = timespan.a;
			return $elm$core$String$fromInt(s) + 's';
		case 1:
			var m = timespan.a;
			var s = timespan.b;
			return $elm$core$String$fromInt(m) + ('m ' + ($elm$core$String$fromInt(s) + 's'));
		case 2:
			var h = timespan.a;
			var m = timespan.b;
			return $elm$core$String$fromInt(h) + ('h ' + ($elm$core$String$fromInt(m) + 'm'));
		default:
			var d = timespan.a;
			var h = timespan.b;
			return $elm$core$String$fromInt(d) + ('d ' + ($elm$core$String$fromInt(h) + 'h'));
	}
};
var $author$project$Build$Header$Views$viewTimestamp = function (timestamp) {
	if (timestamp.$ === 1) {
		var timespan = timestamp.a;
		var formatted = timestamp.b;
		return A2(
			$elm$html$Html$td,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('dict-value'),
					$elm$html$Html$Attributes$title(formatted)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$span,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(
							$author$project$Build$Header$Views$viewTimespan(timespan) + ' ago')
						]))
				]));
	} else {
		if (!timestamp.b.$) {
			var formatted = timestamp.a;
			var timespan = timestamp.b.a;
			return A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('dict-value'),
						$elm$html$Html$Attributes$title(
						$author$project$Build$Header$Views$viewTimespan(timespan))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text(formatted)
							]))
					]));
		} else {
			var formatted = timestamp.a;
			var _v1 = timestamp.b;
			return A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('dict-value')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text(formatted)
							]))
					]));
		}
	}
};
var $author$project$Build$Header$Views$viewDuration = function (buildDuration) {
	return A2(
		$elm$html$Html$table,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('dictionary build-duration')
			]),
		function () {
			switch (buildDuration.$) {
				case 0:
					return _List_fromArray(
						[
							A2(
							$elm$html$Html$tr,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$td,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dict-key')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('pending')
										])),
									A2(
									$elm$html$Html$td,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dict-value')
										]),
									_List_Nil)
								]))
						]);
				case 1:
					var timestamp = buildDuration.a;
					return _List_fromArray(
						[
							A2(
							$elm$html$Html$tr,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$td,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dict-key')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('started')
										])),
									$author$project$Build$Header$Views$viewTimestamp(timestamp)
								]))
						]);
				case 2:
					var timestamp = buildDuration.a;
					return _List_fromArray(
						[
							A2(
							$elm$html$Html$tr,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$td,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dict-key')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('finished')
										])),
									$author$project$Build$Header$Views$viewTimestamp(timestamp)
								]))
						]);
				default:
					var started = buildDuration.a.hF;
					var finished = buildDuration.a.f1;
					var duration = buildDuration.a.cv;
					return _List_fromArray(
						[
							A2(
							$elm$html$Html$tr,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$td,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dict-key')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('started')
										])),
									$author$project$Build$Header$Views$viewTimestamp(started)
								])),
							A2(
							$elm$html$Html$tr,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$td,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dict-key')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('finished')
										])),
									$author$project$Build$Header$Views$viewTimestamp(finished)
								])),
							A2(
							$elm$html$Html$tr,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$td,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dict-key')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('duration')
										])),
									A2(
									$elm$html$Html$td,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dict-value')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text(
											$author$project$Build$Header$Views$viewTimespan(duration))
										]))
								]))
						]);
			}
		}());
};
var $author$project$Build$Header$Views$viewTitle = F2(
	function (name, jobID) {
		if (!jobID.$) {
			var id = jobID.a;
			return A2(
				$elm$html$Html$a,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$href(
						$author$project$Routes$toString(
							$author$project$Routes$Job(
								{L: id, aX: $elm$core$Maybe$Nothing})))
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('build-name')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(id.d7)
							])),
						A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'letter-spacing', '-1px')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(' #' + name)
							]))
					]));
		} else {
			return $elm$html$Html$text('build #' + name);
		}
	});
var $author$project$Build$Header$Views$viewWidget = function (widget) {
	switch (widget.$) {
		case 0:
			var button = widget.a;
			return A2(
				$elm$core$Maybe$withDefault,
				$elm$html$Html$text(''),
				A2($elm$core$Maybe$map, $author$project$Build$Header$Views$viewButton, button));
		case 1:
			var name = widget.a;
			var jobId = widget.b;
			return A2(
				$elm$html$Html$h1,
				_List_Nil,
				_List_fromArray(
					[
						A2($author$project$Build$Header$Views$viewTitle, name, jobId)
					]));
		default:
			var duration = widget.a;
			return $author$project$Build$Header$Views$viewDuration(duration);
	}
};
var $author$project$Build$Header$Views$viewHeader = function (header) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('fixed-header')
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$id('build-header'),
							$elm$html$Html$Attributes$class('build-header')
						]),
					$author$project$Build$Styles$header(header.bD)),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_Nil,
						A2($elm$core$List$map, $author$project$Build$Header$Views$viewWidget, header.gK)),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'display', 'flex')
							]),
						A2($elm$core$List$map, $author$project$Build$Header$Views$viewWidget, header.hn))
					])),
				A2($author$project$Build$Header$Views$viewHistory, header.bD, header.hN)
			]));
};
var $author$project$Build$Header$Header$view = F2(
	function (session, model) {
		return $author$project$Build$Header$Views$viewHeader(
			A2($author$project$Build$Header$Header$header, session, model));
	});
var $author$project$Build$Build$viewBuildPage = F2(
	function (session, model) {
		return model.av ? A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('with-fixed-header'),
					A2($elm$html$Html$Attributes$attribute, 'data-build-name', model.bX),
					A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
					A2($elm$html$Html$Attributes$style, 'display', 'flex'),
					A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
					A2($elm$html$Html$Attributes$style, 'overflow', 'hidden')
				]),
			_List_fromArray(
				[
					A2($author$project$Build$Header$Header$view, session, model),
					A2($author$project$Build$Build$body, session, model)
				])) : $author$project$Views$LoadingIndicator$view;
	});
var $author$project$Build$Build$view = F2(
	function (session, model) {
		var route = function () {
			var _v0 = model.aX;
			if (!_v0.$) {
				var buildId = _v0.a;
				return $author$project$Routes$OneOffBuild(
					{y: model.y, L: buildId});
			} else {
				var buildId = _v0.a;
				return $author$project$Routes$Build(
					{y: model.y, L: buildId});
			}
		}();
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('page-including-top-bar'),
				$author$project$Views$Styles$pageIncludingTopBar),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('top-bar-app'),
						$author$project$Views$Styles$topBar(false)),
					_List_fromArray(
						[
							$author$project$SideBar$SideBar$hamburgerMenu(session),
							$author$project$Views$TopBar$concourseLogo,
							$author$project$Build$Build$breadcrumbs(model),
							A2($author$project$Login$Login$view, session.bB, model)
						])),
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('page-below-top-bar'),
						$author$project$Views$Styles$pageBelowTopBar(route)),
					_List_fromArray(
						[
							A2(
							$author$project$SideBar$SideBar$view,
							session,
							A2(
								$elm$core$Maybe$map,
								function (j) {
									return {c_: j.c_, dh: j.dh};
								},
								model.gF)),
							A2($author$project$Build$Build$viewBuildPage, session, model)
						]))
				]));
	});
var $author$project$Dashboard$Styles$content = function (highDensity) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'align-content', 'flex-start'),
			A2(
			$elm$html$Html$Attributes$style,
			'display',
			highDensity ? 'flex' : 'initial'),
			A2($elm$html$Html$Attributes$style, 'flex-flow', 'column wrap'),
			A2(
			$elm$html$Html$Attributes$style,
			'padding',
			highDensity ? '60px' : '0'),
			A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
			A2($elm$html$Html$Attributes$style, 'overflow-y', 'auto'),
			A2($elm$html$Html$Attributes$style, 'height', '100%'),
			A2($elm$html$Html$Attributes$style, 'width', '100%'),
			A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
			A2($elm$html$Html$Attributes$style, '-webkit-overflow-scrolling', 'touch'),
			A2(
			$elm$html$Html$Attributes$style,
			'flex-direction',
			highDensity ? 'column' : 'row')
		]);
};
var $author$project$Dashboard$Styles$loadingView = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'width', '100%'),
		A2($elm$html$Html$Attributes$style, 'height', '100%')
	]);
var $author$project$Dashboard$Dashboard$loadingView = A2(
	$elm$html$Html$div,
	A2(
		$elm$core$List$cons,
		$elm$html$Html$Attributes$class('loading'),
		$author$project$Dashboard$Styles$loadingView),
	_List_fromArray(
		[
			$author$project$Views$Spinner$spinner(
			{ef: '0', cg: 36})
		]));
var $author$project$Dashboard$PipelineGrid$Constants$cardHeight = 268;
var $author$project$Dashboard$PipelineGrid$Constants$cardWidth = 272;
var $author$project$Dashboard$PipelineGrid$boundsForCell = F2(
	function (_v0, card) {
		var colGap = _v0.cr;
		var rowGap = _v0.c2;
		var offsetX = _v0.cU;
		var offsetY = _v0.cV;
		var rowHeight = $author$project$Dashboard$PipelineGrid$Constants$cardHeight + rowGap;
		var colWidth = $author$project$Dashboard$PipelineGrid$Constants$cardWidth + colGap;
		return {be: ($author$project$Dashboard$PipelineGrid$Constants$cardHeight * card.a3) + (rowGap * (card.a3 - 1)), e$: ($author$project$Dashboard$PipelineGrid$Constants$cardWidth * card.an) + (colGap * (card.an - 1)), $7: ((card.aq - 1) * colWidth) + offsetX, $8: ((card.aA - 1) * rowHeight) + offsetY};
	});
var $author$project$Dashboard$PipelineGrid$Layout$countToSpan = function (count) {
	return (count > 24) ? 3 : ((count > 12) ? 2 : 1);
};
var $author$project$Dashboard$PipelineGrid$Layout$cardSize = function (_v0) {
	var w = _v0.a;
	var h = _v0.b;
	return _Utils_Tuple2(
		$author$project$Dashboard$PipelineGrid$Layout$countToSpan(w),
		$author$project$Dashboard$PipelineGrid$Layout$countToSpan(h));
};
var $elm_community$list_extra$List$Extra$oneGroupWhileHelper = F3(
	function (condition, first, list) {
		if (!list.b) {
			return _Utils_Tuple2(_List_Nil, _List_Nil);
		} else {
			var second = list.a;
			var rest = list.b;
			if (A2(condition, first, second)) {
				var _v1 = A3($elm_community$list_extra$List$Extra$oneGroupWhileHelper, condition, second, rest);
				var thisGroup = _v1.a;
				var ungroupedRest = _v1.b;
				return _Utils_Tuple2(
					A2($elm$core$List$cons, second, thisGroup),
					ungroupedRest);
			} else {
				return _Utils_Tuple2(_List_Nil, list);
			}
		}
	});
var $elm_community$list_extra$List$Extra$accumulateGroupWhile = F3(
	function (condition, list, accum) {
		accumulateGroupWhile:
		while (true) {
			if (!list.b) {
				return $elm$core$List$reverse(accum);
			} else {
				var first = list.a;
				var rest = list.b;
				var _v1 = A3($elm_community$list_extra$List$Extra$oneGroupWhileHelper, condition, first, rest);
				var thisGroup = _v1.a;
				var ungroupedRest = _v1.b;
				var $temp$condition = condition,
					$temp$list = ungroupedRest,
					$temp$accum = A2(
					$elm$core$List$cons,
					_Utils_Tuple2(first, thisGroup),
					accum);
				condition = $temp$condition;
				list = $temp$list;
				accum = $temp$accum;
				continue accumulateGroupWhile;
			}
		}
	});
var $elm_community$list_extra$List$Extra$groupWhile = F2(
	function (condition, list) {
		return A3($elm_community$list_extra$List$Extra$accumulateGroupWhile, condition, list, _List_Nil);
	});
var $author$project$Dashboard$PipelineGrid$Constants$headerHeight = 60;
var $author$project$Dashboard$PipelineGrid$isVisible = F4(
	function (viewportHeight, scrollTop, rowHeight, _v0) {
		var row = _v0.aA;
		var spannedRows = _v0.a3;
		var numRowsVisible = $elm$core$Basics$ceiling(viewportHeight / rowHeight) + 1;
		var numRowsOffset = $elm$core$Basics$floor(scrollTop / rowHeight);
		return (_Utils_cmp(numRowsOffset, row + spannedRows) < 0) && (_Utils_cmp(row, numRowsOffset + numRowsVisible) < 1);
	});
var $author$project$Dashboard$PipelineGrid$Layout$layout = F2(
	function (numColumns, cardSizes) {
		return $elm$core$List$reverse(
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v0, _v1) {
						var w = _v0.a;
						var h = _v0.b;
						var cards = _v1.bF;
						var column = _v1.aq;
						var row = _v1.aA;
						var rowHeight = _v1.c3;
						var breaksRow = (_Utils_cmp(column + w, numColumns + 1) > 0) && (column !== 1);
						var newColumn = breaksRow ? 1 : column;
						var newRow = breaksRow ? (row + rowHeight) : row;
						var newRowHeight = breaksRow ? h : A2($elm$core$Basics$max, rowHeight, h);
						return {
							bF: A2(
								$elm$core$List$cons,
								{aq: newColumn, aA: newRow, an: w, a3: h},
								cards),
							aq: newColumn + w,
							aA: newRow,
							c3: newRowHeight
						};
					}),
				{bF: _List_Nil, aq: 1, aA: 1, c3: 1},
				cardSizes).bF);
	});
var $author$project$Dashboard$PipelineGrid$Constants$padding = 25;
var $author$project$Dashboard$PipelineGrid$previewSizes = function (pipelineLayers) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(
			function (pipeline) {
				return A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					A2(
						$elm$core$Dict$get,
						_Utils_Tuple2(pipeline.dh, pipeline.bX),
						pipelineLayers));
			}),
		$elm$core$List$map(
			function (layers) {
				return _Utils_Tuple2(
					$elm$core$List$length(layers),
					A2(
						$elm$core$Maybe$withDefault,
						0,
						$elm$core$List$maximum(
							A2($elm$core$List$map, $elm$core$List$length, layers))));
			}));
};
var $author$project$Dashboard$PipelineGrid$computeFavoritePipelinesLayout = F2(
	function (params, pipelines) {
		var rowHeight = $author$project$Dashboard$PipelineGrid$Constants$cardHeight + $author$project$Dashboard$PipelineGrid$Constants$headerHeight;
		var numColumns = A2(
			$elm$core$Basics$max,
			1,
			$elm$core$Basics$floor(params.a6 / ($author$project$Dashboard$PipelineGrid$Constants$cardWidth + $author$project$Dashboard$PipelineGrid$Constants$padding)));
		var isVisible_ = A3($author$project$Dashboard$PipelineGrid$isVisible, params.a5, params.hq, rowHeight);
		var cards = A2(
			$author$project$Dashboard$PipelineGrid$Layout$layout,
			numColumns,
			A2(
				$elm$core$List$map,
				$author$project$Dashboard$PipelineGrid$Layout$cardSize,
				A2($author$project$Dashboard$PipelineGrid$previewSizes, params.S, pipelines)));
		var numRows = A2(
			$elm$core$Maybe$withDefault,
			1,
			$elm$core$List$maximum(
				A2(
					$elm$core$List$map,
					function (c) {
						return (c.aA + c.a3) - 1;
					},
					cards)));
		var totalCardsHeight = numRows * rowHeight;
		var cardBounds = $author$project$Dashboard$PipelineGrid$boundsForCell(
			{cr: $author$project$Dashboard$PipelineGrid$Constants$padding, cU: $author$project$Dashboard$PipelineGrid$Constants$padding, cV: $author$project$Dashboard$PipelineGrid$Constants$headerHeight, c2: $author$project$Dashboard$PipelineGrid$Constants$headerHeight});
		var pipelineCards = A2(
			$elm$core$List$map,
			function (_v6) {
				var pipeline = _v6.a;
				var card = _v6.b;
				return {
					ap: cardBounds(card),
					az: pipeline
				};
			},
			A2(
				$elm$core$List$filter,
				function (_v5) {
					var card = _v5.b;
					return isVisible_(card);
				},
				A3($elm$core$List$map2, $elm$core$Tuple$pair, pipelines, cards)));
		var headers = A3(
			$elm$core$List$foldl,
			F2(
				function (_v2, _v3) {
					var first = _v2.a;
					var last = _v2.b;
					var prevTeam = _v3.a;
					var headers_ = _v3.b;
					var curTeam = first.az.dh;
					var header = function () {
						if (prevTeam.$ === 1) {
							return curTeam;
						} else {
							var prevTeam_ = prevTeam.a;
							return _Utils_eq(prevTeam_, curTeam) ? (curTeam + ' (continued)') : curTeam;
						}
					}();
					return _Utils_Tuple2(
						$elm$core$Maybe$Just(curTeam),
						A2(
							$elm$core$List$cons,
							{
								ap: {be: $author$project$Dashboard$PipelineGrid$Constants$headerHeight, e$: (last.ap.$7 + $author$project$Dashboard$PipelineGrid$Constants$cardWidth) - first.ap.$7, $7: first.ap.$7, $8: first.ap.$8 - $author$project$Dashboard$PipelineGrid$Constants$headerHeight},
								f6: header
							},
							headers_));
				}),
			_Utils_Tuple2($elm$core$Maybe$Nothing, _List_Nil),
			A2(
				$elm$core$List$map,
				function (_v0) {
					var c = _v0.a;
					var cs = _v0.b;
					return _Utils_Tuple2(
						c,
						function () {
							var _v1 = $elm_community$list_extra$List$Extra$last(cs);
							if (_v1.$ === 1) {
								return c;
							} else {
								var tail = _v1.a;
								return tail;
							}
						}());
				},
				A2(
					$elm_community$list_extra$List$Extra$groupWhile,
					F2(
						function (c1, c2) {
							return _Utils_eq(c1.az.dh, c2.az.dh) && _Utils_eq(c1.ap.$8, c2.ap.$8);
						}),
					pipelineCards))).b;
		return {U: headers, be: totalCardsHeight, b0: pipelineCards};
	});
var $author$project$Message$Message$After = function (a) {
	return {$: 1, a: a};
};
var $author$project$Message$Message$Before = function (a) {
	return {$: 0, a: a};
};
var $author$project$Dashboard$PipelineGrid$computeLayout = F2(
	function (params, g) {
		var rowHeight = $author$project$Dashboard$PipelineGrid$Constants$cardHeight + $author$project$Dashboard$PipelineGrid$Constants$padding;
		var orderedPipelines = function () {
			var _v10 = _Utils_Tuple2(params.w, params.K);
			if ((_v10.a.$ === 1) && (_v10.b.$ === 1)) {
				var _v11 = _v10.a;
				var team = _v11.a;
				var pipeline = _v11.b;
				var target = _v10.b.a;
				return _Utils_eq(g.dh, team) ? A3($author$project$Dashboard$Drag$dragPipeline, pipeline, target, g.he) : g.he;
			} else {
				return g.he;
			}
		}();
		var numColumns = A2(
			$elm$core$Basics$max,
			1,
			$elm$core$Basics$floor(params.a6 / ($author$project$Dashboard$PipelineGrid$Constants$cardWidth + $author$project$Dashboard$PipelineGrid$Constants$padding)));
		var isVisible_ = A3($author$project$Dashboard$PipelineGrid$isVisible, params.a5, params.hq, rowHeight);
		var cards = A2(
			$author$project$Dashboard$PipelineGrid$Layout$layout,
			numColumns,
			A2(
				$elm$core$List$map,
				$author$project$Dashboard$PipelineGrid$Layout$cardSize,
				A2($author$project$Dashboard$PipelineGrid$previewSizes, params.S, orderedPipelines)));
		var numRows = A2(
			$elm$core$Maybe$withDefault,
			1,
			$elm$core$List$maximum(
				A2(
					$elm$core$List$map,
					function (c) {
						return (c.aA + c.a3) - 1;
					},
					cards)));
		var totalCardsHeight = (numRows * $author$project$Dashboard$PipelineGrid$Constants$cardHeight) + ($author$project$Dashboard$PipelineGrid$Constants$padding * numRows);
		var prevAndCurrentCards = A3(
			$elm$core$List$map2,
			$elm$core$Tuple$pair,
			A2(
				$elm$core$List$cons,
				$elm$core$Maybe$Nothing,
				A2($elm$core$List$map, $elm$core$Maybe$Just, cards)),
			cards);
		var cardLookup = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (_v9) {
					var pipeline = _v9.a;
					var card = _v9.b;
					return _Utils_Tuple2(pipeline.L, card);
				},
				A3($elm$core$List$map2, $elm$core$Tuple$pair, orderedPipelines, cards)));
		var cardBounds = $author$project$Dashboard$PipelineGrid$boundsForCell(
			{cr: $author$project$Dashboard$PipelineGrid$Constants$padding, cU: $author$project$Dashboard$PipelineGrid$Constants$padding, cV: 0, c2: $author$project$Dashboard$PipelineGrid$Constants$padding});
		var dropAreaBounds = A2(
			$elm$core$Basics$composeR,
			cardBounds,
			function (b) {
				return _Utils_update(
					b,
					{e$: b.e$ + $author$project$Dashboard$PipelineGrid$Constants$padding, $7: b.$7 - $author$project$Dashboard$PipelineGrid$Constants$padding});
			});
		var dropAreas = _Utils_ap(
			A2(
				$elm$core$List$map,
				function (_v4) {
					var pipeline = _v4.a;
					var _v5 = _v4.b;
					var prevCard = _v5.a;
					var card = _v5.b;
					var boundsToRightOf = function (otherCard) {
						return dropAreaBounds(
							_Utils_update(
								otherCard,
								{aq: otherCard.aq + otherCard.an, an: 1}));
					};
					var bounds = function () {
						if (!prevCard.$) {
							var otherCard = prevCard.a;
							return ((_Utils_cmp(otherCard.aA, card.aA) < 0) && (_Utils_cmp(otherCard.aq + otherCard.an, numColumns) < 1)) ? boundsToRightOf(otherCard) : dropAreaBounds(card);
						} else {
							return dropAreaBounds(card);
						}
					}();
					return {
						ap: bounds,
						hP: $author$project$Message$Message$Before(pipeline.bX)
					};
				},
				A2(
					$elm$core$List$filter,
					function (_v2) {
						var _v3 = _v2.b;
						var card = _v3.b;
						return isVisible_(card);
					},
					A3($elm$core$List$map2, $elm$core$Tuple$pair, g.he, prevAndCurrentCards))),
			function () {
				var _v7 = $elm$core$List$head(
					$elm$core$List$reverse(
						A3($elm$core$List$map2, $elm$core$Tuple$pair, cards, g.he)));
				if (!_v7.$) {
					var _v8 = _v7.a;
					var lastCard = _v8.a;
					var lastPipeline = _v8.b;
					return (!isVisible_(lastCard)) ? _List_Nil : _List_fromArray(
						[
							{
							ap: dropAreaBounds(
								_Utils_update(
									lastCard,
									{aq: lastCard.aq + lastCard.an, an: 1})),
							hP: $author$project$Message$Message$After(lastPipeline.bX)
						}
						]);
				} else {
					return _List_Nil;
				}
			}());
		var pipelineCards = A2(
			$elm$core$List$map,
			function (_v1) {
				var pipeline = _v1.a;
				var card = _v1.b;
				return {
					ap: cardBounds(card),
					az: pipeline
				};
			},
			A2(
				$elm$core$List$filter,
				function (_v0) {
					var card = _v0.b;
					return isVisible_(card);
				},
				A2(
					$elm$core$List$map,
					function (pipeline) {
						return function (card) {
							return _Utils_Tuple2(pipeline, card);
						}(
							A2(
								$elm$core$Maybe$withDefault,
								{aq: 0, aA: 0, an: 0, a3: 0},
								A2($elm$core$Dict$get, pipeline.L, cardLookup)));
					},
					g.he)));
		return {dJ: dropAreas, be: totalCardsHeight, b0: pipelineCards};
	});
var $elm$parser$Parser$Done = function (a) {
	return {$: 1, a: a};
};
var $elm$parser$Parser$Loop = function (a) {
	return {$: 0, a: a};
};
var $elm$parser$Parser$ExpectingEnd = {$: 10};
var $elm$parser$Parser$Advanced$end = function (x) {
	return function (s) {
		return _Utils_eq(
			$elm$core$String$length(s.a),
			s.f) ? A3($elm$parser$Parser$Advanced$Good, false, 0, s) : A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, x));
	};
};
var $elm$parser$Parser$end = $elm$parser$Parser$Advanced$end($elm$parser$Parser$ExpectingEnd);
var $author$project$Dashboard$Filter$Filter = F2(
	function (negate, groupFilter) {
		return {dY: groupFilter, ek: negate};
	});
var $author$project$Dashboard$Filter$FuzzyName = function (a) {
	return {$: 1, a: a};
};
var $author$project$Dashboard$Filter$Pipeline = function (a) {
	return {$: 1, a: a};
};
var $author$project$Dashboard$Filter$parseWord = $elm$parser$Parser$getChompedString(
	$elm$parser$Parser$chompWhile(
		function (c) {
			return (c !== ' ') && ((c !== '\t') && ((c !== '\n') && (c !== '\u000D')));
		}));
var $author$project$Dashboard$Filter$Status = function (a) {
	return {$: 0, a: a};
};
var $author$project$Dashboard$Filter$PipelineRunning = {$: 1};
var $author$project$Dashboard$Filter$PipelineStatus = function (a) {
	return {$: 0, a: a};
};
var $author$project$Concourse$PipelineStatus$PipelineStatusAborted = function (a) {
	return {$: 1, a: a};
};
var $author$project$Concourse$PipelineStatus$PipelineStatusErrored = function (a) {
	return {$: 2, a: a};
};
var $author$project$Concourse$PipelineStatus$PipelineStatusFailed = function (a) {
	return {$: 3, a: a};
};
var $author$project$Concourse$PipelineStatus$PipelineStatusPaused = {$: 0};
var $author$project$Concourse$PipelineStatus$PipelineStatusPending = function (a) {
	return {$: 4, a: a};
};
var $author$project$Concourse$PipelineStatus$PipelineStatusSucceeded = function (a) {
	return {$: 5, a: a};
};
var $author$project$Concourse$PipelineStatus$Running = {$: 0};
var $elm$parser$Parser$Advanced$map = F2(
	function (func, _v0) {
		var parse = _v0;
		return function (s0) {
			var _v1 = parse(s0);
			if (!_v1.$) {
				var p = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				return A3(
					$elm$parser$Parser$Advanced$Good,
					p,
					func(a),
					s1);
			} else {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			}
		};
	});
var $elm$parser$Parser$map = $elm$parser$Parser$Advanced$map;
var $author$project$Dashboard$Filter$pipelineStatus = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$parser$Parser$map,
			function (_v0) {
				return $author$project$Dashboard$Filter$PipelineStatus($author$project$Concourse$PipelineStatus$PipelineStatusPaused);
			},
			$elm$parser$Parser$keyword('paused')),
			A2(
			$elm$parser$Parser$map,
			function (_v1) {
				return $author$project$Dashboard$Filter$PipelineStatus(
					$author$project$Concourse$PipelineStatus$PipelineStatusAborted($author$project$Concourse$PipelineStatus$Running));
			},
			$elm$parser$Parser$keyword('aborted')),
			A2(
			$elm$parser$Parser$map,
			function (_v2) {
				return $author$project$Dashboard$Filter$PipelineStatus(
					$author$project$Concourse$PipelineStatus$PipelineStatusErrored($author$project$Concourse$PipelineStatus$Running));
			},
			$elm$parser$Parser$keyword('errored')),
			A2(
			$elm$parser$Parser$map,
			function (_v3) {
				return $author$project$Dashboard$Filter$PipelineStatus(
					$author$project$Concourse$PipelineStatus$PipelineStatusFailed($author$project$Concourse$PipelineStatus$Running));
			},
			$elm$parser$Parser$keyword('failed')),
			A2(
			$elm$parser$Parser$map,
			function (_v4) {
				return $author$project$Dashboard$Filter$PipelineStatus(
					$author$project$Concourse$PipelineStatus$PipelineStatusPending(false));
			},
			$elm$parser$Parser$keyword('pending')),
			A2(
			$elm$parser$Parser$map,
			function (_v5) {
				return $author$project$Dashboard$Filter$PipelineStatus(
					$author$project$Concourse$PipelineStatus$PipelineStatusSucceeded($author$project$Concourse$PipelineStatus$Running));
			},
			$elm$parser$Parser$keyword('succeeded')),
			A2(
			$elm$parser$Parser$map,
			function (_v6) {
				return $author$project$Dashboard$Filter$PipelineRunning;
			},
			$elm$parser$Parser$keyword('running'))
		]));
var $author$project$Dashboard$Filter$statusFilter = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed(
					A2($elm$core$Basics$composeR, $author$project$Dashboard$Filter$Status, $author$project$Dashboard$Filter$Pipeline)),
				$elm$parser$Parser$keyword('status')),
			$elm$parser$Parser$symbol(':')),
		$elm$parser$Parser$spaces),
	$author$project$Dashboard$Filter$pipelineStatus);
var $author$project$Dashboard$Filter$Team = function (a) {
	return {$: 0, a: a};
};
var $author$project$Dashboard$Filter$teamFilter = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed($author$project$Dashboard$Filter$Team),
				$elm$parser$Parser$keyword('team')),
			$elm$parser$Parser$symbol(':')),
		$elm$parser$Parser$spaces),
	$author$project$Dashboard$Filter$parseWord);
var $author$project$Dashboard$Filter$groupFilter = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			$elm$parser$Parser$backtrackable($author$project$Dashboard$Filter$teamFilter),
			$elm$parser$Parser$backtrackable($author$project$Dashboard$Filter$statusFilter),
			A2(
			$elm$parser$Parser$keeper,
			$elm$parser$Parser$succeed(
				A2($elm$core$Basics$composeR, $author$project$Dashboard$Filter$FuzzyName, $author$project$Dashboard$Filter$Pipeline)),
			$author$project$Dashboard$Filter$parseWord)
		]));
var $author$project$Dashboard$Filter$filter = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed(
						$author$project$Dashboard$Filter$Filter(true)),
					$elm$parser$Parser$spaces),
				$elm$parser$Parser$symbol('-')),
			A2($elm$parser$Parser$ignorer, $author$project$Dashboard$Filter$groupFilter, $elm$parser$Parser$spaces)),
			A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed(
					$author$project$Dashboard$Filter$Filter(false)),
				$elm$parser$Parser$spaces),
			A2($elm$parser$Parser$ignorer, $author$project$Dashboard$Filter$groupFilter, $elm$parser$Parser$spaces))
		]));
var $elm$parser$Parser$Advanced$loopHelp = F4(
	function (p, state, callback, s0) {
		loopHelp:
		while (true) {
			var _v0 = callback(state);
			var parse = _v0;
			var _v1 = parse(s0);
			if (!_v1.$) {
				var p1 = _v1.a;
				var step = _v1.b;
				var s1 = _v1.c;
				if (!step.$) {
					var newState = step.a;
					var $temp$p = p || p1,
						$temp$state = newState,
						$temp$callback = callback,
						$temp$s0 = s1;
					p = $temp$p;
					state = $temp$state;
					callback = $temp$callback;
					s0 = $temp$s0;
					continue loopHelp;
				} else {
					var result = step.a;
					return A3($elm$parser$Parser$Advanced$Good, p || p1, result, s1);
				}
			} else {
				var p1 = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p || p1, x);
			}
		}
	});
var $elm$parser$Parser$Advanced$loop = F2(
	function (state, callback) {
		return function (s) {
			return A4($elm$parser$Parser$Advanced$loopHelp, false, state, callback, s);
		};
	});
var $elm$parser$Parser$Advanced$Done = function (a) {
	return {$: 1, a: a};
};
var $elm$parser$Parser$Advanced$Loop = function (a) {
	return {$: 0, a: a};
};
var $elm$parser$Parser$toAdvancedStep = function (step) {
	if (!step.$) {
		var s = step.a;
		return $elm$parser$Parser$Advanced$Loop(s);
	} else {
		var a = step.a;
		return $elm$parser$Parser$Advanced$Done(a);
	}
};
var $elm$parser$Parser$loop = F2(
	function (state, callback) {
		return A2(
			$elm$parser$Parser$Advanced$loop,
			state,
			function (s) {
				return A2(
					$elm$parser$Parser$map,
					$elm$parser$Parser$toAdvancedStep,
					callback(s));
			});
	});
var $elm$core$Result$withDefault = F2(
	function (def, result) {
		if (!result.$) {
			var a = result.a;
			return a;
		} else {
			return def;
		}
	});
var $author$project$Dashboard$Filter$parseFilters = A2(
	$elm$core$Basics$composeR,
	$elm$parser$Parser$run(
		A2(
			$elm$parser$Parser$loop,
			_List_Nil,
			function (revFilters) {
				return $elm$parser$Parser$oneOf(
					_List_fromArray(
						[
							A2(
							$elm$parser$Parser$map,
							function (_v0) {
								return $elm$parser$Parser$Done(
									$elm$core$List$reverse(revFilters));
							},
							$elm$parser$Parser$end),
							A2(
							$elm$parser$Parser$map,
							function (f) {
								return $elm$parser$Parser$Loop(
									A2($elm$core$List$cons, f, revFilters));
							},
							$author$project$Dashboard$Filter$filter)
						]));
			})),
	$elm$core$Result$withDefault(_List_Nil));
var $author$project$Dashboard$Filter$prefilter = F3(
	function (view, favoritedPipelines, p) {
		if (!view) {
			return (!p.e5) || A2($elm$core$Set$member, p.L, favoritedPipelines);
		} else {
			return true;
		}
	});
var $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$isJust = function (maybeThing) {
	if (!maybeThing.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$core$String$filter = _String_filter;
var $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$root = function (string) {
	return A2(
		$elm$core$String$filter,
		function (c) {
			return $elm$core$Char$isLower(c) || $elm$core$Char$isDigit(c);
		},
		$elm$core$String$toLower(string));
};
var $elm$core$String$cons = _String_cons;
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$searchHelper = F2(
	function (letter, restOfWord) {
		if (!restOfWord.$) {
			var string = restOfWord.a;
			var _v1 = A2(
				$elm$core$String$indexes,
				$elm$core$String$fromChar(letter),
				string);
			if (!_v1.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var found = _v1.a;
				return $elm$core$Maybe$Just(
					A2($elm$core$String$dropLeft, found + 1, string));
			}
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$match = F2(
	function (needle, haystack) {
		return $NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$isJust(
			A3(
				$elm$core$String$foldl,
				$NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$searchHelper,
				$elm$core$Maybe$Just(
					$NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$root(haystack)),
				$NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$root(needle)));
	});
var $author$project$Concourse$PipelineStatus$equal = F2(
	function (ps1, ps2) {
		var _v0 = _Utils_Tuple2(ps1, ps2);
		_v0$6:
		while (true) {
			switch (_v0.a.$) {
				case 0:
					if (!_v0.b.$) {
						var _v1 = _v0.a;
						var _v2 = _v0.b;
						return true;
					} else {
						break _v0$6;
					}
				case 1:
					if (_v0.b.$ === 1) {
						return true;
					} else {
						break _v0$6;
					}
				case 2:
					if (_v0.b.$ === 2) {
						return true;
					} else {
						break _v0$6;
					}
				case 3:
					if (_v0.b.$ === 3) {
						return true;
					} else {
						break _v0$6;
					}
				case 4:
					if (_v0.b.$ === 4) {
						return true;
					} else {
						break _v0$6;
					}
				default:
					if (_v0.b.$ === 5) {
						return true;
					} else {
						break _v0$6;
					}
			}
		}
		return false;
	});
var $author$project$Concourse$PipelineStatus$isRunning = function (status) {
	switch (status.$) {
		case 0:
			return false;
		case 1:
			var details = status.a;
			return _Utils_eq(details, $author$project$Concourse$PipelineStatus$Running);
		case 2:
			var details = status.a;
			return _Utils_eq(details, $author$project$Concourse$PipelineStatus$Running);
		case 3:
			var details = status.a;
			return _Utils_eq(details, $author$project$Concourse$PipelineStatus$Running);
		case 4:
			var bool = status.a;
			return bool;
		default:
			var details = status.a;
			return _Utils_eq(details, $author$project$Concourse$PipelineStatus$Running);
	}
};
var $author$project$Dashboard$Filter$lookupJob = F2(
	function (jobs, jobId) {
		return A2(
			$elm$core$Dict$get,
			_Utils_Tuple3(jobId.dh, jobId.c_, jobId.d7),
			jobs);
	});
var $author$project$Concourse$PipelineStatus$Since = function (a) {
	return {$: 1, a: a};
};
var $author$project$Dashboard$Pipeline$jobStatus = function (job) {
	var _v0 = job.cx;
	if (!_v0.$) {
		var build = _v0.a;
		return build.hH;
	} else {
		return 0;
	}
};
var $author$project$Concourse$BuildStatus$ordering = $matthewsj$elm_ordering$Ordering$explicit(
	_List_fromArray(
		[3, 4, 5, 2, 0]));
var $author$project$Dashboard$Pipeline$transition = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.h2;
	},
	$elm$core$Maybe$andThen(
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.cv;
			},
			function ($) {
				return $.dQ;
			})));
var $author$project$Dashboard$Pipeline$pipelineStatus = F2(
	function (jobs, pipeline) {
		if (pipeline.bn) {
			return $author$project$Concourse$PipelineStatus$PipelineStatusPaused;
		} else {
			var mostImportantJobStatus = $elm$core$List$head(
				A2(
					$elm$core$List$sortWith,
					$author$project$Concourse$BuildStatus$ordering,
					A2($elm$core$List$map, $author$project$Dashboard$Pipeline$jobStatus, jobs)));
			var lastTransition = $elm$core$List$head(
				$elm$core$List$reverse(
					A2(
						$elm$core$List$sortBy,
						$elm$time$Time$posixToMillis,
						A2($elm$core$List$filterMap, $author$project$Dashboard$Pipeline$transition, jobs))));
			var isRunning = A2(
				$elm$core$List$any,
				function (job) {
					return !_Utils_eq(job.el, $elm$core$Maybe$Nothing);
				},
				jobs);
			var firstNonSuccess = $elm$core$List$head(
				A2(
					$elm$core$List$sortBy,
					$elm$time$Time$posixToMillis,
					A2(
						$elm$core$List$filterMap,
						$author$project$Dashboard$Pipeline$transition,
						A2(
							$elm$core$List$filter,
							A2(
								$elm$core$Basics$composeR,
								$author$project$Dashboard$Pipeline$jobStatus,
								$elm$core$Basics$neq(2)),
							jobs))));
			var transitionTime = function () {
				if (!firstNonSuccess.$) {
					var t = firstNonSuccess.a;
					return $elm$core$Maybe$Just(t);
				} else {
					return lastTransition;
				}
			}();
			var _v0 = _Utils_Tuple2(mostImportantJobStatus, transitionTime);
			_v0$0:
			while (true) {
				if (_v0.a.$ === 1) {
					if (_v0.b.$ === 1) {
						break _v0$0;
					} else {
						var _v2 = _v0.a;
						return $author$project$Concourse$PipelineStatus$PipelineStatusPending(isRunning);
					}
				} else {
					switch (_v0.a.a) {
						case 0:
							if (_v0.b.$ === 1) {
								break _v0$0;
							} else {
								var _v3 = _v0.a.a;
								return $author$project$Concourse$PipelineStatus$PipelineStatusPending(isRunning);
							}
						case 1:
							if (_v0.b.$ === 1) {
								break _v0$0;
							} else {
								var _v4 = _v0.a.a;
								return $author$project$Concourse$PipelineStatus$PipelineStatusPending(isRunning);
							}
						case 2:
							if (_v0.b.$ === 1) {
								break _v0$0;
							} else {
								var _v5 = _v0.a.a;
								var since = _v0.b.a;
								return isRunning ? $author$project$Concourse$PipelineStatus$PipelineStatusSucceeded($author$project$Concourse$PipelineStatus$Running) : $author$project$Concourse$PipelineStatus$PipelineStatusSucceeded(
									$author$project$Concourse$PipelineStatus$Since(since));
							}
						case 3:
							if (_v0.b.$ === 1) {
								break _v0$0;
							} else {
								var _v6 = _v0.a.a;
								var since = _v0.b.a;
								return isRunning ? $author$project$Concourse$PipelineStatus$PipelineStatusFailed($author$project$Concourse$PipelineStatus$Running) : $author$project$Concourse$PipelineStatus$PipelineStatusFailed(
									$author$project$Concourse$PipelineStatus$Since(since));
							}
						case 4:
							if (_v0.b.$ === 1) {
								break _v0$0;
							} else {
								var _v7 = _v0.a.a;
								var since = _v0.b.a;
								return isRunning ? $author$project$Concourse$PipelineStatus$PipelineStatusErrored($author$project$Concourse$PipelineStatus$Running) : $author$project$Concourse$PipelineStatus$PipelineStatusErrored(
									$author$project$Concourse$PipelineStatus$Since(since));
							}
						default:
							if (_v0.b.$ === 1) {
								break _v0$0;
							} else {
								var _v8 = _v0.a.a;
								var since = _v0.b.a;
								return isRunning ? $author$project$Concourse$PipelineStatus$PipelineStatusAborted($author$project$Concourse$PipelineStatus$Running) : $author$project$Concourse$PipelineStatus$PipelineStatusAborted(
									$author$project$Concourse$PipelineStatus$Since(since));
							}
					}
				}
			}
			var _v1 = _v0.b;
			return $author$project$Concourse$PipelineStatus$PipelineStatusPending(isRunning);
		}
	});
var $author$project$Dashboard$Filter$pipelineFilter = F4(
	function (pf, jobs, existingJobs, pipeline) {
		var jobsForPipeline = A2(
			$elm$core$List$filterMap,
			$author$project$Dashboard$Filter$lookupJob(jobs),
			A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				A2(
					$elm$core$Dict$get,
					_Utils_Tuple2(pipeline.dh, pipeline.bX),
					existingJobs)));
		if (!pf.$) {
			var sf = pf.a;
			if (!sf.$) {
				var ps = sf.a;
				return A2(
					$author$project$Concourse$PipelineStatus$equal,
					ps,
					A2($author$project$Dashboard$Pipeline$pipelineStatus, jobsForPipeline, pipeline));
			} else {
				return $author$project$Concourse$PipelineStatus$isRunning(
					A2($author$project$Dashboard$Pipeline$pipelineStatus, jobsForPipeline, pipeline));
			}
		} else {
			var term = pf.a;
			return A2($NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$match, term, pipeline.bX);
		}
	});
var $author$project$Dashboard$Filter$runFilter = F3(
	function (jobs, existingJobs, f) {
		var negater = f.ek ? $elm$core$Basics$not : $elm$core$Basics$identity;
		var _v0 = f.dY;
		if (!_v0.$) {
			var teamName = _v0.a;
			return $elm$core$List$filter(
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.dh;
					},
					A2(
						$elm$core$Basics$composeR,
						$NoRedInk$elm_simple_fuzzy$Simple$Fuzzy$match(teamName),
						negater)));
		} else {
			var pf = _v0.a;
			return A2(
				$elm$core$Basics$composeR,
				$elm$core$List$map(
					function (g) {
						return _Utils_update(
							g,
							{
								he: A2(
									$elm$core$List$filter,
									A2(
										$elm$core$Basics$composeR,
										A3($author$project$Dashboard$Filter$pipelineFilter, pf, jobs, existingJobs),
										negater),
									g.he)
							});
					}),
				$elm$core$List$filter(
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.he;
						},
						A2($elm$core$Basics$composeR, $elm$core$List$isEmpty, $elm$core$Basics$not))));
		}
	});
var $author$project$Dashboard$Filter$filterGroups = function (_v0) {
	var pipelineJobs = _v0.R;
	var jobs = _v0.d8;
	var query = _v0.al;
	var teams = _v0.hQ;
	var pipelines = _v0.he;
	var dashboardView = _v0.fB;
	var favoritedPipelines = _v0.fX;
	var groupsToFilter = A2(
		$elm$core$List$map,
		function (_v1) {
			var t = _v1.a;
			var p = _v1.b;
			return {
				he: A2(
					$elm$core$List$filter,
					A2($author$project$Dashboard$Filter$prefilter, dashboardView, favoritedPipelines),
					p),
				dh: t
			};
		},
		$elm$core$Dict$toList(
			A2(
				$elm$core$Dict$union,
				pipelines,
				$elm$core$Dict$fromList(
					A2(
						$elm$core$List$map,
						function (t) {
							return _Utils_Tuple2(t.bX, _List_Nil);
						},
						teams)))));
	return A3(
		$elm$core$List$foldr,
		A2($author$project$Dashboard$Filter$runFilter, jobs, pipelineJobs),
		groupsToFilter,
		$author$project$Dashboard$Filter$parseFilters(query));
};
var $author$project$Message$Message$TooltipHd = F2(
	function (a, b) {
		return {$: 9, a: a, b: b};
	});
var $author$project$Colors$backgroundDark = '#323232';
var $author$project$Dashboard$Styles$pipelineCardBannerArchivedHd = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'width', '8px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$backgroundDark)
	]);
var $author$project$Colors$statusColor = function (status) {
	switch (status.$) {
		case 0:
			return $author$project$Colors$paused;
		case 5:
			return $author$project$Colors$success;
		case 4:
			return $author$project$Colors$pending;
		case 3:
			return $author$project$Colors$failure;
		case 2:
			return $author$project$Colors$error;
		default:
			return $author$project$Colors$aborted;
	}
};
var $author$project$Colors$card = '#2a2929';
var $author$project$Dashboard$Styles$solid = function (color) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', color)
		]);
};
var $author$project$Dashboard$Styles$texture = F3(
	function (pipelineRunningKeyframes, isRunning, color) {
		return isRunning ? $author$project$Dashboard$Styles$striped(
			{c$: pipelineRunningKeyframes, hT: $author$project$Colors$card, hU: color}) : $author$project$Dashboard$Styles$solid(color);
	});
var $author$project$Dashboard$Styles$pipelineCardBannerHd = function (_v0) {
	var status = _v0.hH;
	var pipelineRunningKeyframes = _v0.c$;
	var isRunning = $author$project$Concourse$PipelineStatus$isRunning(status);
	var color = $author$project$Colors$statusColor(status);
	return A2(
		$elm$core$List$cons,
		A2($elm$html$Html$Attributes$style, 'width', '8px'),
		A3($author$project$Dashboard$Styles$texture, pipelineRunningKeyframes, isRunning, color));
};
var $author$project$Colors$unknown = '#9b9b9b';
var $author$project$Dashboard$Styles$pipelineCardBannerStaleHd = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'width', '8px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$unknown)
	]);
var $author$project$Dashboard$Styles$pipelineCardBodyHd = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'width', '180px'),
		A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
		A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
		A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis'),
		A2($elm$html$Html$Attributes$style, 'align-self', 'center'),
		A2($elm$html$Html$Attributes$style, 'padding', '10px')
	]);
var $author$project$Dashboard$Styles$pipelineCardHd = function (status) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'height', '60px'),
			A2($elm$html$Html$Attributes$style, 'width', '200px'),
			A2($elm$html$Html$Attributes$style, 'margin', '0 60px 4px 0'),
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			function () {
				switch (status.$) {
					case 5:
						return $author$project$Colors$successFaded;
					case 3:
						return $author$project$Colors$failure;
					case 2:
						return $author$project$Colors$error;
					default:
						return $author$project$Colors$card;
				}
			}()),
			A2($elm$html$Html$Attributes$style, 'font-size', '19px'),
			A2($elm$html$Html$Attributes$style, 'letter-spacing', '1px')
		]);
};
var $author$project$Routes$pipelineRoute = function (p) {
	return $author$project$Routes$Pipeline(
		{
			bP: _List_Nil,
			L: {c_: p.bX, dh: p.dh}
		});
};
var $author$project$Colors$resourceError = '#e67e22';
var $author$project$Dashboard$Styles$resourceErrorTriangle = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
		A2($elm$html$Html$Attributes$style, 'top', '0'),
		A2($elm$html$Html$Attributes$style, 'right', '0'),
		A2($elm$html$Html$Attributes$style, 'width', '0'),
		A2($elm$html$Html$Attributes$style, 'height', '0'),
		A2($elm$html$Html$Attributes$style, 'border-top', '30px solid ' + $author$project$Colors$resourceError),
		A2($elm$html$Html$Attributes$style, 'border-left', '30px solid transparent')
	]);
var $author$project$Dashboard$Pipeline$hdPipelineView = function (_v0) {
	var pipeline = _v0.az;
	var pipelineRunningKeyframes = _v0.c$;
	var resourceError = _v0.eG;
	var existingJobs = _v0.dN;
	return A2(
		$elm$html$Html$a,
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('card'),
					A2($elm$html$Html$Attributes$attribute, 'data-pipeline-name', pipeline.bX),
					A2($elm$html$Html$Attributes$attribute, 'data-team-name', pipeline.dh),
					$elm$html$Html$Events$onMouseEnter(
					A2($author$project$Message$Message$TooltipHd, pipeline.bX, pipeline.dh)),
					$elm$html$Html$Attributes$href(
					$author$project$Routes$toString(
						$author$project$Routes$pipelineRoute(pipeline)))
				]),
			$author$project$Dashboard$Styles$pipelineCardHd(
				A2($author$project$Dashboard$Pipeline$pipelineStatus, existingJobs, pipeline))),
		_Utils_ap(
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					pipeline.eQ ? $author$project$Dashboard$Styles$pipelineCardBannerStaleHd : (pipeline.e5 ? $author$project$Dashboard$Styles$pipelineCardBannerArchivedHd : $author$project$Dashboard$Styles$pipelineCardBannerHd(
						{
							c$: pipelineRunningKeyframes,
							hH: A2($author$project$Dashboard$Pipeline$pipelineStatus, existingJobs, pipeline)
						})),
					_List_Nil),
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$class('dashboardhd-pipeline-name'),
						$author$project$Dashboard$Styles$pipelineCardBodyHd),
					_List_fromArray(
						[
							$elm$html$Html$text(pipeline.bX)
						]))
				]),
			resourceError ? _List_fromArray(
				[
					A2($elm$html$Html$div, $author$project$Dashboard$Styles$resourceErrorTriangle, _List_Nil)
				]) : _List_Nil));
};
var $author$project$Dashboard$Group$lookupJob = F2(
	function (jobs, jobId) {
		return A2(
			$elm$core$Dict$get,
			_Utils_Tuple3(jobId.dh, jobId.c_, jobId.d7),
			jobs);
	});
var $author$project$Dashboard$Styles$noPipelineCardHd = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$card),
		A2($elm$html$Html$Attributes$style, 'font-size', '14px'),
		A2($elm$html$Html$Attributes$style, 'width', '200px'),
		A2($elm$html$Html$Attributes$style, 'height', '60px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'letter-spacing', '1px'),
		A2($elm$html$Html$Attributes$style, 'margin-right', '60px')
	]);
var $author$project$Dashboard$Styles$noPipelineCardTextHd = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'padding', '10px')
	]);
var $author$project$Dashboard$Group$pipelineNotSetView = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('card')
		]),
	_List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			$author$project$Dashboard$Styles$noPipelineCardHd,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					$author$project$Dashboard$Styles$noPipelineCardTextHd,
					_List_fromArray(
						[
							$elm$html$Html$text('no pipelines set')
						]))
				]))
		]));
var $author$project$Dashboard$Group$Tag$Member = 1;
var $author$project$Dashboard$Group$Tag$Owner = 0;
var $author$project$Dashboard$Group$Tag$PipelineOperator = 2;
var $author$project$Dashboard$Group$Tag$Viewer = 3;
var $author$project$Dashboard$Group$Tag$ordering = $matthewsj$elm_ordering$Ordering$explicit(
	_List_fromArray(
		[
			$elm$core$Maybe$Just(0),
			$elm$core$Maybe$Just(1),
			$elm$core$Maybe$Just(2),
			$elm$core$Maybe$Just(3),
			$elm$core$Maybe$Nothing
		]));
var $author$project$Dashboard$Group$Tag$parseRole = function (role) {
	switch (role) {
		case 'owner':
			return $elm$core$Maybe$Just(0);
		case 'member':
			return $elm$core$Maybe$Just(1);
		case 'pipeline-operator':
			return $elm$core$Maybe$Just(2);
		case 'viewer':
			return $elm$core$Maybe$Just(3);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Dashboard$Group$Tag$tag = F2(
	function (user, teamName) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$core$Maybe$Nothing,
			$elm$core$List$head(
				A2(
					$elm$core$List$sortWith,
					$author$project$Dashboard$Group$Tag$ordering,
					A2(
						$elm$core$List$map,
						$author$project$Dashboard$Group$Tag$parseRole,
						A2(
							$elm$core$Maybe$withDefault,
							_List_Nil,
							A2($elm$core$Dict$get, teamName, user.hQ))))));
	});
var $author$project$Dashboard$Group$tag = F2(
	function (_v0, g) {
		var userState = _v0.bB;
		if (!userState.$) {
			var user = userState.a;
			return A2($author$project$Dashboard$Group$Tag$tag, user, g.dh);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Dashboard$Styles$teamNameHd = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'letter-spacing', '.2em')
	]);
var $author$project$Dashboard$Group$Tag$toString = function (t) {
	switch (t) {
		case 0:
			return 'OWNER';
		case 1:
			return 'MEMBER';
		case 2:
			return 'PIPELINE_OPERATOR';
		default:
			return 'VIEWER';
	}
};
var $author$project$Colors$white = '#ffffff';
var $author$project$Dashboard$Group$Tag$view = F2(
	function (isHd, t) {
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + $author$project$Colors$white),
						A2($elm$html$Html$Attributes$style, 'display', 'inline-block'),
						A2($elm$html$Html$Attributes$style, 'font-size', '0.7em'),
						A2($elm$html$Html$Attributes$style, 'padding', '0.5em'),
						A2($elm$html$Html$Attributes$style, 'line-height', '0.9em'),
						A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
						A2($elm$html$Html$Attributes$style, 'letter-spacing', '0.2em')
					]),
				isHd ? _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'margin-bottom', '1em')
					]) : _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'margin-bottom', '')
					])),
			_List_fromArray(
				[
					$elm$html$Html$text(
					$author$project$Dashboard$Group$Tag$toString(t))
				]));
	});
var $author$project$Dashboard$Group$hdView = F3(
	function (_v0, session, g) {
		var pipelineRunningKeyframes = _v0.c$;
		var pipelinesWithResourceErrors = _v0.ak;
		var pipelineJobs = _v0.R;
		var jobs = _v0.d8;
		var orderedPipelines = g.he;
		var teamPipelines = $elm$core$List$isEmpty(orderedPipelines) ? _List_fromArray(
			[$author$project$Dashboard$Group$pipelineNotSetView]) : A2(
			$elm$core$List$map,
			function (p) {
				return $author$project$Dashboard$Pipeline$hdPipelineView(
					{
						dN: A2(
							$elm$core$List$filterMap,
							$author$project$Dashboard$Group$lookupJob(jobs),
							A2(
								$elm$core$Maybe$withDefault,
								_List_Nil,
								A2(
									$elm$core$Dict$get,
									_Utils_Tuple2(p.dh, p.bX),
									pipelineJobs))),
						az: p,
						c$: pipelineRunningKeyframes,
						eG: A2(
							$elm$core$Set$member,
							_Utils_Tuple2(p.dh, p.bX),
							pipelinesWithResourceErrors)
					});
			},
			orderedPipelines);
		var header = A2(
			$elm$core$List$cons,
			A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('dashboard-team-name')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(g.dh)
					])),
			$elm_community$maybe_extra$Maybe$Extra$toList(
				A2(
					$elm$core$Maybe$map,
					$author$project$Dashboard$Group$Tag$view(true),
					A2($author$project$Dashboard$Group$tag, session, g))));
		if (!teamPipelines.b) {
			return header;
		} else {
			var p = teamPipelines.a;
			var ps = teamPipelines.b;
			return A2(
				$elm$core$List$cons,
				A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$class('dashboard-team-name-wrapper'),
						$author$project$Dashboard$Styles$teamNameHd),
					_Utils_ap(
						header,
						_List_fromArray(
							[p]))),
				ps);
		}
	});
var $author$project$Dashboard$Styles$noResults = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
		A2($elm$html$Html$Attributes$style, 'font-size', '13px'),
		A2($elm$html$Html$Attributes$style, 'margin-top', '20px')
	]);
var $author$project$Dashboard$Dashboard$noResultsView = function (query) {
	var boldedQuery = A2(
		$elm$html$Html$span,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('monospace-bold')
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(query)
			]));
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$class('no-results'),
			$author$project$Dashboard$Styles$noResults),
		_List_fromArray(
			[
				$elm$html$Html$text('No results for '),
				boldedQuery,
				$elm$html$Html$text(' matched your search.')
			]));
};
var $matthewsj$elm_ordering$Ordering$breakTiesWith = F4(
	function (tiebreaker, mainOrdering, x, y) {
		var _v0 = A2(mainOrdering, x, y);
		switch (_v0) {
			case 0:
				return 0;
			case 2:
				return 2;
			default:
				return A2(tiebreaker, x, y);
		}
	});
var $matthewsj$elm_ordering$Ordering$byFieldWith = F4(
	function (compareField, extractField, x, y) {
		return A2(
			compareField,
			extractField(x),
			extractField(y));
	});
var $matthewsj$elm_ordering$Ordering$natural = $elm$core$Basics$compare;
var $matthewsj$elm_ordering$Ordering$byField = $matthewsj$elm_ordering$Ordering$byFieldWith($matthewsj$elm_ordering$Ordering$natural);
var $author$project$Dashboard$Group$ordering = function (session) {
	return A2(
		$matthewsj$elm_ordering$Ordering$breakTiesWith,
		$matthewsj$elm_ordering$Ordering$byField(
			function ($) {
				return $.dh;
			}),
		A2(
			$matthewsj$elm_ordering$Ordering$byFieldWith,
			$author$project$Dashboard$Group$Tag$ordering,
			$author$project$Dashboard$Group$tag(session)));
};
var $author$project$Dashboard$Styles$pipelineSectionHeader = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '22px'),
		A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightBold),
		A2($elm$html$Html$Attributes$style, 'padding', '30px 0 10px 37.5px')
	]);
var $author$project$Dashboard$PipelineGrid$Constants$sectionHeaderHeight = 70;
var $author$project$Dashboard$PipelineGrid$Constants$sectionSpacerHeight = 30;
var $author$project$Message$Message$DashboardGroup = function (a) {
	return {$: 48, a: a};
};
var $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var $elm$html$Html$Keyed$node = $elm$virtual_dom$VirtualDom$keyedNode;
var $author$project$Message$Message$DragEnd = {$: 7};
var $author$project$Message$Message$DragStart = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Message$Message$PipelineWrapper = function (a) {
	return {$: 40, a: a};
};
var $elm$html$Html$Attributes$draggable = _VirtualDom_attribute('draggable');
var $elm$html$Html$Events$onMouseOut = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseout',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onMouseOver = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseover',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Dashboard$Styles$pipelineCardBody = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$card),
		A2($elm$html$Html$Attributes$style, 'margin', '2px 0'),
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex')
	]);
var $author$project$Dashboard$Styles$pipelinePreviewGrid = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
		A2($elm$html$Html$Attributes$style, 'width', '100%')
	]);
var $author$project$Message$Message$JobPreview = F2(
	function (a, b) {
		return {$: 41, a: a, b: b};
	});
var $author$project$Dashboard$Styles$jobPreview = F2(
	function (job, isHovered) {
		return _Utils_ap(
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
					A2($elm$html$Html$Attributes$style, 'display', 'flex'),
					A2($elm$html$Html$Attributes$style, 'margin', '2px')
				]),
			function () {
				if (job.bn) {
					return _List_fromArray(
						[
							A2(
							$elm$html$Html$Attributes$style,
							'background-color',
							$author$project$Colors$statusColor($author$project$Concourse$PipelineStatus$PipelineStatusPaused))
						]);
				} else {
					var isRunning = !_Utils_eq(job.el, $elm$core$Maybe$Nothing);
					var finishedBuildStatus = A2(
						$elm$core$Maybe$withDefault,
						0,
						A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.hH;
							},
							job.cx));
					var color = A2($author$project$Colors$buildStatusColor, !isHovered, finishedBuildStatus);
					return isRunning ? $author$project$Dashboard$Styles$striped(
						{
							c$: 'pipeline-running',
							hT: A2($author$project$Colors$buildStatusColor, false, finishedBuildStatus),
							hU: A2($author$project$Colors$buildStatusColor, true, finishedBuildStatus)
						}) : $author$project$Dashboard$Styles$solid(color);
				}
			}());
	});
var $author$project$Dashboard$Styles$jobPreviewLink = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1')
	]);
var $author$project$Routes$jobRoute = function (j) {
	return $author$project$Routes$Job(
		{
			L: {d7: j.bX, c_: j.c_, dh: j.dh},
			aX: $elm$core$Maybe$Nothing
		});
};
var $author$project$Dashboard$DashboardPreview$viewJob = F3(
	function (section, hovered, job) {
		var latestBuild = _Utils_eq(job.el, $elm$core$Maybe$Nothing) ? job.cx : job.el;
		var jobId = {d7: job.bX, c_: job.c_, dh: job.dh};
		var buildRoute = function () {
			if (latestBuild.$ === 1) {
				return $author$project$Routes$jobRoute(job);
			} else {
				var build = latestBuild.a;
				return A3($author$project$Routes$buildRoute, build.L, build.bX, build.gF);
			}
		}();
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				A2($elm$html$Html$Attributes$attribute, 'data-tooltip', job.bX),
				_Utils_ap(
					A2(
						$author$project$Dashboard$Styles$jobPreview,
						job,
						A2(
							$author$project$HoverState$isHovered,
							A2($author$project$Message$Message$JobPreview, section, jobId),
							hovered)),
					_List_fromArray(
						[
							$elm$html$Html$Events$onMouseEnter(
							$author$project$Message$Message$Hover(
								$elm$core$Maybe$Just(
									A2($author$project$Message$Message$JobPreview, section, jobId)))),
							$elm$html$Html$Events$onMouseLeave(
							$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
						]))),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$a,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$href(
							$author$project$Routes$toString(buildRoute)),
						$author$project$Dashboard$Styles$jobPreviewLink),
					_List_fromArray(
						[
							$elm$html$Html$text('')
						]))
				]));
	});
var $author$project$Dashboard$DashboardPreview$viewJobLayer = F3(
	function (section, hovered, jobs) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('parallel-grid')
				]),
			A2(
				$elm$core$List$map,
				A2($author$project$Dashboard$DashboardPreview$viewJob, section, hovered),
				jobs));
	});
var $author$project$Dashboard$DashboardPreview$view = F3(
	function (section, hovered, layers) {
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$class('pipeline-grid'),
				$author$project$Dashboard$Styles$pipelinePreviewGrid),
			A2(
				$elm$core$List$map,
				A2($author$project$Dashboard$DashboardPreview$viewJobLayer, section, hovered),
				layers));
	});
var $author$project$Dashboard$Pipeline$bodyView = F3(
	function (section, hovered, layers) {
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$class('card-body'),
				$author$project$Dashboard$Styles$pipelineCardBody),
			_List_fromArray(
				[
					A3($author$project$Dashboard$DashboardPreview$view, section, hovered, layers)
				]));
	});
var $author$project$Views$Styles$Above = 0;
var $author$project$Message$Message$PipelineCardFavoritedIcon = F2(
	function (a, b) {
		return {$: 21, a: a, b: b};
	});
var $author$project$Message$Message$PipelineCardPauseToggle = F2(
	function (a, b) {
		return {$: 17, a: a, b: b};
	});
var $author$project$Message$Message$VisibilityButton = F2(
	function (a, b) {
		return {$: 20, a: a, b: b};
	});
var $elm$core$List$intersperse = F2(
	function (sep, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var hd = xs.a;
			var tl = xs.b;
			var step = F2(
				function (x, rest) {
					return A2(
						$elm$core$List$cons,
						sep,
						A2($elm$core$List$cons, x, rest));
				});
			var spersed = A3($elm$core$List$foldr, step, _List_Nil, tl);
			return A2($elm$core$List$cons, hd, spersed);
		}
	});
var $author$project$UserState$isAnonymous = function (userState) {
	if (!userState.$) {
		return false;
	} else {
		return true;
	}
};
var $author$project$UserState$isMember = function (_v0) {
	var teamName = _v0.dh;
	var userState = _v0.bB;
	if (!userState.$) {
		var user = userState.a;
		if (user.gs) {
			return true;
		} else {
			var _v2 = A2($elm$core$Dict$get, teamName, user.hQ);
			if (!_v2.$) {
				var roles = _v2.a;
				return A2($elm$core$List$member, 'pipeline-operator', roles) || (A2($elm$core$List$member, 'member', roles) || A2($elm$core$List$member, 'owner', roles));
			} else {
				return false;
			}
		}
	} else {
		return false;
	}
};
var $author$project$Dashboard$Styles$pipelineCardFooter = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'padding', '13.5px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'space-between'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$card)
	]);
var $author$project$Assets$PipelineStatusIcon = function (a) {
	return {$: 25, a: a};
};
var $author$project$Message$Message$PipelineStatusIcon = F2(
	function (a, b) {
		return {$: 16, a: a, b: b};
	});
var $author$project$Assets$PipelineStatusIconJobsDisabled = {$: 27};
var $author$project$Assets$PipelineStatusIconStale = {$: 26};
var $author$project$Dashboard$Styles$pipelineCardTransitionAgeStale = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$unknown),
		A2($elm$html$Html$Attributes$style, 'font-size', '18px'),
		A2($elm$html$Html$Attributes$style, 'line-height', '20px'),
		A2($elm$html$Html$Attributes$style, 'letter-spacing', '0.05em'),
		A2($elm$html$Html$Attributes$style, 'margin-left', '8px')
	]);
var $author$project$Dashboard$Styles$pipelineStatusIcon = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-size', 'contain')
	]);
var $author$project$Dashboard$Styles$pipelineCardTransitionAge = function (status) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'color',
			$author$project$Colors$statusColor(status)),
			A2($elm$html$Html$Attributes$style, 'font-size', '18px'),
			A2($elm$html$Html$Attributes$style, 'line-height', '20px'),
			A2($elm$html$Html$Attributes$style, 'letter-spacing', '0.05em'),
			A2($elm$html$Html$Attributes$style, 'margin-left', '8px')
		]);
};
var $author$project$Dashboard$Pipeline$sinceTransitionText = F2(
	function (details, now) {
		if (!details.$) {
			return 'running';
		} else {
			var time = details.a;
			return $author$project$Duration$format(
				A2($author$project$Duration$between, time, now));
		}
	});
var $author$project$Dashboard$Pipeline$transitionView = F2(
	function (t, status) {
		var _v0 = _Utils_Tuple2(status, t);
		_v0$7:
		while (true) {
			switch (_v0.a.$) {
				case 0:
					var _v1 = _v0.a;
					return A2(
						$elm$html$Html$div,
						A2(
							$elm$core$List$cons,
							$elm$html$Html$Attributes$class('build-duration'),
							$author$project$Dashboard$Styles$pipelineCardTransitionAge(status)),
						_List_fromArray(
							[
								$elm$html$Html$text('paused')
							]));
				case 4:
					if (!_v0.a.a) {
						return A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$class('build-duration'),
								$author$project$Dashboard$Styles$pipelineCardTransitionAge(status)),
							_List_fromArray(
								[
									$elm$html$Html$text('pending')
								]));
					} else {
						return A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$class('build-duration'),
								$author$project$Dashboard$Styles$pipelineCardTransitionAge(status)),
							_List_fromArray(
								[
									$elm$html$Html$text('running')
								]));
					}
				case 1:
					if (!_v0.b.$) {
						var details = _v0.a.a;
						var now = _v0.b.a;
						return A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$class('build-duration'),
								$author$project$Dashboard$Styles$pipelineCardTransitionAge(status)),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2($author$project$Dashboard$Pipeline$sinceTransitionText, details, now))
								]));
					} else {
						break _v0$7;
					}
				case 2:
					if (!_v0.b.$) {
						var details = _v0.a.a;
						var now = _v0.b.a;
						return A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$class('build-duration'),
								$author$project$Dashboard$Styles$pipelineCardTransitionAge(status)),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2($author$project$Dashboard$Pipeline$sinceTransitionText, details, now))
								]));
					} else {
						break _v0$7;
					}
				case 3:
					if (!_v0.b.$) {
						var details = _v0.a.a;
						var now = _v0.b.a;
						return A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$class('build-duration'),
								$author$project$Dashboard$Styles$pipelineCardTransitionAge(status)),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2($author$project$Dashboard$Pipeline$sinceTransitionText, details, now))
								]));
					} else {
						break _v0$7;
					}
				default:
					if (!_v0.b.$) {
						var details = _v0.a.a;
						var now = _v0.b.a;
						return A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$class('build-duration'),
								$author$project$Dashboard$Styles$pipelineCardTransitionAge(status)),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2($author$project$Dashboard$Pipeline$sinceTransitionText, details, now))
								]));
					} else {
						break _v0$7;
					}
			}
		}
		return $elm$html$Html$text('');
	});
var $author$project$Dashboard$Pipeline$pipelineStatusView = F4(
	function (section, pipeline, status, now) {
		var pipelineId = {c_: pipeline.bX, dh: pipeline.dh};
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'display', 'flex'),
					$elm$html$Html$Attributes$class('pipeline-status')
				]),
			pipeline.e5 ? _List_Nil : _List_fromArray(
				[
					pipeline.d9 ? A2(
					$author$project$Views$Icon$icon,
					{d1: $author$project$Assets$PipelineStatusIconJobsDisabled, cg: 20},
					_Utils_ap(
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'opacity', '0.5'),
								$elm$html$Html$Attributes$id(
								$author$project$Message$Effects$toHtmlID(
									A2($author$project$Message$Message$PipelineStatusIcon, section, pipelineId))),
								$elm$html$Html$Events$onMouseEnter(
								$author$project$Message$Message$Hover(
									$elm$core$Maybe$Just(
										A2($author$project$Message$Message$PipelineStatusIcon, section, pipelineId))))
							]),
						$author$project$Dashboard$Styles$pipelineStatusIcon)) : (pipeline.eQ ? A2(
					$author$project$Views$Icon$icon,
					{d1: $author$project$Assets$PipelineStatusIconStale, cg: 20},
					$author$project$Dashboard$Styles$pipelineStatusIcon) : A2(
					$author$project$Views$Icon$icon,
					{
						d1: $author$project$Assets$PipelineStatusIcon(status),
						cg: 20
					},
					$author$project$Dashboard$Styles$pipelineStatusIcon)),
					pipeline.d9 ? A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$class('build-duration'),
						$author$project$Dashboard$Styles$pipelineCardTransitionAgeStale),
					_List_fromArray(
						[
							$elm$html$Html$text('no data')
						])) : (pipeline.eQ ? A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$class('build-duration'),
						$author$project$Dashboard$Styles$pipelineCardTransitionAgeStale),
					_List_fromArray(
						[
							$elm$html$Html$text('loading...')
						])) : A2($author$project$Dashboard$Pipeline$transitionView, now, status))
				]));
	});
var $author$project$Views$FavoritedIcon$view = F2(
	function (params, attrs) {
		return A2(
			$author$project$Views$Icon$icon,
			{
				d1: $author$project$Assets$FavoritedToggleIcon(params.gv),
				cg: 20
			},
			_Utils_ap(
				_List_fromArray(
					[
						A2(
						$elm$html$Html$Attributes$style,
						'opacity',
						(params.gx || params.gv) ? '1' : '0.5'),
						A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
						A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(params.dI)),
						$elm$html$Html$Events$onMouseEnter(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(params.dI))),
						$elm$html$Html$Events$onMouseLeave(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
					]),
				attrs));
	});
var $author$project$Assets$PauseIcon = {$: 38};
var $author$project$Assets$PlayIcon = {$: 37};
var $author$project$Views$Styles$pauseToggle = function (margin) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			A2($elm$html$Html$Attributes$style, 'margin', margin)
		]);
};
var $author$project$Views$Styles$pauseToggleIcon = function (_v0) {
	var isHovered = _v0.gx;
	var isClickable = _v0.cI;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'opacity',
			(!isClickable) ? '0.2' : (isHovered ? '1' : '0.5')),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			isClickable ? 'pointer' : 'default')
		]);
};
var $author$project$Views$Styles$pauseToggleTooltip = function (ttp) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', '#9b9b9b'),
			A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
			A2(
			$elm$html$Html$Attributes$style,
			function () {
				if (!ttp) {
					return 'bottom';
				} else {
					return 'top';
				}
			}(),
			'100%'),
			A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
			A2($elm$html$Html$Attributes$style, 'padding', '2.5px'),
			A2($elm$html$Html$Attributes$style, 'margin-bottom', '5px'),
			A2($elm$html$Html$Attributes$style, 'right', '-150%'),
			A2($elm$html$Html$Attributes$style, 'z-index', '1')
		]);
};
var $author$project$Views$PauseToggle$view = function (params) {
	var isClickable = $author$project$UserState$isAnonymous(params.bB) || $author$project$UserState$isMember(
		{dh: params.az.dh, bB: params.bB});
	return params.d5 ? $author$project$Views$Spinner$spinner(
		{ef: params.ef, cg: 20}) : A2(
		$elm$html$Html$div,
		_Utils_ap(
			$author$project$Views$Styles$pauseToggle(params.ef),
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Events$onMouseEnter(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(params.dI))),
						$elm$html$Html$Events$onMouseLeave(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
						$elm$html$Html$Attributes$class('pause-toggle')
					]),
				isClickable ? _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(params.dI))
					]) : _List_Nil)),
		_List_fromArray(
			[
				A2(
				$author$project$Views$Icon$icon,
				{
					d1: params.gz ? $author$project$Assets$PlayIcon : $author$project$Assets$PauseIcon,
					cg: 20
				},
				$author$project$Views$Styles$pauseToggleIcon(
					{cI: isClickable, gx: isClickable && params.gC})),
				(params.gC && (!isClickable)) ? A2(
				$elm$html$Html$div,
				$author$project$Views$Styles$pauseToggleTooltip(params.h1),
				_List_fromArray(
					[
						$elm$html$Html$text('not authorized')
					])) : $elm$html$Html$text('')
			]));
};
var $author$project$Assets$VisibilityToggleIcon = function (a) {
	return {$: 4, a: a};
};
var $author$project$Dashboard$Styles$visibilityToggle = function (_v0) {
	var _public = _v0.eB;
	var isClickable = _v0.cI;
	var isHovered = _v0.gx;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just(
					$author$project$Assets$VisibilityToggleIcon(_public)))),
			A2($elm$html$Html$Attributes$style, 'height', '20px'),
			A2($elm$html$Html$Attributes$style, 'width', '20px'),
			A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			isClickable ? 'pointer' : 'default'),
			A2(
			$elm$html$Html$Attributes$style,
			'opacity',
			(isClickable && isHovered) ? '1' : '0.5')
		]);
};
var $author$project$Dashboard$Pipeline$visibilityView = function (_v0) {
	var _public = _v0.eB;
	var pipelineId = _v0.ev;
	var isClickable = _v0.cI;
	var isHovered = _v0.gx;
	var isVisibilityLoading = _v0.aR;
	var section = _v0.ht;
	return isVisibilityLoading ? $author$project$Views$Spinner$hoverableSpinner(
		{
			ge: $elm$core$Maybe$Just(
				A2($author$project$Message$Message$VisibilityButton, section, pipelineId)),
			ef: '0',
			cg: 20
		}) : A2(
		$elm$html$Html$div,
		_Utils_ap(
			$author$project$Dashboard$Styles$visibilityToggle(
				{cI: isClickable, gx: isHovered, eB: _public}),
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Events$onMouseEnter(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(
								A2($author$project$Message$Message$VisibilityButton, section, pipelineId)))),
						$elm$html$Html$Events$onMouseLeave(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
						$elm$html$Html$Attributes$id(
						$author$project$Message$Effects$toHtmlID(
							A2($author$project$Message$Message$VisibilityButton, section, pipelineId)))
					]),
				isClickable ? _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							A2($author$project$Message$Message$VisibilityButton, section, pipelineId)))
					]) : _List_Nil)),
		_List_Nil);
};
var $author$project$Dashboard$Pipeline$footerView = F7(
	function (userState, favoritedPipelines, pipeline, section, now, hovered, existingJobs) {
		var status = A2($author$project$Dashboard$Pipeline$pipelineStatus, existingJobs, pipeline);
		var spacer = A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'width', '12px')
				]),
			_List_Nil);
		var pipelineId = {c_: pipeline.bX, dh: pipeline.dh};
		var visibilityButton = $author$project$Dashboard$Pipeline$visibilityView(
			{
				cI: $author$project$UserState$isAnonymous(userState) || $author$project$UserState$isMember(
					{dh: pipeline.dh, bB: userState}),
				gx: A2(
					$author$project$HoverState$isHovered,
					A2($author$project$Message$Message$VisibilityButton, section, pipelineId),
					hovered),
				aR: pipeline.aR,
				ev: pipelineId,
				eB: pipeline.eB,
				ht: section
			});
		var pauseToggle = $author$project$Views$PauseToggle$view(
			{
				dI: A2($author$project$Message$Message$PipelineCardPauseToggle, section, pipelineId),
				gz: _Utils_eq(status, $author$project$Concourse$PipelineStatus$PipelineStatusPaused),
				gC: A2(
					$author$project$HoverState$isHovered,
					A2($author$project$Message$Message$PipelineCardPauseToggle, section, pipelineId),
					hovered),
				d5: pipeline.d5,
				ef: '0',
				az: pipelineId,
				h1: 0,
				bB: userState
			});
		var favoritedIcon = A2(
			$author$project$Views$FavoritedIcon$view,
			{
				dI: A2($author$project$Message$Message$PipelineCardFavoritedIcon, section, pipeline.L),
				gv: A2($elm$core$Set$member, pipeline.L, favoritedPipelines),
				gx: A2(
					$author$project$HoverState$isHovered,
					A2($author$project$Message$Message$PipelineCardFavoritedIcon, section, pipeline.L),
					hovered)
			},
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id(
					$author$project$Message$Effects$toHtmlID(
						A2($author$project$Message$Message$PipelineCardFavoritedIcon, section, pipeline.L)))
				]));
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$class('card-footer'),
				$author$project$Dashboard$Styles$pipelineCardFooter),
			_List_fromArray(
				[
					A4($author$project$Dashboard$Pipeline$pipelineStatusView, section, pipeline, status, now),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'display', 'flex')
						]),
					A2(
						$elm$core$List$intersperse,
						spacer,
						pipeline.e5 ? _List_fromArray(
							[visibilityButton, favoritedIcon]) : _List_fromArray(
							[pauseToggle, visibilityButton, favoritedIcon])))
				]));
	});
var $author$project$Message$Message$Tooltip = F2(
	function (a, b) {
		return {$: 8, a: a, b: b};
	});
var $author$project$Colors$dashboardText = '#ffffff';
var $author$project$Dashboard$Styles$pipelineCardHeader = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$card),
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$dashboardText),
		A2($elm$html$Html$Attributes$style, 'font-size', '1.5em'),
		A2($elm$html$Html$Attributes$style, 'letter-spacing', '0.1em'),
		A2($elm$html$Html$Attributes$style, 'padding', '12.5px')
	]);
var $author$project$Dashboard$Styles$pipelineName = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'width', '245px'),
		A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
		A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
		A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis')
	]);
var $author$project$Dashboard$Pipeline$headerView = F2(
	function (pipeline, resourceError) {
		return A2(
			$elm$html$Html$a,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$href(
					$author$project$Routes$toString(
						$author$project$Routes$pipelineRoute(pipeline))),
					$elm$html$Html$Attributes$draggable('false')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_Utils_ap(
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('card-header'),
								$elm$html$Html$Events$onMouseEnter(
								A2($author$project$Message$Message$Tooltip, pipeline.bX, pipeline.dh))
							]),
						$author$project$Dashboard$Styles$pipelineCardHeader),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$class('dashboard-pipeline-name'),
								$author$project$Dashboard$Styles$pipelineName),
							_List_fromArray(
								[
									$elm$html$Html$text(pipeline.bX)
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$classList(
									_List_fromArray(
										[
											_Utils_Tuple2('dashboard-resource-error', resourceError)
										]))
								]),
							_List_Nil)
						]))
				]));
	});
var $author$project$Dashboard$Styles$pipelineCard = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'height', '100%'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-direction', 'column')
	]);
var $author$project$Dashboard$Styles$pipelineCardBanner = function (_v0) {
	var status = _v0.hH;
	var pipelineRunningKeyframes = _v0.c$;
	var isRunning = $author$project$Concourse$PipelineStatus$isRunning(status);
	var color = $author$project$Colors$statusColor(status);
	return A2(
		$elm$core$List$cons,
		A2($elm$html$Html$Attributes$style, 'height', '7px'),
		A3($author$project$Dashboard$Styles$texture, pipelineRunningKeyframes, isRunning, color));
};
var $author$project$Dashboard$Styles$pipelineCardBannerArchived = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'height', '7px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$backgroundDark)
	]);
var $author$project$Dashboard$Styles$pipelineCardBannerStale = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'height', '7px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$unknown)
	]);
var $author$project$Dashboard$Styles$cardBody = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'padding', '20px 36px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$card),
		A2($elm$html$Html$Attributes$style, 'margin', '2px 0'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1')
	]);
var $author$project$Dashboard$Styles$previewPlaceholder = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$background),
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1')
	]);
var $author$project$Dashboard$Pipeline$previewPlaceholder = A2(
	$elm$html$Html$div,
	A2(
		$elm$core$List$cons,
		$elm$html$Html$Attributes$class('card-body'),
		$author$project$Dashboard$Styles$cardBody),
	_List_fromArray(
		[
			A2($elm$html$Html$div, $author$project$Dashboard$Styles$previewPlaceholder, _List_Nil)
		]));
var $author$project$Dashboard$Pipeline$pipelineView = function (_v0) {
	var now = _v0.en;
	var pipeline = _v0.az;
	var hovered = _v0.d0;
	var pipelineRunningKeyframes = _v0.c$;
	var userState = _v0.bB;
	var favoritedPipelines = _v0.fX;
	var resourceError = _v0.eG;
	var existingJobs = _v0.dN;
	var layers = _v0.gJ;
	var section = _v0.ht;
	var bannerStyle = pipeline.eQ ? $author$project$Dashboard$Styles$pipelineCardBannerStale : (pipeline.e5 ? $author$project$Dashboard$Styles$pipelineCardBannerArchived : $author$project$Dashboard$Styles$pipelineCardBanner(
		{
			c$: pipelineRunningKeyframes,
			hH: A2($author$project$Dashboard$Pipeline$pipelineStatus, existingJobs, pipeline)
		}));
	return A2(
		$elm$html$Html$div,
		_Utils_ap(
			$author$project$Dashboard$Styles$pipelineCard,
			_Utils_ap(
				((section === 1) && (!pipeline.eQ)) ? _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'cursor', 'move')
					]) : _List_Nil,
				pipeline.eQ ? _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'opacity', '0.45')
					]) : _List_Nil)),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				A2(
					$elm$core$List$cons,
					$elm$html$Html$Attributes$class('banner'),
					bannerStyle),
				_List_Nil),
				A2($author$project$Dashboard$Pipeline$headerView, pipeline, resourceError),
				(pipeline.d9 || pipeline.e5) ? $author$project$Dashboard$Pipeline$previewPlaceholder : A3($author$project$Dashboard$Pipeline$bodyView, section, hovered, layers),
				A7($author$project$Dashboard$Pipeline$footerView, userState, favoritedPipelines, pipeline, section, now, hovered, existingJobs)
			]));
};
var $author$project$Dashboard$Group$pipelineCardView = F5(
	function (session, params, section, _v0, teamName) {
		var bounds = _v0.ap;
		var pipeline = _v0.az;
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('pipeline-wrapper'),
						A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
						A2(
						$elm$html$Html$Attributes$style,
						'transform',
						'translate(' + ($elm$core$String$fromFloat(bounds.$7) + ('px,' + ($elm$core$String$fromFloat(bounds.$8) + 'px)')))),
						A2(
						$elm$html$Html$Attributes$style,
						'width',
						$elm$core$String$fromFloat(bounds.e$) + 'px'),
						A2(
						$elm$html$Html$Attributes$style,
						'height',
						$elm$core$String$fromFloat(bounds.be) + 'px'),
						$elm$html$Html$Events$onMouseOver(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(
								$author$project$Message$Message$PipelineWrapper(
									{c_: pipeline.bX, dh: pipeline.dh})))),
						$elm$html$Html$Events$onMouseOut(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
					]),
				_Utils_ap(
					(!_Utils_eq(params.w, $author$project$Dashboard$Models$NotDragging)) ? _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'transition', 'transform 0.2s ease-in-out')
						]) : _List_Nil,
					function () {
						var hoverStyle = function (id) {
							return (_Utils_eq(id.c_, pipeline.bX) && _Utils_eq(id.dh, pipeline.dh)) ? _List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'z-index', '1')
								]) : _List_Nil;
						};
						var _v1 = $author$project$HoverState$hoveredElement(params.d0);
						_v1$2:
						while (true) {
							if (!_v1.$) {
								switch (_v1.a.$) {
									case 41:
										var _v2 = _v1.a;
										var jobID = _v2.b;
										return hoverStyle(jobID);
									case 40:
										var pipelineID = _v1.a.a;
										return hoverStyle(pipelineID);
									default:
										break _v1$2;
								}
							} else {
								break _v1$2;
							}
						}
						return _List_Nil;
					}())),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_Utils_ap(
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('card'),
								A2($elm$html$Html$Attributes$style, 'width', '100%'),
								A2($elm$html$Html$Attributes$style, 'height', '100%'),
								A2($elm$html$Html$Attributes$attribute, 'data-pipeline-name', pipeline.bX)
							]),
						_Utils_ap(
							((section === 1) && (!pipeline.eQ)) ? _List_fromArray(
								[
									A2($elm$html$Html$Attributes$attribute, 'ondragstart', 'event.dataTransfer.setData(\'text/plain\', \'\');'),
									$elm$html$Html$Attributes$draggable('true'),
									A2(
									$elm$html$Html$Events$on,
									'dragstart',
									$elm$json$Json$Decode$succeed(
										A2($author$project$Message$Message$DragStart, pipeline.dh, pipeline.bX))),
									A2(
									$elm$html$Html$Events$on,
									'dragend',
									$elm$json$Json$Decode$succeed($author$project$Message$Message$DragEnd))
								]) : _List_Nil,
							_Utils_ap(
								_Utils_eq(
									params.w,
									A2($author$project$Dashboard$Models$Dragging, pipeline.dh, pipeline.bX)) ? _List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'width', '0'),
										A2($elm$html$Html$Attributes$style, 'margin', '0 12.5px'),
										A2($elm$html$Html$Attributes$style, 'overflow', 'hidden')
									]) : _List_Nil,
								_Utils_eq(
									params.K,
									$author$project$Dashboard$Models$DroppingWhileApiRequestInFlight(teamName)) ? _List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'opacity', '0.45'),
										A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
									]) : _List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'opacity', '1')
									])))),
					_List_fromArray(
						[
							$author$project$Dashboard$Pipeline$pipelineView(
							{
								dN: A2(
									$elm$core$List$filterMap,
									$author$project$Dashboard$Group$lookupJob(params.d8),
									A2(
										$elm$core$Maybe$withDefault,
										_List_Nil,
										A2(
											$elm$core$Dict$get,
											_Utils_Tuple2(pipeline.dh, pipeline.bX),
											params.R))),
								fX: session.fX,
								d0: params.d0,
								gJ: A2(
									$elm$core$List$map,
									$elm$core$List$filterMap(
										$author$project$Dashboard$Group$lookupJob(params.d8)),
									A2(
										$elm$core$Maybe$withDefault,
										_List_Nil,
										A2(
											$elm$core$Dict$get,
											_Utils_Tuple2(pipeline.dh, pipeline.bX),
											params.S))),
								en: params.en,
								az: pipeline,
								c$: params.c$,
								eG: A2(
									$elm$core$Set$member,
									_Utils_Tuple2(pipeline.dh, pipeline.bX),
									params.ak),
								ht: section,
								bB: session.bB
							})
						]))
				]));
	});
var $author$project$Message$Message$DragOver = function (a) {
	return {$: 6, a: a};
};
var $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {
	return {$: 2, a: a};
};
var $elm$html$Html$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 1, a: a};
};
var $elm$html$Html$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $author$project$Dashboard$Group$pipelineDropAreaView = F4(
	function (dragState, name, _v0, target) {
		var x = _v0.$7;
		var y = _v0.$8;
		var width = _v0.e$;
		var height = _v0.be;
		var active = function () {
			if (dragState.$ === 1) {
				var team = dragState.a;
				return _Utils_eq(team, name);
			} else {
				return false;
			}
		}();
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$classList(
					_List_fromArray(
						[
							_Utils_Tuple2('drop-area', true),
							_Utils_Tuple2('active', active)
						])),
					A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
					A2(
					$elm$html$Html$Attributes$style,
					'transform',
					'translate(' + ($elm$core$String$fromFloat(x) + ('px,' + ($elm$core$String$fromFloat(y) + 'px)')))),
					A2(
					$elm$html$Html$Attributes$style,
					'width',
					$elm$core$String$fromFloat(width) + 'px'),
					A2(
					$elm$html$Html$Attributes$style,
					'height',
					$elm$core$String$fromFloat(height) + 'px'),
					A2(
					$elm$html$Html$Events$on,
					'dragenter',
					$elm$json$Json$Decode$succeed(
						$author$project$Message$Message$DragOver(target))),
					A2(
					$elm$html$Html$Events$preventDefaultOn,
					'dragover',
					$elm$json$Json$Decode$succeed(
						_Utils_Tuple2(
							$author$project$Message$Message$DragOver(target),
							true))),
					A2(
					$elm$html$Html$Events$stopPropagationOn,
					'drop',
					$elm$json$Json$Decode$succeed(
						_Utils_Tuple2($author$project$Message$Message$DragEnd, true)))
				]),
			_List_Nil);
	});
var $author$project$Dashboard$Styles$cardFooter = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'height', '47px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$card)
	]);
var $author$project$Dashboard$Styles$noPipelineCard = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
		A2(
		$elm$html$Html$Attributes$style,
		'width',
		$elm$core$String$fromInt($author$project$Dashboard$PipelineGrid$Constants$cardWidth) + 'px'),
		A2(
		$elm$html$Html$Attributes$style,
		'height',
		$elm$core$String$fromInt($author$project$Dashboard$PipelineGrid$Constants$cardHeight) + 'px'),
		A2(
		$elm$html$Html$Attributes$style,
		'margin-left',
		$elm$core$String$fromInt($author$project$Dashboard$PipelineGrid$Constants$padding) + 'px')
	]);
var $author$project$Dashboard$Styles$noPipelineCardHeader = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$dashboardText),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$card),
		A2($elm$html$Html$Attributes$style, 'font-size', '1.5em'),
		A2($elm$html$Html$Attributes$style, 'letter-spacing', '0.1em'),
		A2($elm$html$Html$Attributes$style, 'padding', '12.5px'),
		A2($elm$html$Html$Attributes$style, 'text-align', 'center')
	]);
var $author$project$Dashboard$Pipeline$pipelineNotSetView = A2(
	$elm$html$Html$div,
	A2(
		$elm$core$List$cons,
		$elm$html$Html$Attributes$class('card'),
		$author$project$Dashboard$Styles$noPipelineCard),
	_List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$class('card-header'),
				$author$project$Dashboard$Styles$noPipelineCardHeader),
			_List_fromArray(
				[
					$elm$html$Html$text('no pipeline set')
				])),
			$author$project$Dashboard$Pipeline$previewPlaceholder,
			A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$class('card-footer'),
				$author$project$Dashboard$Styles$cardFooter),
			_List_Nil)
		]));
var $author$project$Dashboard$Group$view = F3(
	function (session, params, g) {
		var pipelineCardViews = $elm$core$List$isEmpty(params.b0) ? _List_fromArray(
			[
				_Utils_Tuple2('not-set', $author$project$Dashboard$Pipeline$pipelineNotSetView)
			]) : A2(
			$elm$core$List$map,
			function (_v1) {
				var bounds = _v1.ap;
				var pipeline = _v1.az;
				return function (html) {
					return _Utils_Tuple2(
						$elm$core$String$fromInt(pipeline.L),
						html);
				}(
					A5(
						$author$project$Dashboard$Group$pipelineCardView,
						session,
						params,
						1,
						{ap: bounds, az: pipeline},
						g.dh));
			},
			params.b0);
		var dropAreaViews = A2(
			$elm$core$List$map,
			function (_v0) {
				var bounds = _v0.ap;
				var target = _v0.hP;
				return A4($author$project$Dashboard$Group$pipelineDropAreaView, params.w, g.dh, bounds, target);
			},
			params.dJ);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id(
					$author$project$Message$Effects$toHtmlID(
						$author$project$Message$Message$DashboardGroup(g.dh))),
					$elm$html$Html$Attributes$class('dashboard-team-group'),
					A2($elm$html$Html$Attributes$attribute, 'data-team-name', g.dh)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'display', 'flex'),
							A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
							A2(
							$elm$html$Html$Attributes$style,
							'margin-bottom',
							$elm$core$String$fromInt($author$project$Dashboard$PipelineGrid$Constants$padding) + 'px'),
							$elm$html$Html$Attributes$class(
							function ($) {
								return $.hv;
							}($author$project$Message$Effects$stickyHeaderConfig))
						]),
					A2(
						$elm$core$List$cons,
						A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('dashboard-team-name'),
									A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightBold)
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(g.dh)
								])),
						_Utils_ap(
							$elm_community$maybe_extra$Maybe$Extra$toList(
								A2(
									$elm$core$Maybe$map,
									$author$project$Dashboard$Group$Tag$view(false),
									A2($author$project$Dashboard$Group$tag, session, g))),
							_Utils_eq(
								params.K,
								$author$project$Dashboard$Models$DroppingWhileApiRequestInFlight(g.dh)) ? _List_fromArray(
								[
									$author$project$Views$Spinner$spinner(
									{ef: '0 0 0 10px', cg: 20})
								]) : _List_Nil))),
					A3(
					$elm$html$Html$Keyed$node,
					'div',
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							function ($) {
								return $.hu;
							}($author$project$Message$Effects$stickyHeaderConfig)),
							A2($elm$html$Html$Attributes$style, 'position', 'relative'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromFloat(params.dX) + 'px')
						]),
					_Utils_ap(
						pipelineCardViews,
						_List_fromArray(
							[
								_Utils_Tuple2(
								'drop-areas',
								A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											A2($elm$html$Html$Attributes$style, 'position', 'absolute')
										]),
									dropAreaViews))
							])))
				]));
	});
var $author$project$Dashboard$Group$headerView = F2(
	function (_v0, header) {
		var x = _v0.$7;
		var y = _v0.$8;
		var width = _v0.e$;
		var height = _v0.be;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('header'),
					A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
					A2(
					$elm$html$Html$Attributes$style,
					'transform',
					'translate(' + ($elm$core$String$fromFloat(x) + ('px,' + ($elm$core$String$fromFloat(y) + 'px)')))),
					A2(
					$elm$html$Html$Attributes$style,
					'width',
					$elm$core$String$fromFloat(width) + 'px'),
					A2(
					$elm$html$Html$Attributes$style,
					'height',
					$elm$core$String$fromFloat(height) + 'px'),
					A2($elm$html$Html$Attributes$style, 'font-size', '18px'),
					A2($elm$html$Html$Attributes$style, 'padding-left', '12.5px'),
					A2($elm$html$Html$Attributes$style, 'padding-top', '17.5px'),
					A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
					A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis'),
					A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
					A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
					A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightBold)
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(header)
				]));
	});
var $author$project$Dashboard$Group$viewFavoritePipelines = F2(
	function (session, params) {
		var pipelineCardViews = A2(
			$elm$core$List$map,
			function (_v1) {
				var bounds = _v1.ap;
				var pipeline = _v1.az;
				return function (html) {
					return _Utils_Tuple2(
						$elm$core$String$fromInt(pipeline.L),
						html);
				}(
					A5(
						$author$project$Dashboard$Group$pipelineCardView,
						session,
						params,
						0,
						{ap: bounds, az: pipeline},
						pipeline.dh));
			},
			params.b0);
		var headerViews = A2(
			$elm$core$List$map,
			function (_v0) {
				var bounds = _v0.ap;
				var header = _v0.f6;
				return A2($author$project$Dashboard$Group$headerView, bounds, header);
			},
			params.U);
		return A3(
			$elm$html$Html$Keyed$node,
			'div',
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('dashboard-favorite-pipelines'),
					A2($elm$html$Html$Attributes$style, 'position', 'relative'),
					A2(
					$elm$html$Html$Attributes$style,
					'height',
					$elm$core$String$fromFloat(params.dX) + 'px')
				]),
			_Utils_ap(
				pipelineCardViews,
				_List_fromArray(
					[
						_Utils_Tuple2(
						'headers',
						A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
									$elm$html$Html$Attributes$class('headers')
								]),
							headerViews))
					])));
	});
var $author$project$Dashboard$Dashboard$pipelinesView = F2(
	function (session, params) {
		var teams = A2($author$project$FetchResult$withDefault, _List_Nil, params.hQ);
		var pipelines = A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, params.he);
		var jobs = A2($author$project$FetchResult$withDefault, $elm$core$Dict$empty, params.d8);
		var filteredGroups = A2(
			$elm$core$List$sortWith,
			$author$project$Dashboard$Group$ordering(session),
			$author$project$Dashboard$Filter$filterGroups(
				{fB: params.fB, fX: session.fX, d8: jobs, R: params.R, he: pipelines, al: params.al, hQ: teams}));
		var _v0 = function () {
			if (params.af) {
				return _Utils_Tuple2(_List_Nil, 0);
			} else {
				var favoritedPipelines = A2(
					$elm$core$List$filter,
					function (fp) {
						return A2($elm$core$Set$member, fp.L, session.fX);
					},
					A2(
						$elm$core$List$concatMap,
						function ($) {
							return $.he;
						},
						filteredGroups));
				var allPipelinesHeader = A2(
					$elm$html$Html$div,
					$author$project$Dashboard$Styles$pipelineSectionHeader,
					_List_fromArray(
						[
							$elm$html$Html$text('all pipelines')
						]));
				if ($elm$core$List$isEmpty(filteredGroups)) {
					return _Utils_Tuple2(_List_Nil, 0);
				} else {
					if ($elm$core$List$isEmpty(favoritedPipelines)) {
						return _Utils_Tuple2(
							_List_fromArray(
								[allPipelinesHeader]),
							$author$project$Dashboard$PipelineGrid$Constants$sectionHeaderHeight);
					} else {
						var offset = $author$project$Dashboard$PipelineGrid$Constants$sectionHeaderHeight;
						var layout = A2(
							$author$project$Dashboard$PipelineGrid$computeFavoritePipelinesLayout,
							{S: params.S, hq: params.hq - offset, a5: params.a5, a6: params.a6},
							favoritedPipelines);
						return function (html) {
							return _Utils_Tuple2(html, (layout.be + (2 * $author$project$Dashboard$PipelineGrid$Constants$sectionHeaderHeight)) + $author$project$Dashboard$PipelineGrid$Constants$sectionSpacerHeight);
						}(
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									$author$project$Dashboard$Styles$pipelineSectionHeader,
									_List_fromArray(
										[
											$elm$html$Html$text('favorite pipelines')
										])),
									A2(
									$author$project$Dashboard$Group$viewFavoritePipelines,
									session,
									{w: $author$project$Dashboard$Models$NotDragging, K: $author$project$Dashboard$Models$NotDropping, dX: layout.be, U: layout.U, d0: session.d0, d8: jobs, en: params.en, b0: layout.b0, R: params.R, S: params.S, c$: session.c$, ak: params.ak}),
									$author$project$Views$Styles$separator($author$project$Dashboard$PipelineGrid$Constants$sectionSpacerHeight),
									allPipelinesHeader
								]));
					}
				}
			}
		}();
		var headerView = _v0.a;
		var offsetHeight = _v0.b;
		var groupViews = (params.af ? $elm$core$List$concatMap(
			A2(
				$author$project$Dashboard$Group$hdView,
				{d8: jobs, R: params.R, c$: session.c$, ak: params.ak},
				session)) : A2(
			$elm$core$Basics$composeR,
			A2(
				$elm$core$List$foldl,
				F2(
					function (g, _v1) {
						var htmlList = _v1.a;
						var totalOffset = _v1.b;
						var layout = A2(
							$author$project$Dashboard$PipelineGrid$computeLayout,
							{w: params.w, K: params.K, S: params.S, hq: params.hq - totalOffset, a5: params.a5, a6: params.a6},
							g);
						return function (html) {
							return _Utils_Tuple2(
								A2($elm$core$List$cons, html, htmlList),
								((totalOffset + layout.be) + $author$project$Dashboard$PipelineGrid$Constants$headerHeight) + $author$project$Dashboard$PipelineGrid$Constants$padding);
						}(
							A3(
								$author$project$Dashboard$Group$view,
								session,
								{w: params.w, dJ: layout.dJ, K: params.K, dX: layout.be, d0: session.d0, d8: jobs, en: params.en, b0: layout.b0, R: params.R, S: params.S, c$: session.c$, ak: params.ak},
								g));
					}),
				_Utils_Tuple2(_List_Nil, offsetHeight)),
			A2($elm$core$Basics$composeR, $elm$core$Tuple$first, $elm$core$List$reverse)))(filteredGroups);
		return ((!_Utils_eq(params.he, $elm$core$Maybe$Nothing)) && ($elm$core$List$isEmpty(groupViews) && (!$elm$core$String$isEmpty(params.al)))) ? _List_fromArray(
			[
				$author$project$Dashboard$Dashboard$noResultsView(params.al)
			]) : _Utils_ap(headerView, groupViews);
	});
var $author$project$Dashboard$Dashboard$showTurbulence = function (model) {
	return _Utils_eq(
		model.V,
		$elm$core$Maybe$Just(0)) || (_Utils_eq(
		model.ci,
		$elm$core$Maybe$Just(0)) || (_Utils_eq(
		model.b9,
		$elm$core$Maybe$Just(0)) || _Utils_eq(
		model.b1,
		$elm$core$Maybe$Just(0))));
};
var $elm$html$Html$p = _VirtualDom_node('p');
var $author$project$Dashboard$Dashboard$turbulenceView = function (path) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('error-message')
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('message')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$img,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$src(path),
								$elm$html$Html$Attributes$class('seatbelt')
							]),
						_List_Nil),
						A2(
						$elm$html$Html$p,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text('experiencing turbulence')
							])),
						A2(
						$elm$html$Html$p,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('explanation')
							]),
						_List_Nil)
					]))
			]));
};
var $author$project$Message$Message$WelcomeCardCliIcon = function (a) {
	return {$: 23, a: a};
};
var $author$project$Colors$asciiArt = '#888888';
var $author$project$Dashboard$Styles$asciiArt = _Utils_ap(
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'font-size', '16px'),
			A2($elm$html$Html$Attributes$style, 'line-height', '8px'),
			A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
			A2($elm$html$Html$Attributes$style, 'top', '0'),
			A2($elm$html$Html$Attributes$style, 'left', '23em'),
			A2($elm$html$Html$Attributes$style, 'margin', '0'),
			A2($elm$html$Html$Attributes$style, 'white-space', 'pre'),
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$asciiArt),
			A2($elm$html$Html$Attributes$style, 'z-index', '1')
		]),
	$author$project$Application$Styles$disableInteraction);
var $author$project$Dashboard$Text$asciiArt = A2(
	$elm$core$String$join,
	'\n',
	_List_fromArray(
		['                          `:::                                             ', '                         `:::::                                            ', '                         :::::::                                           ', '                         ::::::::`                                         ', '                          ::::::::,           :                            ', '                           :::::::::      ::: ::                           ', '                            :::::::::    :::::` ,                          ', '                             :::::::::  :::::::                            ', '                              :::::::::::::::::`                           ', '                               ::::::::::::::::                            ', '                                ::::::::::::::.                            ', '                           `:`   ::::::, `:::.                             ', '                          `:.     ::::,  :::.                              ', '                      :: `:.      :::,  ::::                               ', '                     :: `:.      ::::  ::::::                              ', '                    :: `:.      ,:::::::::::::                             ', '                   ::  :.      .:::::::::::::::                            ', '                  ,:           ::::::::::::::::.                           ', '                              ::::::::. ::::::::`                          ', '                             ::::::::`   ::::::::                `         ', '                            ::::::::      ::::::::               ::`       ', '                           ,:::::::        ::::::::              ,::,  . ` ', '                         :::::::::          ::::::::              ,:::,::  ', '                        ::::::::.            :::::::.              ,:::::  ', '                       ::::::::`              :::::::             ` :: :   ', '                      .:::::::                 :::::          `  : .:,::,  ', '                       .::::::            :.    :::          `     :::,::. ', '                        .:::::      .:   :.      .            .   :::  ,::`', '                         .:::      .:   :.                   ,  ,::,    ,::', '                          .,      .:   :.                   ,   :::      ,:', '                                 .:   :.                         :  .      ', '                                `:   :.                            ` :     ', '                                                                    :      ', '    .                                                              `       ', '    ::                                                                     ', '     ::,:                                                                  ', '      : :                                                                  ', '     `:::                                                                  ', '     :, ::                                                                 ', '   .:.   :,                                                                ', '    :                                                                      ', '        `                                                                  ', '       .                                                                   ']));
var $author$project$Dashboard$Text$cliInstructions = 'first, download the CLI tools:';
var $author$project$Concourse$Cli$Linux = 2;
var $author$project$Concourse$Cli$OSX = 0;
var $author$project$Concourse$Cli$Windows = 1;
var $author$project$Concourse$Cli$clis = _List_fromArray(
	[0, 1, 2]);
var $elm$html$Html$Attributes$download = function (fileName) {
	return A2($elm$html$Html$Attributes$stringProperty, 'download', fileName);
};
var $author$project$Api$Endpoints$Cli = {$: 13};
var $author$project$Concourse$Cli$downloadUrl = function (cli) {
	var platformName = function () {
		switch (cli) {
			case 0:
				return 'darwin';
			case 1:
				return 'windows';
			default:
				return 'linux';
		}
	}();
	return A2(
		$author$project$Api$Endpoints$toString,
		_List_fromArray(
			[
				A2($elm$url$Url$Builder$string, 'arch', 'amd64'),
				A2($elm$url$Url$Builder$string, 'platform', platformName)
			]),
		$author$project$Api$Endpoints$Cli);
};
var $author$project$Concourse$Cli$id = function (cli) {
	switch (cli) {
		case 0:
			return 'osx';
		case 1:
			return 'windows';
		default:
			return 'linux';
	}
};
var $author$project$Concourse$Cli$label = function (cli) {
	var platformName = function () {
		switch (cli) {
			case 0:
				return 'OS X';
			case 1:
				return 'Windows';
			default:
				return 'Linux';
		}
	}();
	return 'Download ' + (platformName + ' CLI');
};
var $author$project$Dashboard$Dashboard$loginInstruction = function (userState) {
	if (!userState.$) {
		return _List_Nil;
	} else {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$id('login-instruction'),
						A2($elm$html$Html$Attributes$style, 'line-height', '42px')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('login '),
						A2(
						$elm$html$Html$a,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$href('/login'),
								A2($elm$html$Html$Attributes$style, 'text-decoration', 'underline')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('here')
							]))
					]))
			]);
	}
};
var $author$project$Dashboard$Text$setPipelineInstructions = 'then, use `fly set-pipeline` to set up your new pipeline';
var $author$project$Assets$CliIcon = function (a) {
	return {$: 0, a: a};
};
var $author$project$Dashboard$Styles$topCliIcon = function (_v0) {
	var hovered = _v0.d0;
	var cli = _v0.fo;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'opacity',
			hovered ? '1' : '0.5'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just(
					$author$project$Assets$CliIcon(cli)))),
			A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'width', '32px'),
			A2($elm$html$Html$Attributes$style, 'height', '32px'),
			A2($elm$html$Html$Attributes$style, 'margin', '5px'),
			A2($elm$html$Html$Attributes$style, 'z-index', '1')
		]);
};
var $author$project$Dashboard$Text$welcome = 'welcome to concourse!';
var $author$project$Views$Styles$fontWeightLight = '400';
var $author$project$Dashboard$Styles$welcomeCard = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$card),
		A2($elm$html$Html$Attributes$style, 'margin', '25px'),
		A2($elm$html$Html$Attributes$style, 'padding', '40px'),
		A2($elm$html$Html$Attributes$style, 'position', 'relative'),
		A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
		A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightLight),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-direction', 'column')
	]);
var $author$project$Dashboard$Styles$welcomeCardBody = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '16px'),
		A2($elm$html$Html$Attributes$style, 'z-index', '2')
	]);
var $author$project$Dashboard$Styles$welcomeCardTitle = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '32px')
	]);
var $author$project$Dashboard$Dashboard$welcomeCard = function (session) {
	var cliIcon = F2(
		function (hoverable, cli) {
			return A2(
				$elm$html$Html$a,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$href(
							$author$project$Concourse$Cli$downloadUrl(cli)),
							A2(
							$elm$html$Html$Attributes$attribute,
							'aria-label',
							$author$project$Concourse$Cli$label(cli)),
							$elm$html$Html$Attributes$id(
							'top-cli-' + $author$project$Concourse$Cli$id(cli)),
							$elm$html$Html$Events$onMouseEnter(
							$author$project$Message$Message$Hover(
								$elm$core$Maybe$Just(
									$author$project$Message$Message$WelcomeCardCliIcon(cli)))),
							$elm$html$Html$Events$onMouseLeave(
							$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
							$elm$html$Html$Attributes$download('')
						]),
					$author$project$Dashboard$Styles$topCliIcon(
						{
							fo: cli,
							d0: A2(
								$author$project$HoverState$isHovered,
								$author$project$Message$Message$WelcomeCardCliIcon(cli),
								hoverable)
						})),
				_List_Nil);
		});
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$id('welcome-card'),
			$author$project$Dashboard$Styles$welcomeCard),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				$author$project$Dashboard$Styles$welcomeCardTitle,
				_List_fromArray(
					[
						$elm$html$Html$text($author$project$Dashboard$Text$welcome)
					])),
				A2(
				$elm$html$Html$div,
				$author$project$Dashboard$Styles$welcomeCardBody,
				_Utils_ap(
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'display', 'flex'),
									A2($elm$html$Html$Attributes$style, 'align-items', 'center')
								]),
							_Utils_ap(
								_List_fromArray(
									[
										A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												A2($elm$html$Html$Attributes$style, 'margin-right', '10px')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text($author$project$Dashboard$Text$cliInstructions)
											]))
									]),
								A2(
									$elm$core$List$map,
									cliIcon(session.d0),
									$author$project$Concourse$Cli$clis))),
							A2(
							$elm$html$Html$div,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text($author$project$Dashboard$Text$setPipelineInstructions)
								]))
						]),
					$author$project$Dashboard$Dashboard$loginInstruction(session.bB))),
				A2(
				$elm$html$Html$pre,
				$author$project$Dashboard$Styles$asciiArt,
				_List_fromArray(
					[
						$elm$html$Html$text($author$project$Dashboard$Text$asciiArt)
					]))
			]));
};
var $author$project$Dashboard$Dashboard$dashboardView = F2(
	function (session, model) {
		return $author$project$Dashboard$Dashboard$showTurbulence(model) ? $author$project$Dashboard$Dashboard$turbulenceView(session.dk) : A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$class(
					function ($) {
						return $.g5;
					}($author$project$Message$Effects$stickyHeaderConfig)),
				A2(
					$elm$core$List$cons,
					$elm$html$Html$Attributes$id(
						$author$project$Message$Effects$toHtmlID($author$project$Message$Message$Dashboard)),
					A2(
						$elm$core$List$cons,
						$author$project$StrictEvents$onScroll($author$project$Message$Message$Scrolled),
						$author$project$Dashboard$Styles$content(model.af)))),
			function () {
				var _v0 = model.he;
				if (_v0.$ === 1) {
					return _List_fromArray(
						[$author$project$Dashboard$Dashboard$loadingView]);
				} else {
					var pipelines = _v0.a;
					return A2(
						$elm$core$List$all,
						$elm$core$List$isEmpty,
						$elm$core$Dict$values(pipelines)) ? A2(
						$elm$core$List$cons,
						$author$project$Dashboard$Dashboard$welcomeCard(session),
						A2($author$project$Dashboard$Dashboard$pipelinesView, session, model)) : A2(
						$elm$core$List$cons,
						$elm$html$Html$text(''),
						A2($author$project$Dashboard$Dashboard$pipelinesView, session, model));
				}
			}());
	});
var $author$project$Dashboard$Styles$clusterName = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '21px'),
		A2($elm$html$Html$Attributes$style, 'color', '#ffffff'),
		A2($elm$html$Html$Attributes$style, 'letter-spacing', '0.1em'),
		A2($elm$html$Html$Attributes$style, 'margin-left', '10px')
	]);
var $author$project$Dashboard$Dashboard$clusterNameView = function (session) {
	return A2(
		$elm$html$Html$div,
		$author$project$Dashboard$Styles$clusterName,
		_List_fromArray(
			[
				$elm$html$Html$text(session.cq)
			]));
};
var $author$project$Views$Toggle$Left = 0;
var $author$project$Dashboard$Styles$showArchivedToggle = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'margin-right', '10px'),
		A2($elm$html$Html$Attributes$style, 'padding-left', '10px'),
		A2($elm$html$Html$Attributes$style, 'border-left', '1px solid ' + $author$project$Colors$background)
	]);
var $author$project$Assets$ToggleSwitch = function (a) {
	return {$: 3, a: a};
};
var $author$project$Views$Toggle$toggleSwitch = function (_v0) {
	var ariaLabel = _v0.e7;
	var hrefRoute = _v0.gg;
	var text = _v0.hR;
	var textDirection = _v0.hS;
	var styles = _v0.hJ;
	var on = _v0.g$;
	var textElem = $elm$html$Html$text(text);
	var iconElem = A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$Attributes$style,
				'background-image',
				$author$project$Assets$backgroundImage(
					$elm$core$Maybe$Just(
						$author$project$Assets$ToggleSwitch(on)))),
				A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
				A2($elm$html$Html$Attributes$style, 'height', '20px'),
				A2($elm$html$Html$Attributes$style, 'width', '35px'),
				A2($elm$html$Html$Attributes$style, 'flex-shrink', '0'),
				function () {
				if (!textDirection) {
					return A2($elm$html$Html$Attributes$style, 'margin-left', '10px');
				} else {
					return A2($elm$html$Html$Attributes$style, 'margin-right', '10px');
				}
			}()
			]),
		_List_Nil);
	return A2(
		$elm$html$Html$a,
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$href(
					$author$project$Routes$toString(hrefRoute)),
					A2($elm$html$Html$Attributes$attribute, 'aria-label', ariaLabel),
					A2($elm$html$Html$Attributes$style, 'display', 'flex'),
					A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
					A2(
					$elm$html$Html$Attributes$style,
					'flex-direction',
					function () {
						if (textDirection === 1) {
							return 'row';
						} else {
							return 'row-reverse';
						}
					}())
				]),
			styles),
		_List_fromArray(
			[iconElem, textElem]));
};
var $author$project$Dashboard$Dashboard$showArchivedToggleView = function (model) {
	var on = model.fB === 1;
	var noPipelines = A2(
		$elm$core$List$all,
		$elm$core$List$isEmpty,
		$elm$core$Dict$values(
			A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, model.he)));
	return noPipelines ? $elm$html$Html$text('') : $author$project$Views$Toggle$toggleSwitch(
		{
			e7: 'Toggle whether archived pipelines are displayed',
			gg: $author$project$Routes$Dashboard(
				{
					fB: on ? 0 : 1,
					hs: model.af ? $author$project$Routes$HighDensity : $author$project$Routes$Normal(model.al)
				}),
			g$: on,
			hJ: $author$project$Dashboard$Styles$showArchivedToggle,
			hR: 'show archived',
			hS: 0
		});
};
var $author$project$Dashboard$Styles$topBarContent = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'center')
	]);
var $author$project$Dashboard$Dashboard$topBarContent = function (content) {
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$id('top-bar-content'),
			$author$project$Dashboard$Styles$topBarContent),
		content);
};
var $author$project$Message$Message$BlurMsg = {$: 2};
var $author$project$Message$Message$ClearSearchButton = {$: 32};
var $author$project$Message$Message$FilterMsg = function (a) {
	return {$: 0, a: a};
};
var $author$project$Message$Message$FocusMsg = {$: 1};
var $author$project$Message$Message$ShowSearchButton = {$: 31};
var $elm$html$Html$input = _VirtualDom_node('input');
var $elm$html$Html$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$html$Html$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $elm$html$Html$Events$onInput = function (tagger) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$elm$html$Html$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));
};
var $elm$html$Html$Attributes$placeholder = $elm$html$Html$Attributes$stringProperty('placeholder');
var $author$project$Assets$SearchIcon = {$: 40};
var $author$project$Dashboard$Styles$searchButton = _List_fromArray(
	[
		A2(
		$elm$html$Html$Attributes$style,
		'background-image',
		$author$project$Assets$backgroundImage(
			$elm$core$Maybe$Just($author$project$Assets$SearchIcon))),
		A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
		A2($elm$html$Html$Attributes$style, 'background-position', '12px 8px'),
		A2($elm$html$Html$Attributes$style, 'height', '32px'),
		A2($elm$html$Html$Attributes$style, 'width', '32px'),
		A2($elm$html$Html$Attributes$style, 'display', 'inline-block'),
		A2($elm$html$Html$Attributes$style, 'float', 'left')
	]);
var $author$project$Assets$CloseIcon = {$: 41};
var $author$project$Colors$inputOutline = '#504b4b';
var $author$project$Dashboard$Styles$searchClearButton = function (active) {
	var opacityValue = active ? '1' : '0.2';
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just($author$project$Assets$CloseIcon))),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'background-position', '10px 10px'),
			A2($elm$html$Html$Attributes$style, 'border', '0'),
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$inputOutline),
			A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
			A2($elm$html$Html$Attributes$style, 'right', '0'),
			A2($elm$html$Html$Attributes$style, 'padding', '17px'),
			A2($elm$html$Html$Attributes$style, 'opacity', opacityValue)
		]);
};
var $author$project$Dashboard$Styles$searchContainer = function (screenSize) {
	return _Utils_ap(
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'display', 'flex'),
				A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
				A2($elm$html$Html$Attributes$style, 'margin', '12px'),
				A2($elm$html$Html$Attributes$style, 'position', 'relative'),
				A2($elm$html$Html$Attributes$style, 'align-items', 'stretch')
			]),
		function () {
			if (!screenSize) {
				return _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'flex-grow', '1')
					]);
			} else {
				return _List_Nil;
			}
		}());
};
var $author$project$Dashboard$Styles$searchInput = function (screenSize) {
	var widthStyles = function () {
		switch (screenSize) {
			case 0:
				return _List_Nil;
			case 1:
				return _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'width', '220px')
					]);
			default:
				return _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'width', '220px')
					]);
		}
	}();
	return _Utils_ap(
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'background-color', 'transparent'),
				A2(
				$elm$html$Html$Attributes$style,
				'background-image',
				$author$project$Assets$backgroundImage(
					$elm$core$Maybe$Just($author$project$Assets$SearchIcon))),
				A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
				A2($elm$html$Html$Attributes$style, 'background-position', '12px 8px'),
				A2($elm$html$Html$Attributes$style, 'height', '30px'),
				A2($elm$html$Html$Attributes$style, 'min-height', '30px'),
				A2($elm$html$Html$Attributes$style, 'padding', '0 42px'),
				A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + $author$project$Colors$inputOutline),
				A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$dashboardText),
				A2($elm$html$Html$Attributes$style, 'font-size', '1.15em'),
				A2($elm$html$Html$Attributes$style, 'font-family', $author$project$Views$Styles$fontFamilyDefault),
				A2($elm$html$Html$Attributes$style, 'outline', '0')
			]),
		widthStyles);
};
var $author$project$Dashboard$Styles$showSearchContainer = function (_v0) {
	var highDensity = _v0.af;
	var flexLayout = highDensity ? _List_Nil : _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'align-items', 'flex-start')
		]);
	return _Utils_ap(
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'display', 'flex'),
				A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
				A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
				A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
				A2($elm$html$Html$Attributes$style, 'padding', '12px'),
				A2($elm$html$Html$Attributes$style, 'position', 'relative')
			]),
		flexLayout);
};
var $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');
var $author$project$Dashboard$Styles$dropdownContainer = function (screenSize) {
	return _Utils_ap(
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'top', '100%'),
				A2($elm$html$Html$Attributes$style, 'margin', '0'),
				A2($elm$html$Html$Attributes$style, 'width', '100%')
			]),
		function () {
			if (!screenSize) {
				return _List_Nil;
			} else {
				return _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'position', 'absolute')
					]);
			}
		}());
};
var $author$project$Colors$dropdownFaded = '#2e2e2e';
var $author$project$Colors$dropdownUnselectedText = '#9b9b9b';
var $author$project$Dashboard$Styles$dropdownItem = function (isSelected) {
	var coloration = isSelected ? _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame),
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$dashboardText)
		]) : _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$dropdownFaded),
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$dropdownUnselectedText)
		]);
	return _Utils_ap(
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'padding', '0 42px'),
				A2($elm$html$Html$Attributes$style, 'line-height', '30px'),
				A2($elm$html$Html$Attributes$style, 'list-style-type', 'none'),
				A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + $author$project$Colors$inputOutline),
				A2($elm$html$Html$Attributes$style, 'margin-top', '-1px'),
				A2($elm$html$Html$Attributes$style, 'font-size', '1.15em'),
				A2($elm$html$Html$Attributes$style, 'cursor', 'pointer')
			]),
		coloration);
};
var $author$project$Dashboard$SearchBar$viewDropdownItems = F2(
	function (_v0, model) {
		var screenSize = _v0.c4;
		var dropdown = model.dK;
		if (!dropdown.$) {
			return _List_Nil;
		} else {
			var selectedIdx = dropdown.a;
			var dropdownItem = F2(
				function (idx, text) {
					return A2(
						$elm$html$Html$li,
						A2(
							$elm$core$List$cons,
							$elm$html$Html$Events$onMouseDown(
								$author$project$Message$Message$FilterMsg(text)),
							$author$project$Dashboard$Styles$dropdownItem(
								_Utils_eq(
									$elm$core$Maybe$Just(idx),
									selectedIdx))),
						_List_fromArray(
							[
								$elm$html$Html$text(text)
							]));
				});
			return _List_fromArray(
				[
					A2(
					$elm$html$Html$ul,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('search-dropdown'),
						$author$project$Dashboard$Styles$dropdownContainer(screenSize)),
					A2(
						$elm$core$List$indexedMap,
						dropdownItem,
						$author$project$Dashboard$SearchBar$dropdownOptions(model)))
				]);
		}
	});
var $author$project$Dashboard$SearchBar$view = F2(
	function (session, params) {
		var query = params.al;
		var dropdown = params.dK;
		var pipelines = params.he;
		var noPipelines = A2(
			$elm$core$List$all,
			$elm$core$List$isEmpty,
			$elm$core$Dict$values(
				A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, pipelines)));
		var isMobile = !session.c4;
		var isDropDownHidden = _Utils_eq(dropdown, $author$project$Dashboard$Models$Hidden);
		return noPipelines ? $elm$html$Html$text('') : ((isDropDownHidden && (isMobile && (query === ''))) ? A2(
			$elm$html$Html$div,
			$author$project$Dashboard$Styles$showSearchContainer(
				{af: params.af, c4: session.c4}),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_Utils_ap(
						_List_fromArray(
							[
								$elm$html$Html$Attributes$id('show-search-button'),
								$elm$html$Html$Events$onClick(
								$author$project$Message$Message$Click($author$project$Message$Message$ShowSearchButton))
							]),
						$author$project$Dashboard$Styles$searchButton),
					_List_Nil)
				])) : A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('search-container'),
				$author$project$Dashboard$Styles$searchContainer(session.c4)),
			_Utils_ap(
				_List_fromArray(
					[
						A2(
						$elm$html$Html$input,
						_Utils_ap(
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id($author$project$Dashboard$SearchBar$searchInputId),
									$elm$html$Html$Attributes$placeholder('search'),
									A2($elm$html$Html$Attributes$attribute, 'autocomplete', 'off'),
									$elm$html$Html$Attributes$value(query),
									$elm$html$Html$Events$onFocus($author$project$Message$Message$FocusMsg),
									$elm$html$Html$Events$onBlur($author$project$Message$Message$BlurMsg),
									$elm$html$Html$Events$onInput($author$project$Message$Message$FilterMsg)
								]),
							$author$project$Dashboard$Styles$searchInput(session.c4)),
						_List_Nil),
						A2(
						$elm$html$Html$div,
						_Utils_ap(
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id('search-clear'),
									$elm$html$Html$Events$onClick(
									$author$project$Message$Message$Click($author$project$Message$Message$ClearSearchButton))
								]),
							$author$project$Dashboard$Styles$searchClearButton(
								$elm$core$String$length(query) > 0)),
						_List_Nil)
					]),
				A2($author$project$Dashboard$SearchBar$viewDropdownItems, session, params))));
	});
var $author$project$Dashboard$Dashboard$topBar = F2(
	function (session, model) {
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('top-bar-app'),
				$author$project$Views$Styles$topBar(false)),
			_Utils_ap(
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'display', 'flex'),
								A2($elm$html$Html$Attributes$style, 'align-items', 'center')
							]),
						_List_fromArray(
							[
								$author$project$SideBar$SideBar$hamburgerMenu(session),
								A2(
								$elm$html$Html$a,
								A2(
									$elm$core$List$cons,
									$elm$html$Html$Attributes$href('/'),
									$author$project$Views$Styles$concourseLogo),
								_List_Nil),
								$author$project$Dashboard$Dashboard$clusterNameView(session)
							]))
					]),
				function () {
					var isMobile = !session.c4;
					var isDropDownHidden = _Utils_eq(model.dK, $author$project$Dashboard$Models$Hidden);
					return ((!model.af) && (isMobile && ((!isDropDownHidden) || (model.al !== '')))) ? _List_fromArray(
						[
							A2($author$project$Dashboard$SearchBar$view, session, model)
						]) : ((!model.af) ? _List_fromArray(
						[
							$author$project$Dashboard$Dashboard$topBarContent(
							_List_fromArray(
								[
									A2($author$project$Dashboard$SearchBar$view, session, model)
								])),
							$author$project$Dashboard$Dashboard$showArchivedToggleView(model),
							A2($author$project$Login$Login$view, session.bB, model)
						]) : _List_fromArray(
						[
							$author$project$Dashboard$Dashboard$topBarContent(_List_Nil),
							$author$project$Dashboard$Dashboard$showArchivedToggleView(model),
							A2($author$project$Login$Login$view, session.bB, model)
						]));
				}()));
	});
var $author$project$Message$Message$FooterCliIcon = function (a) {
	return {$: 22, a: a};
};
var $author$project$Dashboard$Styles$infoCliIcon = function (_v0) {
	var hovered = _v0.d0;
	var cli = _v0.fo;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'margin-right', '10px'),
			A2($elm$html$Html$Attributes$style, 'width', '20px'),
			A2($elm$html$Html$Attributes$style, 'height', '20px'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just(
					$author$project$Assets$CliIcon(cli)))),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2(
			$elm$html$Html$Attributes$style,
			'opacity',
			hovered ? '1' : '0.5')
		]);
};
var $author$project$Dashboard$Footer$cliIcon = F2(
	function (hovered, cli) {
		return A2(
			$elm$html$Html$a,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$href(
						$author$project$Concourse$Cli$downloadUrl(cli)),
						A2(
						$elm$html$Html$Attributes$attribute,
						'aria-label',
						$author$project$Concourse$Cli$label(cli)),
						$elm$html$Html$Attributes$id(
						'cli-' + $author$project$Concourse$Cli$id(cli)),
						$elm$html$Html$Events$onMouseEnter(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(
								$author$project$Message$Message$FooterCliIcon(cli)))),
						$elm$html$Html$Events$onMouseLeave(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
						$elm$html$Html$Attributes$download('')
					]),
				$author$project$Dashboard$Styles$infoCliIcon(
					{
						fo: cli,
						d0: A2(
							$author$project$HoverState$isHovered,
							$author$project$Message$Message$FooterCliIcon(cli),
							hovered)
					})),
			_List_Nil);
	});
var $author$project$Colors$bottomBarText = '#868585';
var $author$project$Dashboard$Styles$info = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$bottomBarText),
		A2($elm$html$Html$Attributes$style, 'font-size', '1.25em')
	]);
var $author$project$Dashboard$Styles$infoItem = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'margin-right', '30px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center')
	]);
var $author$project$Dashboard$Footer$concourseInfo = function (_v0) {
	var hovered = _v0.d0;
	var version = _v0.dn;
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$id('concourse-info'),
			$author$project$Dashboard$Styles$info),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				$author$project$Dashboard$Styles$infoItem,
				_List_fromArray(
					[
						$elm$html$Html$text('version: v' + version)
					])),
				A2(
				$elm$html$Html$div,
				$author$project$Dashboard$Styles$infoItem,
				_Utils_ap(
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'margin-right', '10px')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('cli: ')
								]))
						]),
					A2(
						$elm$core$List$map,
						$author$project$Dashboard$Footer$cliIcon(hovered),
						$author$project$Concourse$Cli$clis)))
			]));
};
var $author$project$Dashboard$Footer$hideLegend = function (_v0) {
	var pipelines = _v0.he;
	return A2(
		$elm$core$List$all,
		$elm$core$List$isEmpty,
		$elm$core$Dict$values(
			A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, pipelines)));
};
var $author$project$Dashboard$Styles$infoBar = function (_v0) {
	var hideLegend = _v0.ga;
	var screenSize = _v0.c4;
	return _Utils_ap(
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'position', 'fixed'),
				A2($elm$html$Html$Attributes$style, 'z-index', '2'),
				A2($elm$html$Html$Attributes$style, 'bottom', '0'),
				A2($elm$html$Html$Attributes$style, 'line-height', '35px'),
				A2($elm$html$Html$Attributes$style, 'padding', '7.5px 30px'),
				A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame),
				A2($elm$html$Html$Attributes$style, 'width', '100%'),
				A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
				A2($elm$html$Html$Attributes$style, 'display', 'flex'),
				A2(
				$elm$html$Html$Attributes$style,
				'justify-content',
				hideLegend ? 'flex-end' : 'space-between')
			]),
		function () {
			switch (screenSize) {
				case 0:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'flex-direction', 'column')
						]);
				case 1:
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'flex-direction', 'column')
						]);
				default:
					return _List_Nil;
			}
		}());
};
var $author$project$Assets$RunningLegend = {$: 16};
var $author$project$Dashboard$Styles$legend = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-wrap', 'wrap')
	]);
var $author$project$Dashboard$Styles$legendItem = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'text-transform', 'uppercase'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$bottomBarText),
		A2($elm$html$Html$Attributes$style, 'margin-right', '20px')
	]);
var $author$project$Concourse$PipelineStatus$show = function (status) {
	switch (status.$) {
		case 0:
			return 'paused';
		case 1:
			return 'aborted';
		case 2:
			return 'errored';
		case 3:
			return 'failed';
		case 4:
			return 'pending';
		default:
			return 'succeeded';
	}
};
var $author$project$Dashboard$Footer$legendItem = function (status) {
	return A2(
		$elm$html$Html$div,
		$author$project$Dashboard$Styles$legendItem,
		_List_fromArray(
			[
				A2(
				$author$project$Views$Icon$icon,
				{
					d1: $author$project$Assets$PipelineStatusIcon(status),
					cg: 20
				},
				$author$project$Dashboard$Styles$pipelineStatusIcon),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'width', '10px')
					]),
				_List_Nil),
				$elm$html$Html$text(
				$author$project$Concourse$PipelineStatus$show(status))
			]));
};
var $author$project$Dashboard$Styles$legendSeparator = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$bottomBarText),
		A2($elm$html$Html$Attributes$style, 'margin-right', '20px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center')
	]);
var $author$project$Dashboard$Footer$legendSeparator = function (screenSize) {
	switch (screenSize) {
		case 0:
			return _List_Nil;
		case 1:
			return _List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					$author$project$Dashboard$Styles$legendSeparator,
					_List_fromArray(
						[
							$elm$html$Html$text('|')
						]))
				]);
		default:
			return _List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					$author$project$Dashboard$Styles$legendSeparator,
					_List_fromArray(
						[
							$elm$html$Html$text('|')
						]))
				]);
	}
};
var $author$project$Views$Toggle$Right = 1;
var $author$project$Dashboard$Styles$highDensityToggle = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$bottomBarText),
		A2($elm$html$Html$Attributes$style, 'margin-right', '20px'),
		A2($elm$html$Html$Attributes$style, 'text-transform', 'uppercase')
	]);
var $author$project$Dashboard$Footer$toggleView = function (_v0) {
	var highDensity = _v0.af;
	var dashboardView = _v0.fB;
	return $author$project$Views$Toggle$toggleSwitch(
		{
			e7: 'Toggle high-density view',
			gg: $author$project$Routes$Dashboard(
				{
					fB: dashboardView,
					hs: highDensity ? $author$project$Routes$Normal('') : $author$project$Routes$HighDensity
				}),
			g$: highDensity,
			hJ: $author$project$Dashboard$Styles$highDensityToggle,
			hR: 'high-density',
			hS: 1
		});
};
var $author$project$Dashboard$Footer$legend = F2(
	function (session, model) {
		return $author$project$Dashboard$Footer$hideLegend(model) ? $elm$html$Html$text('') : A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('legend'),
				$author$project$Dashboard$Styles$legend),
			_Utils_ap(
				A2(
					$elm$core$List$map,
					$author$project$Dashboard$Footer$legendItem,
					_List_fromArray(
						[
							$author$project$Concourse$PipelineStatus$PipelineStatusPending(false),
							$author$project$Concourse$PipelineStatus$PipelineStatusPaused
						])),
				A2(
					$elm$core$List$cons,
					A2(
						$elm$html$Html$div,
						$author$project$Dashboard$Styles$legendItem,
						_List_fromArray(
							[
								A2(
								$author$project$Views$Icon$icon,
								{d1: $author$project$Assets$RunningLegend, cg: 20},
								_List_Nil),
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'width', '10px')
									]),
								_List_Nil),
								$elm$html$Html$text('running')
							])),
					_Utils_ap(
						A2(
							$elm$core$List$map,
							$author$project$Dashboard$Footer$legendItem,
							_List_fromArray(
								[
									$author$project$Concourse$PipelineStatus$PipelineStatusFailed($author$project$Concourse$PipelineStatus$Running),
									$author$project$Concourse$PipelineStatus$PipelineStatusErrored($author$project$Concourse$PipelineStatus$Running),
									$author$project$Concourse$PipelineStatus$PipelineStatusAborted($author$project$Concourse$PipelineStatus$Running),
									$author$project$Concourse$PipelineStatus$PipelineStatusSucceeded($author$project$Concourse$PipelineStatus$Running)
								])),
						_Utils_ap(
							$author$project$Dashboard$Footer$legendSeparator(session.c4),
							_List_fromArray(
								[
									$author$project$Dashboard$Footer$toggleView(model)
								]))))));
	});
var $author$project$Dashboard$Footer$infoBar = F2(
	function (session, model) {
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('dashboard-info'),
				$author$project$Dashboard$Styles$infoBar(
					{
						ga: $author$project$Dashboard$Footer$hideLegend(model),
						c4: session.c4
					})),
			_List_fromArray(
				[
					A2($author$project$Dashboard$Footer$legend, session, model),
					$author$project$Dashboard$Footer$concourseInfo(session)
				]));
	});
var $author$project$Dashboard$Footer$keyboardHelp = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			$elm$html$Html$Attributes$class('keyboard-help'),
			$elm$html$Html$Attributes$id('keyboard-help')
		]),
	_List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('help-title')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('keyboard shortcuts')
				])),
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('help-line')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('keys')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('key')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('/')
								]))
						])),
					$elm$html$Html$text('search')
				])),
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('help-line')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('keys')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('key')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('?')
								]))
						])),
					$elm$html$Html$text('hide/show help')
				]))
		]));
var $author$project$Dashboard$Footer$view = F2(
	function (session, model) {
		return model.eN ? $author$project$Dashboard$Footer$keyboardHelp : ((!model.d_) ? A2($author$project$Dashboard$Footer$infoBar, session, model) : $elm$html$Html$text(''));
	});
var $author$project$Dashboard$Dashboard$view = F2(
	function (session, model) {
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('page-including-top-bar'),
				$author$project$Views$Styles$pageIncludingTopBar),
			_List_fromArray(
				[
					A2($author$project$Dashboard$Dashboard$topBar, session, model),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$id('page-below-top-bar'),
							A2($elm$html$Html$Attributes$style, 'padding-top', '54px'),
							A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2(
							$elm$html$Html$Attributes$style,
							'padding-bottom',
							(model.eN || model.d_) ? '0' : '50px')
						]),
					_List_fromArray(
						[
							A2($author$project$SideBar$SideBar$view, session, $elm$core$Maybe$Nothing),
							A2($author$project$Dashboard$Dashboard$dashboardView, session, model)
						])),
					A2($author$project$Dashboard$Footer$view, session, model)
				]));
	});
var $author$project$Assets$ClippyIcon = {$: 28};
var $author$project$Message$Message$CopyTokenButton = {$: 24};
var $author$project$Colors$flySuccessButtonHover = '#242424';
var $author$project$Colors$flySuccessCard = '#323030';
var $author$project$Colors$flySuccessTokenCopied = '#196ac8';
var $author$project$FlySuccess$Models$isClicked = $elm$core$Basics$eq(2);
var $author$project$FlySuccess$Styles$button = function (buttonState) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'border',
			'1px solid ' + ($author$project$FlySuccess$Models$isClicked(buttonState) ? $author$project$Colors$flySuccessTokenCopied : $author$project$Colors$text)),
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
			A2($elm$html$Html$Attributes$style, 'margin', '15px 0'),
			A2($elm$html$Html$Attributes$style, 'padding', '10px 0'),
			A2($elm$html$Html$Attributes$style, 'width', '212px'),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			$author$project$FlySuccess$Models$isClicked(buttonState) ? 'default' : 'pointer'),
			A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			function () {
				switch (buttonState) {
					case 0:
						return $author$project$Colors$flySuccessCard;
					case 1:
						return $author$project$Colors$flySuccessButtonHover;
					default:
						return $author$project$Colors$flySuccessTokenCopied;
				}
			}())
		]);
};
var $author$project$FlySuccess$Text$copyTokenButton = function (buttonState) {
	return $author$project$FlySuccess$Models$isClicked(buttonState) ? 'token copied' : 'copy token to clipboard';
};
var $author$project$FlySuccess$FlySuccess$copyTokenButton = function (_v0) {
	var authToken = _v0.cm;
	var copyTokenButtonState = _v0.as;
	return A2(
		$elm$html$Html$span,
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('copy-token'),
					$elm$html$Html$Events$onMouseEnter(
					$author$project$Message$Message$Hover(
						$elm$core$Maybe$Just($author$project$Message$Message$CopyTokenButton))),
					$elm$html$Html$Events$onMouseLeave(
					$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
					$elm$html$Html$Events$onClick(
					$author$project$Message$Message$Click($author$project$Message$Message$CopyTokenButton)),
					A2($elm$html$Html$Attributes$attribute, 'data-clipboard-text', authToken)
				]),
			$author$project$FlySuccess$Styles$button(copyTokenButtonState)),
		_List_fromArray(
			[
				A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$ClippyIcon, cg: 20},
				_List_fromArray(
					[
						$elm$html$Html$Attributes$id('copy-icon'),
						A2($elm$html$Html$Attributes$style, 'margin-right', '5px')
					])),
				$elm$html$Html$text(
				$author$project$FlySuccess$Text$copyTokenButton(copyTokenButtonState))
			]));
};
var $author$project$FlySuccess$Text$firstParagraph = function (tokenTransfer) {
	switch (tokenTransfer) {
		case 0:
			return _List_Nil;
		case 1:
			return _List_fromArray(
				['your token has been transferred to fly.']);
		case 2:
			return _List_fromArray(
				['however, your token could not be', 'sent to fly.']);
		case 3:
			return _List_fromArray(
				['however, your token could not be sent', 'to fly because your browser blocked', 'the attempt.']);
		default:
			return _List_fromArray(
				['however, your token could not be', 'sent to fly.']);
	}
};
var $elm$html$Html$br = _VirtualDom_node('br');
var $author$project$FlySuccess$Styles$paragraph = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'margin', '5px 0')
	]);
var $author$project$FlySuccess$FlySuccess$paragraph = function (_v0) {
	var identifier = _v0.cA;
	var lines = _v0.ee;
	return A2(
		$elm$html$Html$p,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$id(identifier),
			$author$project$FlySuccess$Styles$paragraph),
		A2(
			$elm$core$List$intersperse,
			A2($elm$html$Html$br, _List_Nil, _List_Nil),
			A2($elm$core$List$map, $elm$html$Html$text, lines)));
};
var $author$project$FlySuccess$Text$pending = 'sending token to fly...';
var $author$project$FlySuccess$Text$secondParagraph = function (error) {
	switch (error) {
		case 0:
			return _List_Nil;
		case 1:
			return _List_fromArray(
				['you may now close this window.']);
		case 2:
			return _List_fromArray(
				['after copying, return to fly and paste', 'your token into the prompt.']);
		case 3:
			return _List_fromArray(
				['if that fails, you will need to copy', 'the token to your clipboard, return', 'to fly, and paste your token into', 'the prompt.']);
		default:
			return _List_fromArray(
				['could not find a valid fly port to send to.', 'maybe your URL is broken?']);
	}
};
var $author$project$Message$Message$SendTokenButton = {$: 25};
var $author$project$FlySuccess$Text$sendTokenButton = 'send token to fly directly';
var $author$project$FlySuccess$FlySuccess$sendTokenButton = function (_v0) {
	var sendTokenButtonState = _v0.a0;
	var flyPort = _v0.cy;
	var authToken = _v0.cm;
	return A2(
		$elm$html$Html$a,
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('send-token'),
					$elm$html$Html$Events$onMouseEnter(
					$author$project$Message$Message$Hover(
						$elm$core$Maybe$Just($author$project$Message$Message$SendTokenButton))),
					$elm$html$Html$Events$onMouseLeave(
					$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
					$elm$html$Html$Attributes$href(
					A2(
						$elm$core$Maybe$withDefault,
						'',
						A2(
							$elm$core$Maybe$map,
							$author$project$Routes$tokenToFlyRoute(authToken),
							flyPort)))
				]),
			$author$project$FlySuccess$Styles$button(sendTokenButtonState)),
		_List_fromArray(
			[
				$elm$html$Html$text($author$project$FlySuccess$Text$sendTokenButton)
			]));
};
var $author$project$Message$Message$CopyTokenInput = {$: 26};
var $author$project$FlySuccess$Text$copyTokenInput = 'copy token here';
var $author$project$FlySuccess$Styles$input = function (inputState) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + $author$project$Colors$text),
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
			A2($elm$html$Html$Attributes$style, 'margin', '15px 0'),
			A2($elm$html$Html$Attributes$style, 'padding', '10px 10px'),
			A2($elm$html$Html$Attributes$style, 'width', '192px'),
			A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$flySuccessCard),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			function () {
				if (!inputState) {
					return $author$project$Colors$flySuccessCard;
				} else {
					return $author$project$Colors$flySuccessButtonHover;
				}
			}()),
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$text),
			A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
			A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
			A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis')
		]);
};
var $elm$html$Html$label = _VirtualDom_node('label');
var $author$project$FlySuccess$FlySuccess$tokenTextBox = function (_v0) {
	var copyTokenInputState = _v0.bG;
	var authToken = _v0.cm;
	return A2(
		$elm$html$Html$label,
		_List_Nil,
		_List_fromArray(
			[
				$elm$html$Html$text($author$project$FlySuccess$Text$copyTokenInput),
				A2(
				$elm$html$Html$input,
				_Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$id('manual-copy-token'),
							$elm$html$Html$Attributes$value(authToken),
							$elm$html$Html$Events$onMouseEnter(
							$author$project$Message$Message$Hover(
								$elm$core$Maybe$Just($author$project$Message$Message$CopyTokenInput))),
							$elm$html$Html$Events$onMouseLeave(
							$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
						]),
					$author$project$FlySuccess$Styles$input(copyTokenInputState)),
				_List_Nil)
			]));
};
var $author$project$FlySuccess$FlySuccess$body = function (model) {
	var p2 = $author$project$FlySuccess$FlySuccess$paragraph(
		{
			cA: 'second-paragraph',
			ee: $author$project$FlySuccess$Text$secondParagraph(model.aD)
		});
	var p1 = $author$project$FlySuccess$FlySuccess$paragraph(
		{
			cA: 'first-paragraph',
			ee: $author$project$FlySuccess$Text$firstParagraph(model.aD)
		});
	var _v0 = model.aD;
	switch (_v0) {
		case 0:
			return _List_fromArray(
				[
					$elm$html$Html$text($author$project$FlySuccess$Text$pending)
				]);
		case 1:
			return _List_fromArray(
				[p1, p2]);
		case 2:
			return _List_fromArray(
				[
					p1,
					$author$project$FlySuccess$FlySuccess$tokenTextBox(model),
					$author$project$FlySuccess$FlySuccess$copyTokenButton(model),
					p2
				]);
		case 3:
			return _List_fromArray(
				[
					p1,
					$author$project$FlySuccess$FlySuccess$tokenTextBox(model),
					$author$project$FlySuccess$FlySuccess$sendTokenButton(model),
					p2,
					$author$project$FlySuccess$FlySuccess$copyTokenButton(model)
				]);
		default:
			return _List_fromArray(
				[
					p1,
					$author$project$FlySuccess$FlySuccess$tokenTextBox(model),
					$author$project$FlySuccess$FlySuccess$copyTokenButton(model),
					p2
				]);
	}
};
var $author$project$FlySuccess$Styles$body = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '14px'),
		A2($elm$html$Html$Attributes$style, 'margin', '10px 0'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center')
	]);
var $author$project$FlySuccess$Styles$card = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$flySuccessCard),
		A2($elm$html$Html$Attributes$style, 'padding', '30px'),
		A2($elm$html$Html$Attributes$style, 'width', '330px'),
		A2($elm$html$Html$Attributes$style, 'margin', '50px auto'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
		A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightLight)
	]);
var $author$project$FlySuccess$Styles$title = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '18px'),
		A2($elm$html$Html$Attributes$style, 'margin', '0'),
		A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightDefault)
	]);
var $author$project$FlySuccess$Text$title = 'login successful!';
var $author$project$FlySuccess$FlySuccess$view = F2(
	function (userState, model) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('page-including-top-bar'),
						$author$project$Views$Styles$pageIncludingTopBar),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$id('top-bar-app'),
								$author$project$Views$Styles$topBar(false)),
							_List_fromArray(
								[
									$author$project$Views$TopBar$concourseLogo,
									A2($author$project$Login$Login$view, userState, model)
								])),
							A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$id('page-below-top-bar'),
								$author$project$Views$Styles$pageBelowTopBar(
									A2($author$project$Routes$FlySuccess, false, $elm$core$Maybe$Nothing))),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									A2(
										$elm$core$List$cons,
										$elm$html$Html$Attributes$id('success-card'),
										$author$project$FlySuccess$Styles$card),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$p,
											A2(
												$elm$core$List$cons,
												$elm$html$Html$Attributes$id('success-card-title'),
												$author$project$FlySuccess$Styles$title),
											_List_fromArray(
												[
													$elm$html$Html$text($author$project$FlySuccess$Text$title)
												])),
											A2(
											$elm$html$Html$div,
											A2(
												$elm$core$List$cons,
												$elm$html$Html$Attributes$id('success-card-body'),
												$author$project$FlySuccess$Styles$body),
											$author$project$FlySuccess$FlySuccess$body(model))
										]))
								]))
						]))
				]));
	});
var $author$project$Assets$PauseCircleIcon = 1;
var $author$project$Assets$PlayCircleIcon = 0;
var $author$project$Message$Message$ToggleJobButton = {$: 0};
var $author$project$Job$Job$headerBuildStatus = function (finishedBuild) {
	if (finishedBuild.$ === 1) {
		return 0;
	} else {
		var build = finishedBuild.a;
		return build.hH;
	}
};
var $author$project$Job$Styles$icon = function (hovered) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'opacity',
			hovered ? '1' : '0.5')
		]);
};
var $author$project$Job$Job$isPipelineArchived = F2(
	function (pipelines, _v0) {
		var pipelineName = _v0.c_;
		var teamName = _v0.dh;
		return A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.e5;
				},
				A2(
					$elm_community$list_extra$List$Extra$find,
					function (p) {
						return _Utils_eq(p.bX, pipelineName) && _Utils_eq(p.dh, teamName);
					},
					A2($krisajenkins$remotedata$RemoteData$withDefault, _List_Nil, pipelines))));
	});
var $author$project$Job$Styles$noBuildsMessage = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'font-size', '16px'),
		A2($elm$html$Html$Attributes$style, 'padding', '10px 0 0 30px')
	]);
var $author$project$Colors$secondaryTopBar = '#2a2929';
var $author$project$Job$Styles$button = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'padding', '10px'),
		A2($elm$html$Html$Attributes$style, 'border', 'none'),
		A2($elm$html$Html$Attributes$style, 'outline', 'none'),
		A2($elm$html$Html$Attributes$style, 'margin', '0')
	]);
var $author$project$Job$Styles$triggerButton = F3(
	function (buttonDisabled, hovered, status) {
		return _Utils_ap(
			_List_fromArray(
				[
					A2(
					$elm$html$Html$Attributes$style,
					'cursor',
					buttonDisabled ? 'default' : 'pointer'),
					A2($elm$html$Html$Attributes$style, 'position', 'relative'),
					A2(
					$elm$html$Html$Attributes$style,
					'background-color',
					A2($author$project$Colors$buildStatusColor, hovered && (!buttonDisabled), status))
				]),
			$author$project$Job$Styles$button);
	});
var $author$project$Colors$buildTooltipText = '#ecf0f1';
var $author$project$Job$Styles$triggerTooltip = _Utils_ap(
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
			A2($elm$html$Html$Attributes$style, 'right', '100%'),
			A2($elm$html$Html$Attributes$style, 'top', '15px'),
			A2($elm$html$Html$Attributes$style, 'width', '300px'),
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$buildTooltipText),
			A2($elm$html$Html$Attributes$style, 'padding', '10px'),
			A2($elm$html$Html$Attributes$style, 'text-align', 'right'),
			A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
		]),
	$author$project$Views$Styles$defaultFont);
var $author$project$Views$BuildDuration$labeledDate = F3(
	function (_v0, now, date) {
		var label = _v0.bg;
		var timeZone = _v0.eW;
		var verboseDate = A3(
			$ryannhg$date_format$DateFormat$format,
			_List_fromArray(
				[
					$ryannhg$date_format$DateFormat$monthNameAbbreviated,
					$ryannhg$date_format$DateFormat$text(' '),
					$ryannhg$date_format$DateFormat$dayOfMonthNumber,
					$ryannhg$date_format$DateFormat$text(' '),
					$ryannhg$date_format$DateFormat$yearNumber,
					$ryannhg$date_format$DateFormat$text(' '),
					$ryannhg$date_format$DateFormat$hourFixed,
					$ryannhg$date_format$DateFormat$text(':'),
					$ryannhg$date_format$DateFormat$minuteFixed,
					$ryannhg$date_format$DateFormat$text(':'),
					$ryannhg$date_format$DateFormat$secondFixed,
					$ryannhg$date_format$DateFormat$text(' '),
					$ryannhg$date_format$DateFormat$amPmUppercase
				]),
			timeZone,
			date);
		var ago = A2($author$project$Duration$between, date, now);
		var relativeDate = $author$project$Duration$format(ago) + ' ago';
		return (_Utils_cmp(ago, ((24 * 60) * 60) * 1000) < 0) ? A2(
			$elm$html$Html$tr,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$td,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('dict-key')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(label)
						])),
					A2(
					$elm$html$Html$td,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$title(verboseDate),
							$elm$html$Html$Attributes$class('dict-value')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(relativeDate)
								]))
						]))
				])) : A2(
			$elm$html$Html$tr,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$td,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('dict-key')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(label)
						])),
					A2(
					$elm$html$Html$td,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$title(relativeDate),
							$elm$html$Html$Attributes$class('dict-value')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(verboseDate)
								]))
						]))
				]));
	});
var $author$project$Views$BuildDuration$labeledDuration = F2(
	function (label, duration) {
		return A2(
			$elm$html$Html$tr,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$td,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('dict-key')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(label)
						])),
					A2(
					$elm$html$Html$td,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('dict-value')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(
									$author$project$Duration$format(duration))
								]))
						]))
				]));
	});
var $author$project$Views$BuildDuration$pendingLabel = function (label) {
	return A2(
		$elm$html$Html$tr,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('dict-key')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(label)
					])),
				A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('dict-value')
					]),
				_List_Nil)
			]));
};
var $author$project$Views$BuildDuration$view = F3(
	function (timeZone, duration, now) {
		return A2(
			$elm$html$Html$table,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('dictionary build-duration')
				]),
			function () {
				var _v0 = _Utils_Tuple2(duration.eR, duration.dQ);
				if (_v0.a.$ === 1) {
					if (_v0.b.$ === 1) {
						var _v1 = _v0.a;
						var _v2 = _v0.b;
						return _List_fromArray(
							[
								$author$project$Views$BuildDuration$pendingLabel('pending')
							]);
					} else {
						var _v4 = _v0.a;
						var finishedAt = _v0.b.a;
						return _List_fromArray(
							[
								A3(
								$author$project$Views$BuildDuration$labeledDate,
								{bg: 'finished', eW: timeZone},
								now,
								finishedAt)
							]);
					}
				} else {
					if (_v0.b.$ === 1) {
						var startedAt = _v0.a.a;
						var _v3 = _v0.b;
						return _List_fromArray(
							[
								A3(
								$author$project$Views$BuildDuration$labeledDate,
								{bg: 'started', eW: timeZone},
								now,
								startedAt)
							]);
					} else {
						var startedAt = _v0.a.a;
						var finishedAt = _v0.b.a;
						var durationElmIssue = A2($author$project$Duration$between, startedAt, finishedAt);
						return _List_fromArray(
							[
								A3(
								$author$project$Views$BuildDuration$labeledDate,
								{bg: 'started', eW: timeZone},
								now,
								startedAt),
								A3(
								$author$project$Views$BuildDuration$labeledDate,
								{bg: 'finished', eW: timeZone},
								now,
								finishedAt),
								A2($author$project$Views$BuildDuration$labeledDuration, 'duration', durationElmIssue)
							]);
					}
				}
			}());
	});
var $author$project$Message$Message$GoToRoute = function (a) {
	return {$: 19, a: a};
};
var $author$project$Job$Job$viewBuildHeader = function (b) {
	return A2(
		$elm$html$Html$a,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class(
				$author$project$Concourse$BuildStatus$show(b.hH)),
				$author$project$StrictEvents$onLeftClick(
				$author$project$Message$Message$GoToRoute(
					A3($author$project$Routes$buildRoute, b.L, b.bX, b.gF))),
				$elm$html$Html$Attributes$href(
				$author$project$Routes$toString(
					A3($author$project$Routes$buildRoute, b.L, b.bX, b.gF)))
			]),
		_List_fromArray(
			[
				$elm$html$Html$text('#' + b.bX)
			]));
};
var $author$project$Assets$DownArrow = {$: 30};
var $author$project$Assets$UpArrow = {$: 29};
var $author$project$Job$Styles$buildResourceHeader = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'padding-bottom', '5px')
	]);
var $author$project$Job$Styles$buildResourceIcon = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
		A2($elm$html$Html$Attributes$style, 'margin-right', '5px')
	]);
var $author$project$Job$Job$viewVersion = function (version) {
	return A2(
		$author$project$Views$DictView$view,
		_List_Nil,
		A2(
			$elm$core$Dict$map,
			$elm$core$Basics$always($elm$html$Html$text),
			version));
};
var $author$project$Job$Job$viewBuildInputs = function (bi) {
	return A2(
		$elm$html$Html$tr,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mbs pas resource fl clearfix')
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('resource-name mrm')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(bi.bX)
					])),
				A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('resource-version')
					]),
				_List_fromArray(
					[
						$author$project$Job$Job$viewVersion(bi.dn)
					]))
			]));
};
var $author$project$Job$Job$viewBuildOutputs = function (bo) {
	return A2(
		$elm$html$Html$tr,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('mbs pas resource fl clearfix')
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('resource-name mrm')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(bo.bX)
					])),
				A2(
				$elm$html$Html$td,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('resource-version')
					]),
				_List_fromArray(
					[
						$author$project$Job$Job$viewVersion(bo.dn)
					]))
			]));
};
var $author$project$Job$Job$viewBuildResources = function (buildWithResources) {
	var outputsTable = function () {
		var _v1 = buildWithResources.eH;
		if (_v1.$ === 1) {
			return $author$project$Views$LoadingIndicator$view;
		} else {
			var resources = _v1.a;
			return A2(
				$elm$html$Html$table,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('build-resources')
					]),
				A2($elm$core$List$map, $author$project$Job$Job$viewBuildOutputs, resources.bZ));
		}
	}();
	var inputsTable = function () {
		var _v0 = buildWithResources.eH;
		if (_v0.$ === 1) {
			return $author$project$Views$LoadingIndicator$view;
		} else {
			var resources = _v0.a;
			return A2(
				$elm$html$Html$table,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('build-resources')
					]),
				A2($elm$core$List$map, $author$project$Job$Job$viewBuildInputs, resources.go));
		}
	}();
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('inputs mrl')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					$author$project$Job$Styles$buildResourceHeader,
					_List_fromArray(
						[
							A2(
							$author$project$Views$Icon$icon,
							{d1: $author$project$Assets$DownArrow, cg: 12},
							$author$project$Job$Styles$buildResourceIcon),
							$elm$html$Html$text('inputs')
						])),
					inputsTable
				])),
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('outputs mrl')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					$author$project$Job$Styles$buildResourceHeader,
					_List_fromArray(
						[
							A2(
							$author$project$Views$Icon$icon,
							{d1: $author$project$Assets$UpArrow, cg: 12},
							$author$project$Job$Styles$buildResourceIcon),
							$elm$html$Html$text('outputs')
						])),
					outputsTable
				]))
		]);
};
var $author$project$Job$Job$viewBuildWithResources = F3(
	function (session, model, bwr) {
		return A2(
			$elm$html$Html$li,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('js-build')
				]),
			function () {
				var buildResourcesView = $author$project$Job$Job$viewBuildResources(bwr);
				return _List_fromArray(
					[
						$author$project$Job$Job$viewBuildHeader(bwr.ab),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('pam clearfix')
							]),
						A2(
							$elm$core$List$cons,
							A3($author$project$Views$BuildDuration$view, session.eW, bwr.ab.cv, model.en),
							buildResourcesView))
					]);
			}());
	});
var $author$project$Message$Message$NextPageButton = {$: 5};
var $author$project$Message$Message$PreviousPageButton = {$: 4};
var $author$project$Concourse$Pagination$chevronContainer = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'padding', '5px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'border-left', '1px solid ' + $author$project$Colors$background)
	]);
var $author$project$Assets$ChevronLeft = {$: 1};
var $author$project$Concourse$Pagination$chevron = F2(
	function (asset, _v0) {
		var enabled = _v0.fJ;
		var hovered = _v0.d0;
		return _Utils_ap(
			_List_fromArray(
				[
					A2(
					$elm$html$Html$Attributes$style,
					'background-image',
					$author$project$Assets$backgroundImage(
						$elm$core$Maybe$Just(asset))),
					A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
					A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
					A2($elm$html$Html$Attributes$style, 'width', '24px'),
					A2($elm$html$Html$Attributes$style, 'height', '24px'),
					A2($elm$html$Html$Attributes$style, 'padding', '5px'),
					A2(
					$elm$html$Html$Attributes$style,
					'opacity',
					enabled ? '1' : '0.5')
				]),
			hovered ? _List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$paginationHover),
					A2($elm$html$Html$Attributes$style, 'border-radius', '50%')
				]) : _List_Nil);
	});
var $author$project$Concourse$Pagination$chevronLeft = $author$project$Concourse$Pagination$chevron($author$project$Assets$ChevronLeft);
var $author$project$Assets$ChevronRight = {$: 2};
var $author$project$Concourse$Pagination$chevronRight = $author$project$Concourse$Pagination$chevron($author$project$Assets$ChevronRight);
var $author$project$Job$Job$viewPaginationBar = F2(
	function (session, model) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('pagination'),
					A2($elm$html$Html$Attributes$style, 'display', 'flex'),
					A2($elm$html$Html$Attributes$style, 'align-items', 'stretch')
				]),
			_List_fromArray(
				[
					function () {
					var _v0 = model.O.g6.br;
					if (_v0.$ === 1) {
						return A2(
							$elm$html$Html$div,
							$author$project$Concourse$Pagination$chevronContainer,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									$author$project$Concourse$Pagination$chevronLeft(
										{fJ: false, d0: false}),
									_List_Nil)
								]));
					} else {
						var page = _v0.a;
						var jobRoute = $author$project$Routes$Job(
							{
								L: model.gG,
								aX: $elm$core$Maybe$Just(page)
							});
						return A2(
							$elm$html$Html$div,
							_Utils_ap(
								_List_fromArray(
									[
										$elm$html$Html$Events$onMouseEnter(
										$author$project$Message$Message$Hover(
											$elm$core$Maybe$Just($author$project$Message$Message$PreviousPageButton))),
										$elm$html$Html$Events$onMouseLeave(
										$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
									]),
								$author$project$Concourse$Pagination$chevronContainer),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$a,
									_Utils_ap(
										_List_fromArray(
											[
												$author$project$StrictEvents$onLeftClick(
												$author$project$Message$Message$GoToRoute(jobRoute)),
												$elm$html$Html$Attributes$href(
												$author$project$Routes$toString(jobRoute)),
												A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Previous Page')
											]),
										$author$project$Concourse$Pagination$chevronLeft(
											{
												fJ: true,
												d0: A2($author$project$HoverState$isHovered, $author$project$Message$Message$PreviousPageButton, session.d0)
											})),
									_List_Nil)
								]));
					}
				}(),
					function () {
					var _v1 = model.O.g6.bh;
					if (_v1.$ === 1) {
						return A2(
							$elm$html$Html$div,
							$author$project$Concourse$Pagination$chevronContainer,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									$author$project$Concourse$Pagination$chevronRight(
										{fJ: false, d0: false}),
									_List_Nil)
								]));
					} else {
						var page = _v1.a;
						var jobRoute = $author$project$Routes$Job(
							{
								L: model.gG,
								aX: $elm$core$Maybe$Just(page)
							});
						return A2(
							$elm$html$Html$div,
							_Utils_ap(
								_List_fromArray(
									[
										$elm$html$Html$Events$onMouseEnter(
										$author$project$Message$Message$Hover(
											$elm$core$Maybe$Just($author$project$Message$Message$NextPageButton))),
										$elm$html$Html$Events$onMouseLeave(
										$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
									]),
								$author$project$Concourse$Pagination$chevronContainer),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$a,
									_Utils_ap(
										_List_fromArray(
											[
												$author$project$StrictEvents$onLeftClick(
												$author$project$Message$Message$GoToRoute(jobRoute)),
												$elm$html$Html$Attributes$href(
												$author$project$Routes$toString(jobRoute)),
												A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Next Page')
											]),
										$author$project$Concourse$Pagination$chevronRight(
											{
												fJ: true,
												d0: A2($author$project$HoverState$isHovered, $author$project$Message$Message$NextPageButton, session.d0)
											})),
									_List_Nil)
								]));
					}
				}()
				]));
	});
var $author$project$Job$Job$viewMainJobsSection = F2(
	function (session, model) {
		var archived = A2($author$project$Job$Job$isPipelineArchived, session.he, model.gG);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('with-fixed-header'),
					A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
					A2($elm$html$Html$Attributes$style, 'display', 'flex'),
					A2($elm$html$Html$Attributes$style, 'flex-direction', 'column')
				]),
			_List_fromArray(
				[
					function () {
					var _v0 = $krisajenkins$remotedata$RemoteData$toMaybe(model.gF);
					if (_v0.$ === 1) {
						return $author$project$Views$LoadingIndicator$view;
					} else {
						var job = _v0.a;
						var triggerHovered = A2($author$project$HoverState$isHovered, $author$project$Message$Message$TriggerBuildButton, session.d0);
						var toggleHovered = A2($author$project$HoverState$isHovered, $author$project$Message$Message$ToggleJobButton, session.d0);
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('fixed-header')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('build-header'),
											A2($elm$html$Html$Attributes$style, 'display', 'flex'),
											A2($elm$html$Html$Attributes$style, 'justify-content', 'space-between'),
											A2(
											$elm$html$Html$Attributes$style,
											'background',
											A2(
												$author$project$Colors$buildStatusColor,
												true,
												$author$project$Job$Job$headerBuildStatus(job.cx)))
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$div,
											_List_fromArray(
												[
													A2($elm$html$Html$Attributes$style, 'display', 'flex')
												]),
											_List_fromArray(
												[
													archived ? $elm$html$Html$text('') : A2(
													$elm$html$Html$button,
													_Utils_ap(
														_List_fromArray(
															[
																$elm$html$Html$Attributes$id('pause-toggle'),
																$elm$html$Html$Events$onMouseEnter(
																$author$project$Message$Message$Hover(
																	$elm$core$Maybe$Just($author$project$Message$Message$ToggleJobButton))),
																$elm$html$Html$Events$onMouseLeave(
																$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
																$elm$html$Html$Events$onClick(
																$author$project$Message$Message$Click($author$project$Message$Message$ToggleJobButton))
															]),
														A3(
															$author$project$Job$Styles$triggerButton,
															false,
															toggleHovered,
															$author$project$Job$Job$headerBuildStatus(job.cx))),
													_List_fromArray(
														[
															A2(
															$author$project$Views$Icon$icon,
															{
																d1: $author$project$Assets$CircleOutlineIcon(
																	job.bn ? 0 : 1),
																cg: 40
															},
															$author$project$Job$Styles$icon(toggleHovered))
														])),
													A2(
													$elm$html$Html$h1,
													_List_Nil,
													_List_fromArray(
														[
															A2(
															$elm$html$Html$span,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('build-name')
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text(job.bX)
																]))
														]))
												])),
											archived ? $elm$html$Html$text('') : A2(
											$elm$html$Html$button,
											_Utils_ap(
												_List_fromArray(
													[
														$elm$html$Html$Attributes$class('trigger-build'),
														$author$project$StrictEvents$onLeftClick(
														$author$project$Message$Message$Click($author$project$Message$Message$TriggerBuildButton)),
														A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Trigger Build'),
														A2($elm$html$Html$Attributes$attribute, 'title', 'Trigger Build'),
														$elm$html$Html$Events$onMouseEnter(
														$author$project$Message$Message$Hover(
															$elm$core$Maybe$Just($author$project$Message$Message$TriggerBuildButton))),
														$elm$html$Html$Events$onMouseLeave(
														$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
													]),
												A3(
													$author$project$Job$Styles$triggerButton,
													job.ct,
													triggerHovered,
													$author$project$Job$Job$headerBuildStatus(job.cx))),
											_Utils_ap(
												_List_fromArray(
													[
														A2(
														$author$project$Views$Icon$icon,
														{
															d1: $author$project$Assets$CircleOutlineIcon(2),
															cg: 40
														},
														$author$project$Job$Styles$icon(triggerHovered && (!job.ct)))
													]),
												(job.ct && triggerHovered) ? _List_fromArray(
													[
														A2(
														$elm$html$Html$div,
														$author$project$Job$Styles$triggerTooltip,
														_List_fromArray(
															[
																$elm$html$Html$text('manual triggering disabled ' + 'in job config')
															]))
													]) : _List_Nil))
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$id('pagination-header'),
											A2($elm$html$Html$Attributes$style, 'display', 'flex'),
											A2($elm$html$Html$Attributes$style, 'justify-content', 'space-between'),
											A2($elm$html$Html$Attributes$style, 'align-items', 'stretch'),
											A2($elm$html$Html$Attributes$style, 'height', '60px'),
											A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$secondaryTopBar)
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$h1,
											_List_fromArray(
												[
													A2($elm$html$Html$Attributes$style, 'margin', '0 18px')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('builds')
												])),
											A2($author$project$Job$Job$viewPaginationBar, session, model)
										]))
								]));
					}
				}(),
					function () {
					var _v1 = _Utils_Tuple2(model.O.fw, model.aJ);
					if (_v1.b.$ === 1) {
						var _v2 = _v1.b;
						return $author$project$Views$LoadingIndicator$view;
					} else {
						if (!_v1.a.b) {
							return A2(
								$elm$html$Html$div,
								$author$project$Job$Styles$noBuildsMessage,
								_List_fromArray(
									[
										$elm$html$Html$text('no builds for job “' + (model.gG.d7 + '”'))
									]));
						} else {
							var anyList = _v1.a;
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('scrollable-body job-body'),
										A2($elm$html$Html$Attributes$style, 'overflow-y', 'auto')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$ul,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$class('jobs-builds-list builds-list')
											]),
										A2(
											$elm$core$List$map,
											A2($author$project$Job$Job$viewBuildWithResources, session, model),
											anyList))
									]));
						}
					}
				}()
				]));
	});
var $author$project$Job$Job$view = F2(
	function (session, model) {
		var route = $author$project$Routes$Job(
			{L: model.gG, aX: model.aJ});
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('page-including-top-bar'),
				$author$project$Views$Styles$pageIncludingTopBar),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('top-bar-app'),
						$author$project$Views$Styles$topBar(false)),
					_List_fromArray(
						[
							$author$project$SideBar$SideBar$hamburgerMenu(session),
							$author$project$Views$TopBar$concourseLogo,
							$author$project$Views$TopBar$breadcrumbs(route),
							A2($author$project$Login$Login$view, session.bB, model)
						])),
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('page-below-top-bar'),
						$author$project$Views$Styles$pageBelowTopBar(route)),
					_List_fromArray(
						[
							A2(
							$author$project$SideBar$SideBar$view,
							session,
							$elm$core$Maybe$Just(
								{c_: model.gG.c_, dh: model.gG.dh})),
							A2($author$project$Job$Job$viewMainJobsSection, session, model)
						]))
				]));
	});
var $author$project$NotFound$NotFound$view = F2(
	function (session, model) {
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('page-including-top-bar'),
				$author$project$Views$Styles$pageIncludingTopBar),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('top-bar-app'),
						$author$project$Views$Styles$topBar(false)),
					_List_fromArray(
						[
							$author$project$SideBar$SideBar$hamburgerMenu(session),
							$author$project$Views$TopBar$concourseLogo,
							$author$project$Views$TopBar$breadcrumbs(model.am),
							A2($author$project$Login$Login$view, session.bB, model)
						])),
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('page-below-top-bar'),
						$author$project$Views$Styles$pageBelowTopBar(model.am)),
					_List_fromArray(
						[
							A2($author$project$SideBar$SideBar$view, session, $elm$core$Maybe$Nothing),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('notfound')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('title')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('404')
										])),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('reason')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('this page was not found')
										])),
									A2(
									$elm$html$Html$img,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$src(model.aU)
										]),
									_List_Nil),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('help-message')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('Not to worry, you can head'),
											A2($elm$html$Html$br, _List_Nil, _List_Nil),
											$elm$html$Html$text('back to the '),
											A2(
											$elm$html$Html$a,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$href('/')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('home page')
												]))
										]))
								]))
						]))
				]));
	});
var $author$project$Views$Styles$Below = 1;
var $author$project$Message$Message$TopBarFavoritedIcon = function (a) {
	return {$: 18, a: a};
};
var $author$project$Message$Message$TopBarPauseToggle = function (a) {
	return {$: 19, a: a};
};
var $author$project$Pipeline$Styles$favoritedIcon = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'border-left', '1px solid ' + $author$project$Colors$background),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame)
	]);
var $author$project$Pipeline$Pipeline$getPipelineId = function (p) {
	return A2(
		$krisajenkins$remotedata$RemoteData$withDefault,
		-1,
		A2(
			$krisajenkins$remotedata$RemoteData$map,
			function ($) {
				return $.L;
			},
			p));
};
var $author$project$Pipeline$Pipeline$isArchived = function (p) {
	return A2(
		$krisajenkins$remotedata$RemoteData$withDefault,
		false,
		A2(
			$krisajenkins$remotedata$RemoteData$map,
			function ($) {
				return $.e5;
			},
			p));
};
var $author$project$Pipeline$Pipeline$isPaused = function (p) {
	return A2(
		$krisajenkins$remotedata$RemoteData$withDefault,
		false,
		A2(
			$krisajenkins$remotedata$RemoteData$map,
			function ($) {
				return $.bn;
			},
			p));
};
var $author$project$Pipeline$Styles$pauseToggle = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'border-left', '1px solid ' + $author$project$Colors$background),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$frame)
	]);
var $author$project$Pipeline$PinMenu$Views$Dark = 0;
var $author$project$Pipeline$PinMenu$Views$Light = 1;
var $author$project$Pipeline$PinMenu$Views$Percent = function (a) {
	return {$: 0, a: a};
};
var $author$project$Message$Message$PinIcon = {$: 12};
var $author$project$Message$Message$PinMenuDropDown = function (a) {
	return {$: 13, a: a};
};
var $author$project$Pipeline$PinMenu$Views$Px = function (a) {
	return {$: 1, a: a};
};
var $author$project$Pipeline$PinMenu$Views$TopRight = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Pipeline$PinMenu$PinMenu$getPinnedResources = function (fetchedResources) {
	if (fetchedResources.$ === 1) {
		return _List_Nil;
	} else {
		var res = fetchedResources.a;
		return A2(
			$elm$core$List$filterMap,
			function (r) {
				return A2(
					$elm$core$Maybe$map,
					function (v) {
						return _Utils_Tuple2(r.bX, v);
					},
					r.hc);
			},
			A2(
				$elm$core$Result$withDefault,
				_List_Nil,
				A2(
					$elm$json$Json$Decode$decodeValue,
					$elm$json$Json$Decode$list($author$project$Concourse$decodeResource),
					res)));
	}
};
var $author$project$Colors$pinned = '#5c3bd1';
var $author$project$Pipeline$PinMenu$PinMenu$pinMenu = F2(
	function (_v0, model) {
		var hovered = _v0.d0;
		var pipeline = model.hd;
		var pinnedResources = $author$project$Pipeline$PinMenu$PinMenu$getPinnedResources(model.fY);
		var pinCount = $elm$core$List$length(pinnedResources);
		var isHovered = _Utils_eq(
			hovered,
			$author$project$HoverState$Hovered($author$project$Message$Message$PinIcon));
		var hasPinnedResources = pinCount > 0;
		return {
			fb: model.bp ? 1 : 0,
			co: hasPinnedResources ? $elm$core$Maybe$Just(
				{
					ft: $author$project$Colors$pinned,
					dG: 15,
					b3: A2(
						$author$project$Pipeline$PinMenu$Views$TopRight,
						$author$project$Pipeline$PinMenu$Views$Px(10),
						$author$project$Pipeline$PinMenu$Views$Px(10)),
					hR: $elm$core$String$fromInt(pinCount)
				}) : $elm$core$Maybe$Nothing,
			cp: hasPinnedResources,
			dK: model.bp ? $elm$core$Maybe$Just(
				{
					cN: A2(
						$elm$core$List$map,
						function (_v1) {
							var resourceName = _v1.a;
							var pinnedVersion = _v1.b;
							return {
								fb: _Utils_eq(
									hovered,
									$author$project$HoverState$Hovered(
										$author$project$Message$Message$PinMenuDropDown(resourceName))) ? $author$project$Colors$sideBarActive : $author$project$Colors$sideBar,
								ge: true,
								cX: $author$project$Message$Message$GoToRoute(
									$author$project$Routes$Resource(
										{
											L: {c_: pipeline.c_, hk: resourceName, dh: pipeline.dh},
											aX: $elm$core$Maybe$Nothing
										})),
								eq: 10,
								df: A2(
									$elm$core$List$map,
									function (_v2) {
										var k = _v2.a;
										var v = _v2.b;
										return {ft: $author$project$Colors$text, cP: k, c0: v};
									},
									$elm$core$Dict$toList(pinnedVersion)),
								hW: {ft: $author$project$Colors$text, fw: resourceName, dT: $author$project$Views$Styles$fontWeightDefault}
							};
						},
						pinnedResources),
					b3: A2(
						$author$project$Pipeline$PinMenu$Views$TopRight,
						$author$project$Pipeline$PinMenu$Views$Percent(100),
						$author$project$Pipeline$PinMenu$Views$Percent(0))
				}) : $elm$core$Maybe$Nothing,
			ge: hasPinnedResources,
			ep: (isHovered || model.bp) ? 2 : (hasPinnedResources ? 1 : 0)
		};
	});
var $author$project$Assets$PinIconWhite = {$: 7};
var $author$project$Pipeline$PinMenu$Styles$pinIcon = function (_v0) {
	var opacity = _v0.ep;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just($author$project$Assets$PinIconWhite))),
			A2($elm$html$Html$Attributes$style, 'width', '18px'),
			A2($elm$html$Html$Attributes$style, 'height', '18px'),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			$author$project$SideBar$Styles$opacityAttr(opacity)
		]);
};
var $author$project$Pipeline$PinMenu$Styles$pinIconBackground = function (_v0) {
	var background = _v0.fb;
	var clickable = _v0.cp;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			A2($elm$html$Html$Attributes$style, 'border-left', '1px solid ' + $author$project$Colors$background),
			A2($elm$html$Html$Attributes$style, 'border-bottom', '1px solid ' + $author$project$Colors$frame),
			A2($elm$html$Html$Attributes$style, 'width', '54px'),
			A2($elm$html$Html$Attributes$style, 'height', '54px'),
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
			A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			clickable ? 'pointer' : 'default'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			function () {
				if (background === 1) {
					return $author$project$Colors$sideBar;
				} else {
					return $author$project$Colors$frame;
				}
			}())
		]);
};
var $author$project$Pipeline$PinMenu$Styles$pinBadge = function (_v0) {
	var color = _v0.ft;
	var diameterPx = _v0.dG;
	var position = _v0.b3;
	var top = position.a;
	var right = position.b;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', color),
			A2($elm$html$Html$Attributes$style, 'border-radius', '50%'),
			A2(
			$elm$html$Html$Attributes$style,
			'width',
			$elm$core$String$fromInt(diameterPx) + 'px'),
			A2(
			$elm$html$Html$Attributes$style,
			'height',
			$elm$core$String$fromInt(diameterPx) + 'px'),
			A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
			A2(
			$elm$html$Html$Attributes$style,
			'top',
			function () {
				if (top.$ === 1) {
					var px = top.a;
					return $elm$core$String$fromInt(px) + 'px';
				} else {
					var pct = top.a;
					return $elm$core$String$fromInt(pct) + '%';
				}
			}()),
			A2(
			$elm$html$Html$Attributes$style,
			'right',
			function () {
				if (right.$ === 1) {
					var px = right.a;
					return $elm$core$String$fromInt(px) + 'px';
				} else {
					var pct = right.a;
					return $elm$core$String$fromInt(pct) + '%';
				}
			}()),
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
			A2($elm$html$Html$Attributes$style, 'justify-content', 'center')
		]);
};
var $author$project$Pipeline$PinMenu$PinMenu$viewBadge = function (badge) {
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$id('pin-badge'),
			$author$project$Pipeline$PinMenu$Styles$pinBadge(badge)),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(badge.hR)
					]))
			]));
};
var $author$project$Colors$pinIconHover = '#1e1d1d';
var $author$project$Pipeline$PinMenu$Styles$pinIconDropdown = function (_v0) {
	var position = _v0.b3;
	var top = position.a;
	var right = position.b;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$pinIconHover),
			A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
			A2(
			$elm$html$Html$Attributes$style,
			'top',
			function () {
				if (top.$ === 1) {
					var px = top.a;
					return $elm$core$String$fromInt(px) + 'px';
				} else {
					var pct = top.a;
					return $elm$core$String$fromInt(pct) + '%';
				}
			}()),
			A2(
			$elm$html$Html$Attributes$style,
			'right',
			function () {
				if (right.$ === 1) {
					var px = right.a;
					return $elm$core$String$fromInt(px) + 'px';
				} else {
					var pct = right.a;
					return $elm$core$String$fromInt(pct) + '%';
				}
			}()),
			A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
			A2($elm$html$Html$Attributes$style, 'list-style-type', 'none'),
			A2($elm$html$Html$Attributes$style, 'margin-top', '1px'),
			A2($elm$html$Html$Attributes$style, 'margin-right', '-2px'),
			A2($elm$html$Html$Attributes$style, 'z-index', '1')
		]);
};
var $author$project$Pipeline$PinMenu$Styles$pinIconDropdownItem = function (_v0) {
	var paddingPx = _v0.eq;
	var background = _v0.fb;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$Attributes$style,
			'padding',
			$elm$core$String$fromInt(paddingPx) + 'px'),
			A2($elm$html$Html$Attributes$style, 'background-color', background),
			A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
			A2($elm$html$Html$Attributes$style, 'font-weight', $author$project$Views$Styles$fontWeightLight),
			A2($elm$html$Html$Attributes$style, 'border-width', '0 1px 1px 1px'),
			A2($elm$html$Html$Attributes$style, 'border-style', 'solid'),
			A2($elm$html$Html$Attributes$style, 'border-color', $author$project$Colors$frame)
		]);
};
var $author$project$Pipeline$PinMenu$PinMenu$viewTableRow = function (_v0) {
	var left = _v0.cP;
	var right = _v0.c0;
	var color = _v0.ft;
	return A2(
		$elm$html$Html$tr,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'color', color)
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$td,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(left)
					])),
				A2(
				$elm$html$Html$td,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(right)
					]))
			]));
};
var $author$project$Pipeline$PinMenu$Styles$title = function (_v0) {
	var fontWeight = _v0.dT;
	var color = _v0.ft;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'font-weight', fontWeight),
			A2($elm$html$Html$Attributes$style, 'color', color)
		]);
};
var $author$project$Pipeline$PinMenu$PinMenu$viewTitle = function (title) {
	return A2(
		$elm$html$Html$div,
		$author$project$Pipeline$PinMenu$Styles$title(title),
		_List_fromArray(
			[
				$elm$html$Html$text(title.fw)
			]));
};
var $author$project$Pipeline$PinMenu$PinMenu$viewDropdownItem = function (item) {
	return A2(
		$elm$html$Html$li,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Events$onClick(item.cX),
			_Utils_ap(
				item.ge ? _List_fromArray(
					[
						$elm$html$Html$Events$onMouseEnter(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(
								$author$project$Message$Message$PinMenuDropDown(item.hW.fw)))),
						$elm$html$Html$Events$onMouseLeave(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
					]) : _List_Nil,
				$author$project$Pipeline$PinMenu$Styles$pinIconDropdownItem(item))),
		_List_fromArray(
			[
				$author$project$Pipeline$PinMenu$PinMenu$viewTitle(item.hW),
				A2(
				$elm$html$Html$table,
				_List_Nil,
				A2($elm$core$List$map, $author$project$Pipeline$PinMenu$PinMenu$viewTableRow, item.df))
			]));
};
var $author$project$Pipeline$PinMenu$PinMenu$viewDropdown = function (dropdown) {
	return A2(
		$elm$html$Html$ul,
		$author$project$Pipeline$PinMenu$Styles$pinIconDropdown(dropdown),
		A2($elm$core$List$map, $author$project$Pipeline$PinMenu$PinMenu$viewDropdownItem, dropdown.cN));
};
var $author$project$Pipeline$PinMenu$PinMenu$viewView = function (view) {
	return A2(
		$elm$html$Html$div,
		_Utils_ap(
			A2(
				$elm$core$List$map,
				$elm$core$Tuple$first,
				A2(
					$elm$core$List$filter,
					$elm$core$Tuple$second,
					_List_fromArray(
						[
							_Utils_Tuple2(
							$elm$html$Html$Attributes$id('pin-icon'),
							true),
							_Utils_Tuple2(
							$elm$html$Html$Events$onMouseEnter(
								$author$project$Message$Message$Hover(
									$elm$core$Maybe$Just($author$project$Message$Message$PinIcon))),
							view.ge),
							_Utils_Tuple2(
							$elm$html$Html$Events$onMouseLeave(
								$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
							view.ge),
							_Utils_Tuple2(
							$elm$html$Html$Events$onClick(
								$author$project$Message$Message$Click($author$project$Message$Message$PinIcon)),
							view.cp)
						]))),
			$author$project$Pipeline$PinMenu$Styles$pinIconBackground(view)),
		A2(
			$elm$core$List$cons,
			A2(
				$elm$html$Html$div,
				$author$project$Pipeline$PinMenu$Styles$pinIcon(view),
				_List_Nil),
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2($elm$core$Maybe$map, $author$project$Pipeline$PinMenu$PinMenu$viewBadge, view.co),
						A2($elm$core$Maybe$map, $author$project$Pipeline$PinMenu$PinMenu$viewDropdown, view.dK)
					]))));
};
var $author$project$Pipeline$PinMenu$PinMenu$viewPinMenu = F2(
	function (session, m) {
		return $author$project$Pipeline$PinMenu$PinMenu$viewView(
			A2($author$project$Pipeline$PinMenu$PinMenu$pinMenu, session, m));
	});
var $fapian$elm_html_aria$Html$Attributes$Aria$ariaLabel = $elm$html$Html$Attributes$attribute('aria-label');
var $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');
var $author$project$Pipeline$Styles$cliIcon = function (cli) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'width', '12px'),
			A2($elm$html$Html$Attributes$style, 'height', '12px'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				$elm$core$Maybe$Just(
					$author$project$Assets$CliIcon(cli)))),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2($elm$html$Html$Attributes$style, 'display', 'inline-block')
		]);
};
var $elm$html$Html$dd = _VirtualDom_node('dd');
var $elm$html$Html$dl = _VirtualDom_node('dl');
var $elm$html$Html$dt = _VirtualDom_node('dt');
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $author$project$Colors$groupsBarBackground = '#2b2a2a';
var $author$project$Pipeline$Styles$groupsBar = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$groupsBarBackground),
		A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$dashboardText),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'flex-flow', 'row wrap'),
		A2($elm$html$Html$Attributes$style, 'padding', '5px')
	]);
var $author$project$Pipeline$Pipeline$selectedGroupsOrDefault = function (model) {
	return $elm$core$List$isEmpty(model.D) ? $author$project$Pipeline$Pipeline$getDefaultSelectedGroups(model.az) : model.D;
};
var $author$project$Message$Message$JobGroup = function (a) {
	return {$: 27, a: a};
};
var $author$project$Message$Message$SetGroups = function (a) {
	return {$: 4, a: a};
};
var $author$project$Message$Message$ToggleGroup = function (a) {
	return {$: 3, a: a};
};
var $author$project$Colors$groupBackground = 'rgba(151, 151, 151, 0.1)';
var $author$project$Colors$groupBorderHovered = '#fff2';
var $author$project$Colors$groupBorderSelected = '#979797';
var $author$project$Colors$groupBorderUnselected = '#2b2a2a';
var $author$project$Pipeline$Styles$groupItem = function (_v0) {
	var selected = _v0.hw;
	var hovered = _v0.d0;
	return _Utils_ap(
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'font-size', '14px'),
				A2($elm$html$Html$Attributes$style, 'background', $author$project$Colors$groupBackground),
				A2($elm$html$Html$Attributes$style, 'margin', '5px'),
				A2($elm$html$Html$Attributes$style, 'padding', '10px')
			]),
		selected ? _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'opacity', '1'),
				A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + $author$project$Colors$groupBorderSelected)
			]) : (hovered ? _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'opacity', '0.6'),
				A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + $author$project$Colors$groupBorderHovered)
			]) : _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'opacity', '0.6'),
				A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + $author$project$Colors$groupBorderUnselected)
			])));
};
var $author$project$Pipeline$Pipeline$viewGroup = F3(
	function (_v0, idx, grp) {
		var selectedGroups = _v0.D;
		var pipelineLocator = _v0.hd;
		var hovered = _v0.d0;
		var url = $author$project$Routes$toString(
			$author$project$Routes$Pipeline(
				{
					bP: _List_fromArray(
						[grp.bX]),
					L: pipelineLocator
				}));
		return A2(
			$elm$html$Html$a,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$href(url),
						A2(
						$author$project$StrictEvents$onLeftClickOrShiftLeftClick,
						$author$project$Message$Message$SetGroups(
							_List_fromArray(
								[grp.bX])),
						$author$project$Message$Message$ToggleGroup(grp)),
						$elm$html$Html$Events$onMouseEnter(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(
								$author$project$Message$Message$JobGroup(idx)))),
						$elm$html$Html$Events$onMouseLeave(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
					]),
				$author$project$Pipeline$Styles$groupItem(
					{
						d0: A2(
							$author$project$HoverState$isHovered,
							$author$project$Message$Message$JobGroup(idx),
							hovered),
						hw: A2($elm$core$List$member, grp.bX, selectedGroups)
					})),
			_List_fromArray(
				[
					$elm$html$Html$text(grp.bX)
				]));
	});
var $author$project$Pipeline$Pipeline$viewGroupsBar = F2(
	function (session, model) {
		var groupList = function () {
			var _v0 = model.az;
			if (_v0.$ === 3) {
				var pipeline = _v0.a;
				return A2(
					$elm$core$List$indexedMap,
					$author$project$Pipeline$Pipeline$viewGroup(
						{
							d0: session.d0,
							hd: model.hd,
							D: $author$project$Pipeline$Pipeline$selectedGroupsOrDefault(model)
						}),
					pipeline.bP);
			} else {
				return _List_Nil;
			}
		}();
		return $elm$core$List$isEmpty(groupList) ? $elm$html$Html$text('') : A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('groups-bar'),
				$author$project$Pipeline$Styles$groupsBar),
			groupList);
	});
var $author$project$Pipeline$Pipeline$viewSubPage = F2(
	function (session, model) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('pipeline-view'),
					$elm$html$Html$Attributes$id('pipeline-container'),
					A2($elm$html$Html$Attributes$style, 'display', 'flex'),
					A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
					A2($elm$html$Html$Attributes$style, 'flex-grow', '1')
				]),
			_List_fromArray(
				[
					A2($author$project$Pipeline$Pipeline$viewGroupsBar, session, model),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('pipeline-content')
						]),
					_List_fromArray(
						[
							A2(
							$elm$svg$Svg$svg,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$class('pipeline-graph test')
								]),
							_List_Nil),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									model.P ? $elm$html$Html$Attributes$class('error-message') : $elm$html$Html$Attributes$class('error-message hidden')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('message')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$img,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$src(model.dk),
													$elm$html$Html$Attributes$class('seatbelt')
												]),
											_List_Nil),
											A2(
											$elm$html$Html$p,
											_List_Nil,
											_List_fromArray(
												[
													$elm$html$Html$text('experiencing turbulence')
												])),
											A2(
											$elm$html$Html$p,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('explanation')
												]),
											_List_Nil)
										]))
								])),
							model.ga ? $elm$html$Html$text('') : A2(
							$elm$html$Html$dl,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id('legend'),
									$elm$html$Html$Attributes$class('legend')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('succeeded')
										]),
									_List_Nil),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('succeeded')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('errored')
										]),
									_List_Nil),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('errored')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('aborted')
										]),
									_List_Nil),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('aborted')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('paused')
										]),
									_List_Nil),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('paused')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$pinned)
										]),
									_List_Nil),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('pinned')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('failed')
										]),
									_List_Nil),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('failed')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('pending')
										]),
									_List_Nil),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('pending')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('started')
										]),
									_List_Nil),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('started')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('dotted')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('.')
										])),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('dependency')
										])),
									A2(
									$elm$html$Html$dt,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('solid')
										]),
									_List_fromArray(
										[
											$elm$html$Html$text('-')
										])),
									A2(
									$elm$html$Html$dd,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text('dependency (trigger)')
										]))
								])),
							A2(
							$elm$html$Html$table,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('lower-right-info')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$tr,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											$elm$html$Html$td,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('label')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('cli:')
												])),
											A2(
											$elm$html$Html$td,
											_List_Nil,
											_List_fromArray(
												[
													A2(
													$elm$html$Html$ul,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('cli-downloads')
														]),
													A2(
														$elm$core$List$map,
														function (cli) {
															return A2(
																$elm$html$Html$li,
																_List_Nil,
																_List_fromArray(
																	[
																		A2(
																		$elm$html$Html$a,
																		_Utils_ap(
																			_List_fromArray(
																				[
																					$elm$html$Html$Attributes$href(
																					$author$project$Concourse$Cli$downloadUrl(cli)),
																					$fapian$elm_html_aria$Html$Attributes$Aria$ariaLabel(
																					$author$project$Concourse$Cli$label(cli)),
																					$elm$html$Html$Attributes$download('')
																				]),
																			$author$project$Pipeline$Styles$cliIcon(cli)),
																		_List_Nil)
																	]));
														},
														$author$project$Concourse$Cli$clis))
												]))
										])),
									A2(
									$elm$html$Html$tr,
									_List_Nil,
									_List_fromArray(
										[
											A2(
											$elm$html$Html$td,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('label')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text('version:')
												])),
											A2(
											$elm$html$Html$td,
											_List_Nil,
											_List_fromArray(
												[
													A2(
													$elm$html$Html$div,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$id('concourse-version')
														]),
													_List_fromArray(
														[
															$elm$html$Html$text('v'),
															A2(
															$elm$html$Html$span,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('number')
																]),
															_List_fromArray(
																[
																	$elm$html$Html$text(session.dn)
																]))
														]))
												]))
										]))
								]))
						]))
				]));
	});
var $author$project$Pipeline$Pipeline$view = F2(
	function (session, model) {
		var route = $author$project$Routes$Pipeline(
			{bP: model.D, L: model.hd});
		var displayPaused = $author$project$Pipeline$Pipeline$isPaused(model.az) && (!$author$project$Pipeline$Pipeline$isArchived(model.az));
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'height', '100%')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('page-including-top-bar'),
						$author$project$Views$Styles$pageIncludingTopBar),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$id('top-bar-app'),
								$author$project$Views$Styles$topBar(displayPaused)),
							_List_fromArray(
								[
									$author$project$SideBar$SideBar$hamburgerMenu(session),
									$author$project$Views$TopBar$concourseLogo,
									$author$project$Views$TopBar$breadcrumbs(route),
									A2($author$project$Pipeline$PinMenu$PinMenu$viewPinMenu, session, model),
									A2(
									$elm$html$Html$div,
									A2(
										$elm$core$List$cons,
										$elm$html$Html$Attributes$id('top-bar-favorited-icon'),
										$author$project$Pipeline$Styles$favoritedIcon),
									_List_fromArray(
										[
											A2(
											$author$project$Views$FavoritedIcon$view,
											{
												dI: $author$project$Message$Message$TopBarFavoritedIcon(
													$author$project$Pipeline$Pipeline$getPipelineId(model.az)),
												gv: A2(
													$elm$core$Set$member,
													$author$project$Pipeline$Pipeline$getPipelineId(model.az),
													session.fX),
												gx: A2(
													$author$project$HoverState$isHovered,
													$author$project$Message$Message$TopBarFavoritedIcon(
														$author$project$Pipeline$Pipeline$getPipelineId(model.az)),
													session.d0)
											},
											_List_fromArray(
												[
													A2($elm$html$Html$Attributes$style, 'margin', '17px')
												]))
										])),
									$author$project$Pipeline$Pipeline$isArchived(model.az) ? $elm$html$Html$text('') : A2(
									$elm$html$Html$div,
									A2(
										$elm$core$List$cons,
										$elm$html$Html$Attributes$id('top-bar-pause-toggle'),
										$author$project$Pipeline$Styles$pauseToggle),
									_List_fromArray(
										[
											$author$project$Views$PauseToggle$view(
											{
												dI: $author$project$Message$Message$TopBarPauseToggle(model.hd),
												gz: $author$project$Pipeline$Pipeline$isPaused(model.az),
												gC: A2(
													$author$project$HoverState$isHovered,
													$author$project$Message$Message$TopBarPauseToggle(model.hd),
													session.d0),
												d5: model.d5,
												ef: '17px',
												az: model.hd,
												h1: 1,
												bB: session.bB
											})
										])),
									A2($author$project$Login$Login$view, session.bB, model)
								])),
							A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$id('page-below-top-bar'),
								$author$project$Views$Styles$pageBelowTopBar(route)),
							_List_fromArray(
								[
									A2(
									$author$project$SideBar$SideBar$view,
									session,
									$elm$core$Maybe$Just(model.hd)),
									A2($author$project$Pipeline$Pipeline$viewSubPage, session, model)
								]))
						]))
				]));
	});
var $author$project$Resource$Styles$body = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'padding', '10px'),
		A2($elm$html$Html$Attributes$style, 'overflow-y', 'auto'),
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1')
	]);
var $author$project$Colors$sectionHeader = '#1e1d1d';
var $author$project$Resource$Styles$checkBarStatus = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'space-between'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
		A2($elm$html$Html$Attributes$style, 'height', '28px'),
		A2($elm$html$Html$Attributes$style, 'background', $author$project$Colors$sectionHeader),
		A2($elm$html$Html$Attributes$style, 'padding-left', '5px')
	]);
var $author$project$Message$Message$CheckButton = function (a) {
	return {$: 6, a: a};
};
var $author$project$Assets$RefreshIcon = {$: 31};
var $author$project$Resource$Styles$checkButton = function (isClickable) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'height', '28px'),
			A2($elm$html$Html$Attributes$style, 'width', '28px'),
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$sectionHeader),
			A2($elm$html$Html$Attributes$style, 'margin-right', '5px'),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			isClickable ? 'pointer' : 'default')
		]);
};
var $author$project$Resource$Styles$checkButtonIcon = function (isHighlighted) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'margin', '4px'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2(
			$elm$html$Html$Attributes$style,
			'opacity',
			isHighlighted ? '1' : '0.5')
		]);
};
var $author$project$Resource$Resource$checkButton = function (params) {
	var hovered = params.d0;
	var userState = params.bB;
	var checkStatus = params.J;
	var isMember = $author$project$UserState$isMember(params);
	var isHovered = A2(
		$author$project$HoverState$isHovered,
		$author$project$Message$Message$CheckButton(isMember),
		hovered);
	var isCurrentlyChecking = function () {
		switch (checkStatus.$) {
			case 2:
				return true;
			case 1:
				return true;
			default:
				return false;
		}
	}();
	var isAnonymous = $author$project$UserState$isAnonymous(userState);
	var isClickable = (isAnonymous || isMember) && (!isCurrentlyChecking);
	var isHighlighted = (isClickable && isHovered) || isCurrentlyChecking;
	return A2(
		$elm$html$Html$div,
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Events$onMouseEnter(
					$author$project$Message$Message$Hover(
						$elm$core$Maybe$Just(
							$author$project$Message$Message$CheckButton(isMember)))),
					$elm$html$Html$Events$onMouseLeave(
					$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
				]),
			_Utils_ap(
				$author$project$Resource$Styles$checkButton(isClickable),
				isClickable ? _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							$author$project$Message$Message$CheckButton(isMember)))
					]) : _List_Nil)),
		_List_fromArray(
			[
				A2(
				$author$project$Views$Icon$icon,
				{d1: $author$project$Assets$RefreshIcon, cg: 20},
				$author$project$Resource$Styles$checkButtonIcon(isHighlighted))
			]));
};
var $author$project$Resource$Styles$checkStatusIcon = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-size', '14px 14px')
	]);
var $author$project$Resource$Resource$checkSection = function (model) {
	var checkStatus = model.J;
	var checkSetupError = model.fm;
	var checkError = model.dv;
	var failingToCheck = _Utils_eq(checkStatus, $author$project$Resource$Models$FailingToCheck);
	var statusIcon = function () {
		switch (checkStatus.$) {
			case 2:
				return $author$project$Views$Spinner$spinner(
					{ef: '7px', cg: 14});
			case 1:
				return $author$project$Views$Spinner$spinner(
					{ef: '7px', cg: 14});
			default:
				return A2(
					$author$project$Views$Icon$icon,
					{
						d1: failingToCheck ? $author$project$Assets$ExclamationTriangleIcon : $author$project$Assets$SuccessCheckIcon,
						cg: 28
					},
					$author$project$Resource$Styles$checkStatusIcon);
		}
	}();
	var stepBody = failingToCheck ? ((!$elm$core$String$isEmpty(checkSetupError)) ? _List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('step-body')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$pre,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(checkSetupError)
						]))
				]))
		]) : _List_fromArray(
		[
			A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('step-body')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$pre,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(checkError)
						]))
				]))
		])) : _List_Nil;
	var checkMessage = function () {
		switch (checkStatus.$) {
			case 3:
				return 'check failed';
			case 1:
				return 'check pending';
			case 2:
				return 'check in progress';
			default:
				return 'checked successfully';
		}
	}();
	var statusBar = A2(
		$elm$html$Html$div,
		$author$project$Resource$Styles$checkBarStatus,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$h3,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(checkMessage)
					])),
				statusIcon
			]));
	var checkBar = A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'display', 'flex')
			]),
		_List_fromArray(
			[
				$author$project$Resource$Resource$checkButton(model),
				statusBar
			]));
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('resource-check-status')
			]),
		A2($elm$core$List$cons, checkBar, stepBody));
};
var $author$project$Resource$Resource$isPipelineArchived = F2(
	function (pipelines, _v0) {
		var pipelineName = _v0.c_;
		var teamName = _v0.dh;
		return A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.e5;
				},
				A2(
					$elm_community$list_extra$List$Extra$find,
					function (p) {
						return _Utils_eq(p.bX, pipelineName) && _Utils_eq(p.dh, teamName);
					},
					A2($krisajenkins$remotedata$RemoteData$withDefault, _List_Nil, pipelines))));
	});
var $author$project$Message$Message$BlurTextArea = {$: 12};
var $author$project$Message$Message$EditComment = function (a) {
	return {$: 10, a: a};
};
var $author$project$Message$Message$FocusTextArea = {$: 11};
var $author$project$Assets$MessageIcon = {$: 32};
var $author$project$Colors$pinTools = '#2e2c2c';
var $author$project$Resource$Styles$commentBar = function (isPinned) {
	var commentBarBorderColor = isPinned ? $author$project$Colors$pinned : $author$project$Colors$background;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$pinTools),
			A2($elm$html$Html$Attributes$style, 'min-height', '25px'),
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'flex', '1'),
			A2($elm$html$Html$Attributes$style, 'border', '1px solid' + commentBarBorderColor)
		]);
};
var $author$project$Resource$Styles$commentBarIconContainer = function (isEditing) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'flex-start'),
			A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			isEditing ? $author$project$Colors$pinned : $author$project$Colors$pinTools)
		]);
};
var $author$project$Resource$Styles$commentBarMessageIcon = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
		A2($elm$html$Html$Attributes$style, 'margin', '10px'),
		A2($elm$html$Html$Attributes$style, 'flex-shrink', '0'),
		A2($elm$html$Html$Attributes$style, 'background-origin', 'content-box')
	]);
var $author$project$Resource$Styles$commentText = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
		A2($elm$html$Html$Attributes$style, 'margin', '0'),
		A2($elm$html$Html$Attributes$style, 'outline', '0'),
		A2($elm$html$Html$Attributes$style, 'padding', '8px 0'),
		A2($elm$html$Html$Attributes$style, 'max-height', '150px'),
		A2($elm$html$Html$Attributes$style, 'overflow-y', 'scroll')
	]);
var $elm$html$Html$Attributes$rows = function (n) {
	return A2(
		_VirtualDom_attribute,
		'rows',
		$elm$core$String$fromInt(n));
};
var $author$project$Resource$Styles$commentTextArea = _Utils_ap(
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
			A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
			A2($elm$html$Html$Attributes$style, 'resize', 'none'),
			A2($elm$html$Html$Attributes$style, 'outline', 'none'),
			A2($elm$html$Html$Attributes$style, 'border', 'none'),
			A2($elm$html$Html$Attributes$style, 'color', $author$project$Colors$text),
			A2($elm$html$Html$Attributes$style, 'background-color', 'transparent'),
			A2($elm$html$Html$Attributes$style, 'max-height', '150px'),
			A2($elm$html$Html$Attributes$style, 'margin', '8px 0'),
			$elm$html$Html$Attributes$rows(1)
		]),
	$author$project$Views$Styles$defaultFont);
var $author$project$Message$Message$EditButton = {$: 7};
var $author$project$Assets$PencilIcon = {$: 39};
var $author$project$Resource$Styles$editButton = function (isHovered) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'padding', '5px'),
			A2($elm$html$Html$Attributes$style, 'margin', '5px'),
			A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
			A2(
			$elm$html$Html$Attributes$style,
			'background-color',
			isHovered ? $author$project$Colors$sectionHeader : $author$project$Colors$pinTools),
			A2($elm$html$Html$Attributes$style, 'background-origin', 'content-box'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain')
		]);
};
var $author$project$Resource$Resource$editButton = function (session) {
	return A2(
		$author$project$Views$Icon$icon,
		{d1: $author$project$Assets$PencilIcon, cg: 16},
		_Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('edit-button'),
					$elm$html$Html$Events$onMouseEnter(
					$author$project$Message$Message$Hover(
						$elm$core$Maybe$Just($author$project$Message$Message$EditButton))),
					$elm$html$Html$Events$onMouseLeave(
					$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
					$elm$html$Html$Events$onClick(
					$author$project$Message$Message$Click($author$project$Message$Message$EditButton))
				]),
			$author$project$Resource$Styles$editButton(
				A2($author$project$HoverState$isHovered, $author$project$Message$Message$EditButton, session.d0))));
};
var $author$project$Resource$Styles$editSaveWrapper = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'width', '60px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'flex-end')
	]);
var $elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $elm$html$Html$Attributes$readonly = $elm$html$Html$Attributes$boolProperty('readOnly');
var $author$project$Message$Message$SaveCommentButton = {$: 8};
var $author$project$Colors$buttonDisabledGrey = '#979797';
var $author$project$Resource$Styles$commentSaveButton = function (_v0) {
	var commentChanged = _v0.fu;
	var isHovered = _v0.gx;
	var pinCommentLoading = _v0.bo;
	return _Utils_ap(
		_List_fromArray(
			[
				A2(
				$elm$html$Html$Attributes$style,
				'border',
				'1px solid ' + ((commentChanged && (!pinCommentLoading)) ? $author$project$Colors$white : $author$project$Colors$buttonDisabledGrey)),
				A2(
				$elm$html$Html$Attributes$style,
				'background-color',
				(isHovered && (commentChanged && (!pinCommentLoading))) ? $author$project$Colors$frame : 'transparent'),
				A2(
				$elm$html$Html$Attributes$style,
				'color',
				(commentChanged && (!pinCommentLoading)) ? $author$project$Colors$text : $author$project$Colors$buttonDisabledGrey),
				A2($elm$html$Html$Attributes$style, 'padding', '5px 10px'),
				A2($elm$html$Html$Attributes$style, 'margin', '5px 5px 7px 7px'),
				A2($elm$html$Html$Attributes$style, 'outline', 'none'),
				A2($elm$html$Html$Attributes$style, 'transition', 'border 200ms ease, color 200ms ease'),
				A2(
				$elm$html$Html$Attributes$style,
				'cursor',
				(commentChanged && (!pinCommentLoading)) ? 'pointer' : 'default')
			]),
		$author$project$Views$Styles$defaultFont);
};
var $author$project$Resource$Resource$saveButton = F3(
	function (commentState, pinCommentLoading, hovered) {
		return A2(
			$elm$html$Html$button,
			function () {
				var commentChanged = !_Utils_eq(commentState.dx, commentState.ex);
				return _Utils_ap(
					_List_fromArray(
						[
							$elm$html$Html$Attributes$id('save-button'),
							$elm$html$Html$Events$onMouseEnter(
							$author$project$Message$Message$Hover(
								$elm$core$Maybe$Just($author$project$Message$Message$SaveCommentButton))),
							$elm$html$Html$Events$onMouseLeave(
							$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
							$elm$html$Html$Events$onClick(
							$author$project$Message$Message$Click($author$project$Message$Message$SaveCommentButton))
						]),
					$author$project$Resource$Styles$commentSaveButton(
						{
							fu: commentChanged,
							gx: A2($author$project$HoverState$isHovered, $author$project$Message$Message$SaveCommentButton, hovered),
							bo: pinCommentLoading
						}));
			}(),
			pinCommentLoading ? _List_fromArray(
				[
					$author$project$Views$Spinner$spinner(
					{ef: '0', cg: 12})
				]) : _List_fromArray(
				[
					$elm$html$Html$text('save')
				]));
	});
var $elm$html$Html$textarea = _VirtualDom_node('textarea');
var $author$project$Resource$Resource$commentBar = F2(
	function (session, _v0) {
		var resourceIdentifier = _v0.hj;
		var pinnedVersion = _v0.hc;
		var pinCommentLoading = _v0.bo;
		var isEditing = _v0.bQ;
		if (pinnedVersion.$ === 2) {
			var commentState = pinnedVersion.a;
			return A2(
				$elm$html$Html$div,
				A2(
					$elm$core$List$cons,
					$elm$html$Html$Attributes$id('comment-bar'),
					$author$project$Resource$Styles$commentBar(true)),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						A2(
							$elm$core$List$cons,
							$elm$html$Html$Attributes$id('icon-container'),
							$author$project$Resource$Styles$commentBarIconContainer(isEditing)),
						A2(
							$elm$core$List$cons,
							A2(
								$author$project$Views$Icon$icon,
								{d1: $author$project$Assets$MessageIcon, cg: 16},
								$author$project$Resource$Styles$commentBarMessageIcon),
							($author$project$UserState$isMember(
								{dh: resourceIdentifier.dh, bB: session.bB}) && (!A2($author$project$Resource$Resource$isPipelineArchived, session.he, resourceIdentifier))) ? _List_fromArray(
								[
									A2(
									$elm$html$Html$textarea,
									_Utils_ap(
										_List_fromArray(
											[
												$elm$html$Html$Attributes$id(
												$author$project$Message$Effects$toHtmlID($author$project$Message$Message$ResourceCommentTextarea)),
												$elm$html$Html$Attributes$value(commentState.dx),
												$elm$html$Html$Events$onInput($author$project$Message$Message$EditComment),
												$elm$html$Html$Events$onFocus($author$project$Message$Message$FocusTextArea),
												$elm$html$Html$Events$onBlur($author$project$Message$Message$BlurTextArea),
												$elm$html$Html$Attributes$readonly(!isEditing)
											]),
										$author$project$Resource$Styles$commentTextArea),
									_List_Nil),
									A2(
									$elm$html$Html$div,
									A2(
										$elm$core$List$cons,
										$elm$html$Html$Attributes$id('edit-save-wrapper'),
										$author$project$Resource$Styles$editSaveWrapper),
									(!isEditing) ? _List_fromArray(
										[
											$author$project$Resource$Resource$editButton(session)
										]) : _List_fromArray(
										[
											A3($author$project$Resource$Resource$saveButton, commentState, pinCommentLoading, session.d0)
										]))
								]) : _List_fromArray(
								[
									A2(
									$elm$html$Html$pre,
									$author$project$Resource$Styles$commentText,
									_List_fromArray(
										[
											$elm$html$Html$text(commentState.ex)
										]))
								])))
					]));
		} else {
			return $elm$html$Html$text('');
		}
	});
var $elm_community$maybe_extra$Maybe$Extra$isJust = function (m) {
	if (m.$ === 1) {
		return false;
	} else {
		return true;
	}
};
var $author$project$Message$Message$PinBar = {$: 15};
var $author$project$Assets$PinIconGrey = {$: 8};
var $author$project$Resource$Styles$pinBar = function (isPinned) {
	var pinBarBorderColor = isPinned ? $author$project$Colors$pinned : $author$project$Colors$background;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'flex-start'),
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$pinTools),
			A2($elm$html$Html$Attributes$style, 'border', '1px solid' + pinBarBorderColor),
			A2($elm$html$Html$Attributes$style, 'flex', '1')
		]);
};
var $author$project$Resource$Styles$pinBarTooltip = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
		A2($elm$html$Html$Attributes$style, 'top', '-10px'),
		A2($elm$html$Html$Attributes$style, 'left', '30px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$tooltipBackground),
		A2($elm$html$Html$Attributes$style, 'padding', '5px'),
		A2($elm$html$Html$Attributes$style, 'z-index', '2')
	]);
var $author$project$Resource$Styles$pinBarViewVersion = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'margin', '8px 8px 8px 0')
	]);
var $author$project$Resource$Styles$pinIcon = function (_v0) {
	var clickable = _v0.cp;
	var hover = _v0.gd;
	var cursorType = clickable ? 'pointer' : 'default';
	var backgroundColor = hover ? $author$project$Colors$pinIconHover : 'transparent';
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'margin', '4px 5px 5px 5px'),
			A2($elm$html$Html$Attributes$style, 'cursor', cursorType),
			A2($elm$html$Html$Attributes$style, 'background-color', backgroundColor),
			A2($elm$html$Html$Attributes$style, 'padding', '6px'),
			A2($elm$html$Html$Attributes$style, 'background-size', 'contain'),
			A2($elm$html$Html$Attributes$style, 'background-origin', 'content-box'),
			A2($elm$html$Html$Attributes$style, 'min-width', '14px'),
			A2($elm$html$Html$Attributes$style, 'min-height', '14px')
		]);
};
var $author$project$Pinned$stable = function (version) {
	switch (version.$) {
		case 4:
			var v = version.a;
			return $elm$core$Maybe$Just(v);
		case 2:
			var v = version.b;
			return $elm$core$Maybe$Just(v);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Resource$Resource$viewVersion = F2(
	function (attrs, version) {
		return A2(
			$author$project$Views$DictView$view,
			attrs,
			A2(
				$elm$core$Dict$map,
				$elm$core$Basics$always($elm$html$Html$text),
				version));
	});
var $author$project$Resource$Resource$pinBar = F2(
	function (_v0, _v1) {
		var hovered = _v0.d0;
		var pipelines = _v0.he;
		var pinnedVersion = _v1.hc;
		var resourceIdentifier = _v1.hj;
		var pinBarVersion = $author$project$Pinned$stable(pinnedVersion);
		var isPinnedStatically = function () {
			if (pinnedVersion.$ === 4) {
				return true;
			} else {
				return false;
			}
		}();
		var isPinnedDynamically = function () {
			if (pinnedVersion.$ === 2) {
				return true;
			} else {
				return false;
			}
		}();
		var attrList = A2(
			$elm$core$Basics$composeR,
			$elm$core$List$filter($elm$core$Tuple$second),
			$elm$core$List$map($elm$core$Tuple$first));
		var archived = A2($author$project$Resource$Resource$isPipelineArchived, pipelines, resourceIdentifier);
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				attrList(
					_List_fromArray(
						[
							_Utils_Tuple2(
							$elm$html$Html$Attributes$id('pin-bar'),
							true),
							_Utils_Tuple2(
							$elm$html$Html$Events$onMouseEnter(
								$author$project$Message$Message$Hover(
									$elm$core$Maybe$Just($author$project$Message$Message$PinBar))),
							isPinnedStatically),
							_Utils_Tuple2(
							$elm$html$Html$Events$onMouseLeave(
								$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
							isPinnedStatically)
						])),
				$author$project$Resource$Styles$pinBar(
					$elm_community$maybe_extra$Maybe$Extra$isJust(pinBarVersion))),
			A2(
				$elm$core$List$cons,
				A2(
					$author$project$Views$Icon$icon,
					{
						d1: $elm_community$maybe_extra$Maybe$Extra$isJust(pinBarVersion) ? $author$project$Assets$PinIconWhite : $author$project$Assets$PinIconGrey,
						cg: 14
					},
					_Utils_ap(
						attrList(
							_List_fromArray(
								[
									_Utils_Tuple2(
									$elm$html$Html$Attributes$id('pin-icon'),
									true),
									_Utils_Tuple2(
									$elm$html$Html$Events$onClick(
										$author$project$Message$Message$Click($author$project$Message$Message$PinIcon)),
									isPinnedDynamically && (!archived)),
									_Utils_Tuple2(
									$elm$html$Html$Events$onMouseEnter(
										$author$project$Message$Message$Hover(
											$elm$core$Maybe$Just($author$project$Message$Message$PinIcon))),
									isPinnedDynamically && (!archived)),
									_Utils_Tuple2(
									$elm$html$Html$Events$onMouseLeave(
										$author$project$Message$Message$Hover($elm$core$Maybe$Nothing)),
									true)
								])),
						$author$project$Resource$Styles$pinIcon(
							{
								cp: isPinnedDynamically && (!archived),
								gd: A2($author$project$HoverState$isHovered, $author$project$Message$Message$PinIcon, hovered)
							}))),
				_Utils_ap(
					function () {
						if (!pinBarVersion.$) {
							var v = pinBarVersion.a;
							return _List_fromArray(
								[
									A2($author$project$Resource$Resource$viewVersion, $author$project$Resource$Styles$pinBarViewVersion, v)
								]);
						} else {
							return _List_Nil;
						}
					}(),
					A2($author$project$HoverState$isHovered, $author$project$Message$Message$PinBar, hovered) ? _List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							A2(
								$elm$core$List$cons,
								$elm$html$Html$Attributes$id('pin-bar-tooltip'),
								$author$project$Resource$Styles$pinBarTooltip),
							_List_fromArray(
								[
									$elm$html$Html$text('pinned in pipeline config')
								]))
						]) : _List_Nil)));
	});
var $author$project$Resource$Styles$pinTools = function (isPinned) {
	var pinToolsBorderColor = isPinned ? $author$project$Colors$pinned : $author$project$Colors$background;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$pinTools),
			A2($elm$html$Html$Attributes$style, 'min-height', '28px'),
			A2($elm$html$Html$Attributes$style, 'margin-bottom', '24px'),
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'stretch'),
			A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + pinToolsBorderColor),
			A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box')
		]);
};
var $author$project$Resource$Resource$pinTools = F2(
	function (session, model) {
		var pinBarVersion = $author$project$Pinned$stable(model.hc);
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('pin-tools'),
				$author$project$Resource$Styles$pinTools(
					$elm_community$maybe_extra$Maybe$Extra$isJust(pinBarVersion))),
			_List_fromArray(
				[
					A2($author$project$Resource$Resource$pinBar, session, model),
					A2($author$project$Resource$Resource$commentBar, session, model)
				]));
	});
var $author$project$Pinned$PinnedStatically = function (a) {
	return {$: 3, a: a};
};
var $author$project$Pinned$Disabled = {$: 4};
var $author$project$Pinned$Enabled = {$: 0};
var $author$project$Pinned$InTransition = {$: 5};
var $author$project$Pinned$NotThePinnedVersion = {$: 2};
var $author$project$Pinned$PinnedDynamically = {$: 1};
var $author$project$Pinned$pinState = F3(
	function (version, id, resourcePinState) {
		switch (resourcePinState.$) {
			case 4:
				var v = resourcePinState.a;
				return _Utils_eq(v, version) ? $author$project$Pinned$PinnedStatically(false) : $author$project$Pinned$Disabled;
			case 0:
				return $author$project$Pinned$Enabled;
			case 1:
				var destination = resourcePinState.a;
				return _Utils_eq(destination, id) ? $author$project$Pinned$InTransition : $author$project$Pinned$Disabled;
			case 2:
				var v = resourcePinState.b;
				return _Utils_eq(v, version) ? $author$project$Pinned$PinnedDynamically : $author$project$Pinned$NotThePinnedVersion;
			case 3:
				var v = resourcePinState.b;
				return _Utils_eq(v, version) ? $author$project$Pinned$InTransition : $author$project$Pinned$Disabled;
			default:
				var v = resourcePinState.b;
				var destination = resourcePinState.c;
				return (_Utils_eq(destination, id) || _Utils_eq(v, version)) ? $author$project$Pinned$InTransition : $author$project$Pinned$Disabled;
		}
	});
var $author$project$Resource$Resource$versions = function (model) {
	return A2(
		$elm$core$List$map,
		function (v) {
			return {
				fJ: v.fJ,
				fQ: v.fQ,
				L: v.L,
				gn: v.gn,
				gN: v.gN,
				g4: v.g4,
				_: function () {
					var _v0 = A3($author$project$Pinned$pinState, v.dn, v.L, model.hc);
					if (_v0.$ === 3) {
						return $author$project$Pinned$PinnedStatically(v.hy);
					} else {
						var x = _v0;
						return x;
					}
				}(),
				dn: v.dn
			};
		},
		model.r.fw);
};
var $author$project$Message$Message$VersionToggle = function (a) {
	return {$: 38, a: a};
};
var $author$project$Assets$CheckmarkIcon = {$: 9};
var $author$project$Resource$Styles$borderColor = function (pinnedState) {
	switch (pinnedState.$) {
		case 3:
			return $author$project$Colors$pinned;
		case 1:
			return $author$project$Colors$pinned;
		default:
			return $author$project$Colors$sectionHeader;
	}
};
var $author$project$Resource$Styles$enabledCheckbox = function (_v0) {
	var enabled = _v0.fJ;
	var pinState = _v0._;
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'margin-right', '5px'),
			A2($elm$html$Html$Attributes$style, 'width', '25px'),
			A2($elm$html$Html$Attributes$style, 'height', '25px'),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
			A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
			A2(
			$elm$html$Html$Attributes$style,
			'border',
			'1px solid ' + $author$project$Resource$Styles$borderColor(pinState)),
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$sectionHeader),
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				function () {
					switch (enabled) {
						case 0:
							return $elm$core$Maybe$Just($author$project$Assets$CheckmarkIcon);
						case 1:
							return $elm$core$Maybe$Nothing;
						default:
							return $elm$core$Maybe$Nothing;
					}
				}()))
		]);
};
var $author$project$Resource$Resource$viewEnabledCheckbox = function (params) {
	var enabled = params.fJ;
	var id = params.L;
	var clickHandler = function () {
		switch (enabled) {
			case 0:
				return _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							$author$project$Message$Message$VersionToggle(id)))
					]);
			case 1:
				return _List_Nil;
			default:
				return _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							$author$project$Message$Message$VersionToggle(id)))
					]);
		}
	}();
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Toggle Resource Version Enabled'),
			_Utils_ap(
				$author$project$Resource$Styles$enabledCheckbox(params),
				clickHandler)),
		function () {
			switch (enabled) {
				case 0:
					return _List_Nil;
				case 1:
					return _List_fromArray(
						[
							$author$project$Views$Spinner$spinner(
							{ef: '6.25px', cg: 12.5})
						]);
				default:
					return _List_Nil;
			}
		}());
};
var $author$project$Message$Message$PinButton = function (a) {
	return {$: 14, a: a};
};
var $author$project$Resource$Styles$pinButton = function (pinState) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$sectionHeader),
			A2(
			$elm$html$Html$Attributes$style,
			'border',
			'1px solid ' + $author$project$Resource$Styles$borderColor(pinState)),
			A2($elm$html$Html$Attributes$style, 'margin-right', '5px'),
			A2($elm$html$Html$Attributes$style, 'width', '25px'),
			A2($elm$html$Html$Attributes$style, 'height', '25px'),
			A2($elm$html$Html$Attributes$style, 'background-repeat', 'no-repeat'),
			A2($elm$html$Html$Attributes$style, 'background-position', '50% 50%'),
			A2($elm$html$Html$Attributes$style, 'position', 'relative'),
			A2(
			$elm$html$Html$Attributes$style,
			'cursor',
			function () {
				switch (pinState.$) {
					case 0:
						return 'pointer';
					case 1:
						return 'pointer';
					case 2:
						return 'pointer';
					case 3:
						return 'default';
					case 4:
						return 'default';
					default:
						return 'default';
				}
			}()),
			A2(
			$elm$html$Html$Attributes$style,
			'background-image',
			$author$project$Assets$backgroundImage(
				function () {
					if (pinState.$ === 5) {
						return $elm$core$Maybe$Nothing;
					} else {
						return $elm$core$Maybe$Just($author$project$Assets$PinIconWhite);
					}
				}()))
		]);
};
var $author$project$Resource$Styles$pinButtonTooltip = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
		A2($elm$html$Html$Attributes$style, 'bottom', '25px'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$tooltipBackground),
		A2($elm$html$Html$Attributes$style, 'z-index', '2'),
		A2($elm$html$Html$Attributes$style, 'padding', '5px'),
		A2($elm$html$Html$Attributes$style, 'width', '170px')
	]);
var $author$project$Resource$Resource$viewPinButton = function (_v0) {
	var versionID = _v0.h7;
	var pinState = _v0._;
	var hovered = _v0.d0;
	var eventHandlers = function () {
		switch (pinState.$) {
			case 0:
				return _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							$author$project$Message$Message$PinButton(versionID)))
					]);
			case 1:
				return _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							$author$project$Message$Message$PinButton(versionID)))
					]);
			case 2:
				return _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							$author$project$Message$Message$PinButton(versionID)))
					]);
			case 3:
				return _List_fromArray(
					[
						$elm$html$Html$Events$onMouseOver(
						$author$project$Message$Message$Hover(
							$elm$core$Maybe$Just(
								$author$project$Message$Message$PinButton(versionID)))),
						$elm$html$Html$Events$onMouseOut(
						$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
					]);
			case 4:
				return _List_Nil;
			default:
				return _List_Nil;
		}
	}();
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Pin Resource Version'),
			_Utils_ap(
				$author$project$Resource$Styles$pinButton(pinState),
				eventHandlers)),
		function () {
			switch (pinState.$) {
				case 3:
					return A2(
						$author$project$HoverState$isHovered,
						$author$project$Message$Message$PinButton(versionID),
						hovered) ? _List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							$author$project$Resource$Styles$pinButtonTooltip,
							_List_fromArray(
								[
									$elm$html$Html$text('enable via pipeline config')
								]))
						]) : _List_Nil;
				case 5:
					return _List_fromArray(
						[
							$author$project$Views$Spinner$spinner(
							{ef: '6.25px', cg: 12.5})
						]);
				default:
					return _List_Nil;
			}
		}());
};
var $author$project$Resource$Resource$listToMap = function (builds) {
	var insertBuild = F2(
		function (build, dict) {
			var jobName = function () {
				var _v1 = build.gF;
				if (_v1.$ === 1) {
					return '';
				} else {
					var job = _v1.a;
					return job.d7;
				}
			}();
			var oldList = A2($elm$core$Dict$get, jobName, dict);
			var newList = function () {
				if (oldList.$ === 1) {
					return _List_fromArray(
						[build]);
				} else {
					var list = oldList.a;
					return _Utils_ap(
						list,
						_List_fromArray(
							[build]));
				}
			}();
			return A3($elm$core$Dict$insert, jobName, newList, dict);
		});
	return A3($elm$core$List$foldr, insertBuild, $elm$core$Dict$empty, builds);
};
var $author$project$Resource$Resource$viewBuildsByJob = F2(
	function (buildDict, jobName) {
		var oneBuildToLi = function (build) {
			var _v1 = build.gF;
			if (_v1.$ === 1) {
				return A2(
					$elm$html$Html$li,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							$author$project$Concourse$BuildStatus$show(build.hH))
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('#' + build.bX)
						]));
			} else {
				var job = _v1.a;
				var link = $author$project$Routes$Build(
					{
						y: $author$project$Routes$HighlightNothing,
						L: {ff: build.bX, d7: job.d7, c_: job.c_, dh: job.dh}
					});
				return A2(
					$elm$html$Html$li,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							$author$project$Concourse$BuildStatus$show(build.hH))
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$a,
							_List_fromArray(
								[
									$author$project$StrictEvents$onLeftClick(
									$author$project$Message$Message$GoToRoute(link)),
									$elm$html$Html$Attributes$href(
									$author$project$Routes$toString(link))
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('#' + build.bX)
								]))
						]));
			}
		};
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$h3,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('man pas ansi-bright-black-bg')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(jobName)
					])),
				A2(
				$elm$html$Html$ul,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('builds-list')
					]),
				function () {
					var _v0 = A2($elm$core$Dict$get, jobName, buildDict);
					if (_v0.$ === 1) {
						return _List_Nil;
					} else {
						var buildList = _v0.a;
						return A2($elm$core$List$map, oneBuildToLi, buildList);
					}
				}())
			]);
	});
var $author$project$Resource$Resource$viewBuilds = function (buildDict) {
	return A2(
		$elm$core$List$concatMap,
		$author$project$Resource$Resource$viewBuildsByJob(buildDict),
		$elm$core$Dict$keys(buildDict));
};
var $author$project$Resource$Resource$viewMetadataField = function (field) {
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$dt,
			_List_Nil,
			_List_fromArray(
				[
					$elm$html$Html$text(field.bX)
				])),
			A2(
			$elm$html$Html$dd,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$pre,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('metadata-field')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(field.h6)
						]))
				]))
		]);
};
var $author$project$Resource$Resource$viewMetadata = function (metadata) {
	return A2(
		$elm$html$Html$dl,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('build-metadata')
			]),
		A2($elm$core$List$concatMap, $author$project$Resource$Resource$viewMetadataField, metadata));
};
var $author$project$Resource$Resource$viewVersionBody = function (_v0) {
	var inputTo = _v0.gn;
	var outputOf = _v0.g4;
	var metadata = _v0.gN;
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'display', 'flex'),
				A2($elm$html$Html$Attributes$style, 'padding', '5px 10px')
			]),
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('vri')
					]),
				$elm$core$List$concat(
					_List_fromArray(
						[
							_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'line-height', '25px')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('inputs to')
									]))
							]),
							$author$project$Resource$Resource$viewBuilds(
							$author$project$Resource$Resource$listToMap(inputTo))
						]))),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('vri')
					]),
				$elm$core$List$concat(
					_List_fromArray(
						[
							_List_fromArray(
							[
								A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'line-height', '25px')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('outputs of')
									]))
							]),
							$author$project$Resource$Resource$viewBuilds(
							$author$project$Resource$Resource$listToMap(outputOf))
						]))),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('vri metadata-container')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('list-collapsable-title')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('metadata')
							])),
						$author$project$Resource$Resource$viewMetadata(metadata)
					]))
			]));
};
var $author$project$Message$Message$VersionHeader = function (a) {
	return {$: 37, a: a};
};
var $author$project$Resource$Styles$versionHeader = function (pinnedState) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$sectionHeader),
			A2(
			$elm$html$Html$Attributes$style,
			'border',
			'1px solid ' + $author$project$Resource$Styles$borderColor(pinnedState)),
			A2($elm$html$Html$Attributes$style, 'padding-left', '10px'),
			A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
			A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
			A2($elm$html$Html$Attributes$style, 'align-items', 'center')
		]);
};
var $author$project$Resource$Resource$viewVersionHeader = function (_v0) {
	var id = _v0.L;
	var version = _v0.dn;
	var pinnedState = _v0.eu;
	return A2(
		$elm$html$Html$div,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Events$onClick(
				$author$project$Message$Message$Click(
					$author$project$Message$Message$VersionHeader(id))),
			$author$project$Resource$Styles$versionHeader(pinnedState)),
		_List_fromArray(
			[
				A2($author$project$Resource$Resource$viewVersion, _List_Nil, version)
			]));
};
var $author$project$Resource$Resource$viewVersionedResource = function (_v0) {
	var version = _v0.dn;
	var hovered = _v0.d0;
	var archived = _v0.e5;
	return A2(
		$elm$html$Html$li,
		function () {
			var _v1 = _Utils_Tuple2(version._, version.fJ);
			switch (_v1.a.$) {
				case 4:
					var _v2 = _v1.a;
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'opacity', '0.5')
						]);
				case 2:
					var _v3 = _v1.a;
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'opacity', '0.5')
						]);
				default:
					if (_v1.b === 2) {
						var _v4 = _v1.b;
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'opacity', '0.5')
							]);
					} else {
						return _List_Nil;
					}
			}
		}(),
		A2(
			$elm$core$List$cons,
			A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'display', 'flex'),
						A2($elm$html$Html$Attributes$style, 'margin', '5px 0px')
					]),
				_Utils_ap(
					archived ? _List_Nil : _List_fromArray(
						[
							$author$project$Resource$Resource$viewEnabledCheckbox(
							{fJ: version.fJ, L: version.L, _: version._}),
							$author$project$Resource$Resource$viewPinButton(
							{d0: hovered, _: version._, h7: version.L})
						]),
					_List_fromArray(
						[
							$author$project$Resource$Resource$viewVersionHeader(
							{L: version.L, eu: version._, dn: version.dn})
						]))),
			version.fQ ? _List_fromArray(
				[
					$author$project$Resource$Resource$viewVersionBody(
					{gn: version.gn, gN: version.gN, g4: version.g4})
				]) : _List_Nil));
};
var $author$project$Resource$Resource$viewVersionedResources = F2(
	function (_v0, model) {
		var hovered = _v0.d0;
		var pipelines = _v0.he;
		var archived = A2($author$project$Resource$Resource$isPipelineArchived, pipelines, model.hj);
		return A2(
			$elm$html$Html$ul,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('list list-collapsable list-enableDisable resource-versions')
				]),
			A2(
				$elm$core$List$map,
				function (v) {
					return $author$project$Resource$Resource$viewVersionedResource(
						{e5: archived, d0: hovered, hc: model.hc, dn: v});
				},
				$author$project$Resource$Resource$versions(model)));
	});
var $author$project$Resource$Resource$body = F2(
	function (session, model) {
		var sectionModel = {dv: model.dv, fm: model.fm, J: model.J, d0: session.d0, dh: model.hj.dh, bB: session.bB};
		var archived = A2($author$project$Resource$Resource$isPipelineArchived, session.he, model.hj);
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('body'),
				$author$project$Resource$Styles$body),
			_Utils_ap(
				_Utils_eq(model.hc, $author$project$Pinned$NotPinned) ? (archived ? _List_Nil : _List_fromArray(
					[
						$author$project$Resource$Resource$checkSection(sectionModel)
					])) : _List_fromArray(
					[
						A2($author$project$Resource$Resource$pinTools, session, model)
					]),
				_List_fromArray(
					[
						A2($author$project$Resource$Resource$viewVersionedResources, session, model)
					])));
	});
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $author$project$Resource$Styles$headerHeight = 60;
var $author$project$Resource$Styles$headerBar = _List_fromArray(
	[
		A2(
		$elm$html$Html$Attributes$style,
		'height',
		$elm$core$String$fromInt($author$project$Resource$Styles$headerHeight) + 'px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'stretch'),
		A2($elm$html$Html$Attributes$style, 'background-color', $author$project$Colors$secondaryTopBar)
	]);
var $author$project$Resource$Styles$headerLastCheckedSection = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
		A2($elm$html$Html$Attributes$style, 'margin-left', '24px')
	]);
var $author$project$Resource$Styles$headerResourceName = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'margin-left', '18px'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'center')
	]);
var $author$project$Message$Message$PaginationButton = function (a) {
	return {$: 36, a: a};
};
var $author$project$Resource$Styles$pagination = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'stretch'),
		A2($elm$html$Html$Attributes$style, 'margin-left', 'auto')
	]);
var $author$project$Resource$Resource$paginationMenu = F2(
	function (_v0, model) {
		var hovered = _v0.d0;
		var previousButtonEventHandler = function () {
			var _v4 = model.r.g6.br;
			if (_v4.$ === 1) {
				return _List_Nil;
			} else {
				var pp = _v4.a;
				return _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							$author$project$Message$Message$PaginationButton(pp)))
					]);
			}
		}();
		var nextButtonEventHandler = function () {
			var _v3 = model.r.g6.bh;
			if (_v3.$ === 1) {
				return _List_Nil;
			} else {
				var np = _v3.a;
				var updatedPage = _Utils_update(
					np,
					{ec: 100});
				return _List_fromArray(
					[
						$elm$html$Html$Events$onClick(
						$author$project$Message$Message$Click(
							$author$project$Message$Message$PaginationButton(updatedPage)))
					]);
			}
		}();
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('pagination'),
				$author$project$Resource$Styles$pagination),
			_List_fromArray(
				[
					function () {
					var _v1 = model.r.g6.br;
					if (_v1.$ === 1) {
						return A2(
							$elm$html$Html$div,
							$author$project$Concourse$Pagination$chevronContainer,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									$author$project$Concourse$Pagination$chevronLeft(
										{fJ: false, d0: false}),
									_List_Nil)
								]));
					} else {
						var page = _v1.a;
						return A2(
							$elm$html$Html$div,
							_Utils_ap(
								_List_fromArray(
									[
										$elm$html$Html$Events$onMouseEnter(
										$author$project$Message$Message$Hover(
											$elm$core$Maybe$Just($author$project$Message$Message$PreviousPageButton))),
										$elm$html$Html$Events$onMouseLeave(
										$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
									]),
								_Utils_ap($author$project$Concourse$Pagination$chevronContainer, previousButtonEventHandler)),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$a,
									_Utils_ap(
										_List_fromArray(
											[
												$elm$html$Html$Attributes$href(
												$author$project$Routes$toString(
													$author$project$Routes$Resource(
														{
															L: model.hj,
															aX: $elm$core$Maybe$Just(page)
														}))),
												A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Previous Page')
											]),
										$author$project$Concourse$Pagination$chevronLeft(
											{
												fJ: true,
												d0: A2($author$project$HoverState$isHovered, $author$project$Message$Message$PreviousPageButton, hovered)
											})),
									_List_Nil)
								]));
					}
				}(),
					function () {
					var _v2 = model.r.g6.bh;
					if (_v2.$ === 1) {
						return A2(
							$elm$html$Html$div,
							$author$project$Concourse$Pagination$chevronContainer,
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									$author$project$Concourse$Pagination$chevronRight(
										{fJ: false, d0: false}),
									_List_Nil)
								]));
					} else {
						var page = _v2.a;
						return A2(
							$elm$html$Html$div,
							_Utils_ap(
								_List_fromArray(
									[
										$elm$html$Html$Events$onMouseEnter(
										$author$project$Message$Message$Hover(
											$elm$core$Maybe$Just($author$project$Message$Message$NextPageButton))),
										$elm$html$Html$Events$onMouseLeave(
										$author$project$Message$Message$Hover($elm$core$Maybe$Nothing))
									]),
								_Utils_ap($author$project$Concourse$Pagination$chevronContainer, nextButtonEventHandler)),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$a,
									_Utils_ap(
										_List_fromArray(
											[
												$elm$html$Html$Attributes$href(
												$author$project$Routes$toString(
													$author$project$Routes$Resource(
														{
															L: model.hj,
															aX: $elm$core$Maybe$Just(page)
														}))),
												A2($elm$html$Html$Attributes$attribute, 'aria-label', 'Next Page')
											]),
										$author$project$Concourse$Pagination$chevronRight(
											{
												fJ: true,
												d0: A2($author$project$HoverState$isHovered, $author$project$Message$Message$NextPageButton, hovered)
											})),
									_List_Nil)
								]));
					}
				}()
				]));
	});
var $elm$svg$Svg$use = $elm$svg$Svg$trustedNode('use');
var $author$project$Resource$Resource$viewLastChecked = F3(
	function (timeZone, now, date) {
		var ago = A2($author$project$Duration$between, date, now);
		return A2(
			$elm$html$Html$table,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('last-checked')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$tr,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$td,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text('checked')
								])),
							A2(
							$elm$html$Html$td,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$title(
									A2($author$project$Resource$Resource$formatDate, timeZone, date))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$span,
									_List_Nil,
									_List_fromArray(
										[
											$elm$html$Html$text(
											$author$project$Duration$format(ago) + ' ago')
										]))
								]))
						]))
				]));
	});
var $elm$svg$Svg$Attributes$xlinkHref = function (value) {
	return A3(
		_VirtualDom_attributeNS,
		'http://www.w3.org/1999/xlink',
		'xlink:href',
		_VirtualDom_noJavaScriptUri(value));
};
var $author$project$Resource$Resource$header = F2(
	function (session, model) {
		var iconView = function () {
			var _v1 = model.gh;
			if (!_v1.$) {
				var icon = _v1.a;
				return A2(
					$elm$svg$Svg$svg,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'height', '24px'),
							A2($elm$html$Html$Attributes$style, 'width', '24px'),
							A2($elm$html$Html$Attributes$style, 'margin-left', '-6px'),
							A2($elm$html$Html$Attributes$style, 'margin-right', '10px'),
							$elm$svg$Svg$Attributes$fill('white')
						]),
					_List_fromArray(
						[
							A2(
							$elm$svg$Svg$use,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$xlinkHref('#' + (icon + '-svg-icon'))
								]),
							_List_Nil)
						]));
			} else {
				return $elm$html$Html$text('');
			}
		}();
		var archived = A2($author$project$Resource$Resource$isPipelineArchived, session.he, model.hj);
		var lastCheckedView = function () {
			var _v0 = _Utils_Tuple3(model.en, model.gI, archived);
			if (((!_v0.a.$) && (!_v0.b.$)) && (!_v0.c)) {
				var now = _v0.a.a;
				var date = _v0.b.a;
				return A3($author$project$Resource$Resource$viewLastChecked, session.eW, now, date);
			} else {
				return $elm$html$Html$text('');
			}
		}();
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('page-header'),
				$author$project$Resource$Styles$headerBar),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$h1,
					$author$project$Resource$Styles$headerResourceName,
					_List_fromArray(
						[
							iconView,
							$elm$html$Html$text(model.hj.hk)
						])),
					A2(
					$elm$html$Html$div,
					$author$project$Resource$Styles$headerLastCheckedSection,
					_List_fromArray(
						[lastCheckedView])),
					A2($author$project$Resource$Resource$paginationMenu, session, model)
				]));
	});
var $author$project$Resource$Resource$view = F2(
	function (session, model) {
		var route = $author$project$Routes$Resource(
			{L: model.hj, aX: $elm$core$Maybe$Nothing});
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$id('page-including-top-bar'),
				$author$project$Views$Styles$pageIncludingTopBar),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('top-bar-app'),
						$author$project$Views$Styles$topBar(false)),
					_List_fromArray(
						[
							$author$project$SideBar$SideBar$hamburgerMenu(session),
							$author$project$Views$TopBar$concourseLogo,
							$author$project$Views$TopBar$breadcrumbs(route),
							A2($author$project$Login$Login$view, session.bB, model)
						])),
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('page-below-top-bar'),
						$author$project$Views$Styles$pageBelowTopBar(route)),
					_List_fromArray(
						[
							A2(
							$author$project$SideBar$SideBar$view,
							session,
							$elm$core$Maybe$Just(
								{c_: model.hj.c_, dh: model.hj.dh})),
							_Utils_eq(
							model.bk,
							$elm$core$Result$Err(0)) ? $elm$html$Html$text('') : A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'flex-grow', '1'),
									A2($elm$html$Html$Attributes$style, 'display', 'flex'),
									A2($elm$html$Html$Attributes$style, 'flex-direction', 'column')
								]),
							_List_fromArray(
								[
									A2($author$project$Resource$Resource$header, session, model),
									A2($author$project$Resource$Resource$body, session, model)
								]))
						]))
				]));
	});
var $author$project$SubPage$SubPage$view = F2(
	function (session, mdl) {
		var userState = session.bB;
		switch (mdl.$) {
			case 0:
				var model = mdl.a;
				return _Utils_Tuple2(
					$author$project$Build$Build$documentTitle(model),
					A2($author$project$Build$Build$view, session, model));
			case 1:
				var model = mdl.a;
				return _Utils_Tuple2(
					$author$project$Job$Job$documentTitle(model),
					A2($author$project$Job$Job$view, session, model));
			case 3:
				var model = mdl.a;
				return _Utils_Tuple2(
					$author$project$Pipeline$Pipeline$documentTitle(model),
					A2($author$project$Pipeline$Pipeline$view, session, model));
			case 2:
				var model = mdl.a;
				return _Utils_Tuple2(
					$author$project$Resource$Resource$documentTitle(model),
					A2($author$project$Resource$Resource$view, session, model));
			case 5:
				var model = mdl.a;
				return _Utils_Tuple2(
					$author$project$Dashboard$Dashboard$documentTitle,
					A2($author$project$Dashboard$Dashboard$view, session, model));
			case 4:
				var model = mdl.a;
				return _Utils_Tuple2(
					$author$project$NotFound$NotFound$documentTitle,
					A2($author$project$NotFound$NotFound$view, session, model));
			default:
				var model = mdl.a;
				return _Utils_Tuple2(
					$author$project$FlySuccess$FlySuccess$documentTitle,
					A2($author$project$FlySuccess$FlySuccess$view, userState, model));
		}
	});
var $author$project$Tooltip$position = F2(
	function (_v0, _v1) {
		var direction = _v0.dH;
		var alignment = _v0.e4;
		var element = _v1.fH;
		var viewport = _v1.ia;
		var target = element;
		var vertical = function () {
			var _v8 = _Utils_Tuple2(direction, alignment);
			if (!_v8.a.$) {
				var _v9 = _v8.a;
				return _List_fromArray(
					[
						A2(
						$elm$html$Html$Attributes$style,
						'bottom',
						$elm$core$String$fromFloat(viewport.be - target.$8) + 'px')
					]);
			} else {
				switch (_v8.b.$) {
					case 0:
						var _v10 = _v8.b;
						return _List_fromArray(
							[
								A2(
								$elm$html$Html$Attributes$style,
								'top',
								$elm$core$String$fromFloat(target.$8) + 'px')
							]);
					case 1:
						var height = _v8.b.a;
						return _List_fromArray(
							[
								A2(
								$elm$html$Html$Attributes$style,
								'top',
								$elm$core$String$fromFloat(target.$8 + ((target.be - height) / 2)) + 'px')
							]);
					default:
						var _v11 = _v8.b;
						return _List_fromArray(
							[
								A2(
								$elm$html$Html$Attributes$style,
								'bottom',
								$elm$core$String$fromFloat((viewport.be - target.$8) - target.be) + 'px')
							]);
				}
			}
		}();
		var horizontal = function () {
			var _v2 = _Utils_Tuple2(direction, alignment);
			if (!_v2.a.$) {
				switch (_v2.b.$) {
					case 0:
						var _v3 = _v2.a;
						var _v4 = _v2.b;
						return _List_fromArray(
							[
								A2(
								$elm$html$Html$Attributes$style,
								'left',
								$elm$core$String$fromFloat(target.$7) + 'px')
							]);
					case 1:
						var _v5 = _v2.a;
						var width = _v2.b.a;
						return _List_fromArray(
							[
								A2(
								$elm$html$Html$Attributes$style,
								'left',
								$elm$core$String$fromFloat(target.$7 + ((target.e$ - width) / 2)) + 'px')
							]);
					default:
						var _v6 = _v2.a;
						var _v7 = _v2.b;
						return _List_fromArray(
							[
								A2(
								$elm$html$Html$Attributes$style,
								'right',
								$elm$core$String$fromFloat((viewport.e$ - target.$7) - target.e$) + 'px')
							]);
				}
			} else {
				var offset = _v2.a.a;
				return _List_fromArray(
					[
						A2(
						$elm$html$Html$Attributes$style,
						'left',
						$elm$core$String$fromFloat((target.$7 + target.e$) + offset) + 'px')
					]);
			}
		}();
		return _Utils_ap(
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'position', 'fixed'),
					A2($elm$html$Html$Attributes$style, 'z-index', '100')
				]),
			_Utils_ap(vertical, horizontal));
	});
var $author$project$Tooltip$arrowView = F3(
	function (_v0, target, _v1) {
		var direction = _v0.dH;
		var size = _v1.hA;
		var color = _v1.ft;
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				function () {
					if (!direction.$) {
						return _List_fromArray(
							[
								A2(
								$elm$html$Html$Attributes$style,
								'border-top',
								$elm$core$String$fromFloat(size) + ('px solid ' + color)),
								A2(
								$elm$html$Html$Attributes$style,
								'border-left',
								$elm$core$String$fromFloat(size) + 'px solid transparent'),
								A2(
								$elm$html$Html$Attributes$style,
								'border-right',
								$elm$core$String$fromFloat(size) + 'px solid transparent'),
								A2(
								$elm$html$Html$Attributes$style,
								'margin-bottom',
								'-' + ($elm$core$String$fromFloat(size) + 'px'))
							]);
					} else {
						return _List_fromArray(
							[
								A2(
								$elm$html$Html$Attributes$style,
								'border-right',
								$elm$core$String$fromFloat(size) + ('px solid ' + color)),
								A2(
								$elm$html$Html$Attributes$style,
								'border-top',
								$elm$core$String$fromFloat(size) + 'px solid transparent'),
								A2(
								$elm$html$Html$Attributes$style,
								'border-bottom',
								$elm$core$String$fromFloat(size) + 'px solid transparent'),
								A2(
								$elm$html$Html$Attributes$style,
								'margin-left',
								'-' + ($elm$core$String$fromFloat(size) + 'px'))
							]);
					}
				}(),
				A2(
					$author$project$Tooltip$position,
					{
						e4: $author$project$Tooltip$Middle(2 * size),
						dH: direction
					},
					target)),
			_List_Nil);
	});
var $author$project$Tooltip$view = F2(
	function (_v0, _v1) {
		var hovered = _v0.d0;
		var body = _v1.N;
		var attachPosition = _v1.fa;
		var arrow = _v1.e8;
		var _v2 = _Utils_Tuple2(hovered, arrow);
		if (_v2.a.$ === 3) {
			var _v3 = _v2.a;
			var target = _v3.b;
			var a = _v2.b;
			return A2(
				$elm$html$Html$div,
				A2($author$project$Tooltip$position, attachPosition, target),
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$withDefault,
						$elm$html$Html$text(''),
						A2(
							$elm$core$Maybe$map,
							A2($author$project$Tooltip$arrowView, attachPosition, target),
							a)),
						body
					]));
		} else {
			return $elm$html$Html$text('');
		}
	});
var $author$project$Application$Application$view = function (model) {
	var _v0 = A2($author$project$SubPage$SubPage$view, model.e, model.o);
	var title = _v0.a;
	var body = _v0.b;
	return {
		N: A2(
			$elm$core$List$map,
			$elm$html$Html$map($author$project$Message$TopLevelMessage$Update),
			_List_fromArray(
				[
					A2(
					$elm$core$Maybe$withDefault,
					$elm$html$Html$text(''),
					A2(
						$elm$core$Maybe$map,
						$author$project$Tooltip$view(model.e),
						A2($author$project$SubPage$SubPage$tooltip, model.o, model.e))),
					A2(
					$elm$core$Maybe$withDefault,
					$elm$html$Html$text(''),
					A2(
						$elm$core$Maybe$map,
						$author$project$Tooltip$view(model.e),
						$author$project$SideBar$SideBar$tooltip(model.e))),
					A2(
					$elm$html$Html$div,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$Attributes$id('page-wrapper'),
						A2(
							$elm$core$List$cons,
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							model.e.cu ? $author$project$Application$Styles$disableInteraction : _List_Nil)),
					_List_fromArray(
						[body]))
				])),
		hW: title + ' - Concourse'
	};
};
var $author$project$Main$view = function (model) {
	return $author$project$Application$Application$view(model.ax);
};
var $author$project$Main$main = $elm$browser$Browser$application(
	{
		gk: $author$project$Main$init,
		g0: $author$project$Application$Application$locationMsg,
		g1: A2($elm$core$Basics$composeR, $author$project$Message$Subscription$UrlRequest, $author$project$Message$TopLevelMessage$DeliveryReceived),
		hL: A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.ax;
			},
			A2($elm$core$Basics$composeR, $author$project$Application$Application$subscriptions, $author$project$Main$subscriptionsToSub)),
		h3: $author$project$Main$update,
		h9: $author$project$Main$view
	});
_Platform_export({'Main':{'init':$author$project$Main$main(
	A2(
		$elm$json$Json$Decode$andThen,
		function (turbulenceImgSrc) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (pipelineRunningKeyframes) {
					return A2(
						$elm$json$Json$Decode$andThen,
						function (notFoundImgSrc) {
							return A2(
								$elm$json$Json$Decode$andThen,
								function (csrfToken) {
									return A2(
										$elm$json$Json$Decode$andThen,
										function (authToken) {
											return $elm$json$Json$Decode$succeed(
												{cm: authToken, aI: csrfToken, aU: notFoundImgSrc, c$: pipelineRunningKeyframes, dk: turbulenceImgSrc});
										},
										A2($elm$json$Json$Decode$field, 'authToken', $elm$json$Json$Decode$string));
								},
								A2($elm$json$Json$Decode$field, 'csrfToken', $elm$json$Json$Decode$string));
						},
						A2($elm$json$Json$Decode$field, 'notFoundImgSrc', $elm$json$Json$Decode$string));
				},
				A2($elm$json$Json$Decode$field, 'pipelineRunningKeyframes', $elm$json$Json$Decode$string));
		},
		A2($elm$json$Json$Decode$field, 'turbulenceImgSrc', $elm$json$Json$Decode$string)))(0)}});}(this));